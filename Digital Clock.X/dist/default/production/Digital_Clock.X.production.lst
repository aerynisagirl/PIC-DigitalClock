

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Apr 23 09:03:57 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     	;# 
    23  0001                     	;# 
    24  0002                     	;# 
    25  0003                     	;# 
    26  0004                     	;# 
    27  0005                     	;# 
    28  0006                     	;# 
    29  0007                     	;# 
    30  0008                     	;# 
    31  0009                     	;# 
    32  000A                     	;# 
    33  000B                     	;# 
    34  000C                     	;# 
    35  000D                     	;# 
    36  000E                     	;# 
    37  0010                     	;# 
    38  0011                     	;# 
    39  0012                     	;# 
    40  0014                     	;# 
    41  0015                     	;# 
    42  0016                     	;# 
    43  0016                     	;# 
    44  0017                     	;# 
    45  0018                     	;# 
    46  0019                     	;# 
    47  001A                     	;# 
    48  001B                     	;# 
    49  001C                     	;# 
    50  008C                     	;# 
    51  008D                     	;# 
    52  008E                     	;# 
    53  0090                     	;# 
    54  0091                     	;# 
    55  0092                     	;# 
    56  0094                     	;# 
    57  0095                     	;# 
    58  0096                     	;# 
    59  0097                     	;# 
    60  0098                     	;# 
    61  0099                     	;# 
    62  009A                     	;# 
    63  009B                     	;# 
    64  009B                     	;# 
    65  009C                     	;# 
    66  009D                     	;# 
    67  009E                     	;# 
    68  009F                     	;# 
    69  010C                     	;# 
    70  010D                     	;# 
    71  010E                     	;# 
    72  0111                     	;# 
    73  0112                     	;# 
    74  0113                     	;# 
    75  0114                     	;# 
    76  0115                     	;# 
    77  0116                     	;# 
    78  0117                     	;# 
    79  0118                     	;# 
    80  0119                     	;# 
    81  011D                     	;# 
    82  011D                     	;# 
    83  011E                     	;# 
    84  011F                     	;# 
    85  018C                     	;# 
    86  018D                     	;# 
    87  0191                     	;# 
    88  0191                     	;# 
    89  0192                     	;# 
    90  0193                     	;# 
    91  0193                     	;# 
    92  0193                     	;# 
    93  0194                     	;# 
    94  0195                     	;# 
    95  0196                     	;# 
    96  0197                     	;# 
    97  0199                     	;# 
    98  0199                     	;# 
    99  0199                     	;# 
   100  019A                     	;# 
   101  019A                     	;# 
   102  019A                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019B                     	;# 
   107  019B                     	;# 
   108  019C                     	;# 
   109  019C                     	;# 
   110  019C                     	;# 
   111  019D                     	;# 
   112  019D                     	;# 
   113  019D                     	;# 
   114  019E                     	;# 
   115  019E                     	;# 
   116  019E                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  019F                     	;# 
   121  019F                     	;# 
   122  020C                     	;# 
   123  020D                     	;# 
   124  020E                     	;# 
   125  0210                     	;# 
   126  0211                     	;# 
   127  0211                     	;# 
   128  0212                     	;# 
   129  0212                     	;# 
   130  0213                     	;# 
   131  0213                     	;# 
   132  0214                     	;# 
   133  0214                     	;# 
   134  0215                     	;# 
   135  0215                     	;# 
   136  0215                     	;# 
   137  0216                     	;# 
   138  0216                     	;# 
   139  0217                     	;# 
   140  0217                     	;# 
   141  028C                     	;# 
   142  028D                     	;# 
   143  028E                     	;# 
   144  0291                     	;# 
   145  0291                     	;# 
   146  0292                     	;# 
   147  0293                     	;# 
   148  0298                     	;# 
   149  0298                     	;# 
   150  0299                     	;# 
   151  029A                     	;# 
   152  030C                     	;# 
   153  030D                     	;# 
   154  030E                     	;# 
   155  038C                     	;# 
   156  038D                     	;# 
   157  038E                     	;# 
   158  0390                     	;# 
   159  0391                     	;# 
   160  0392                     	;# 
   161  0393                     	;# 
   162  0394                     	;# 
   163  0395                     	;# 
   164  0396                     	;# 
   165  0397                     	;# 
   166  0398                     	;# 
   167  0399                     	;# 
   168  039D                     	;# 
   169  039E                     	;# 
   170  039F                     	;# 
   171  0511                     	;# 
   172  0513                     	;# 
   173  051A                     	;# 
   174  0811                     	;# 
   175  0812                     	;# 
   176  0813                     	;# 
   177  0814                     	;# 
   178  0815                     	;# 
   179  0816                     	;# 
   180  0817                     	;# 
   181  0818                     	;# 
   182  0819                     	;# 
   183  081A                     	;# 
   184  081B                     	;# 
   185  081C                     	;# 
   186  081D                     	;# 
   187  081E                     	;# 
   188  081F                     	;# 
   189  0820                     	;# 
   190  0821                     	;# 
   191  0821                     	;# 
   192  0822                     	;# 
   193  0823                     	;# 
   194  0823                     	;# 
   195  0824                     	;# 
   196  0825                     	;# 
   197  0825                     	;# 
   198  0826                     	;# 
   199  0827                     	;# 
   200  0827                     	;# 
   201  0828                     	;# 
   202  0829                     	;# 
   203  082A                     	;# 
   204  082B                     	;# 
   205  082C                     	;# 
   206  082D                     	;# 
   207  082E                     	;# 
   208  082F                     	;# 
   209  0831                     	;# 
   210  0832                     	;# 
   211  0833                     	;# 
   212  0834                     	;# 
   213  0835                     	;# 
   214  0836                     	;# 
   215  0837                     	;# 
   216  0838                     	;# 
   217  0839                     	;# 
   218  083A                     	;# 
   219  083B                     	;# 
   220  083C                     	;# 
   221  083D                     	;# 
   222  083E                     	;# 
   223  083F                     	;# 
   224  0840                     	;# 
   225  0841                     	;# 
   226  0841                     	;# 
   227  0842                     	;# 
   228  0843                     	;# 
   229  0843                     	;# 
   230  0844                     	;# 
   231  0845                     	;# 
   232  0845                     	;# 
   233  0846                     	;# 
   234  0847                     	;# 
   235  0847                     	;# 
   236  0848                     	;# 
   237  0849                     	;# 
   238  084A                     	;# 
   239  084B                     	;# 
   240  084C                     	;# 
   241  084D                     	;# 
   242  084E                     	;# 
   243  084F                     	;# 
   244  0FE4                     	;# 
   245  0FE5                     	;# 
   246  0FE6                     	;# 
   247  0FE7                     	;# 
   248  0FE8                     	;# 
   249  0FE9                     	;# 
   250  0FEA                     	;# 
   251  0FEB                     	;# 
   252  0FED                     	;# 
   253  0FEE                     	;# 
   254  0FEF                     	;# 
   255                           
   256                           	psect	idataBANK0
   257  01B6                     __pidataBANK0:	
   258                           
   259                           ;initializer for _DISPLAY_MAPPING
   260  01B6  34B7               	retlw	183
   261  01B7  3424               	retlw	36
   262  01B8  3473               	retlw	115
   263  01B9  3476               	retlw	118
   264  01BA  34E4               	retlw	228
   265  01BB  34D6               	retlw	214
   266  01BC  34D7               	retlw	215
   267  01BD  3434               	retlw	52
   268  01BE  34F7               	retlw	247
   269  01BF  34F6               	retlw	246
   270  01C0  3408               	retlw	8
   271                           
   272                           	psect	nvBANK0
   273  003A                     __pnvBANK0:	
   274  003A                     _setTimer:	
   275  003A                     	ds	2
   276  000B                     _INTCON	set	11
   277  000C                     _PORTA	set	12
   278  0018                     _T1CON	set	24
   279  0017                     _TMR1H	set	23
   280  0016                     _TMR1L	set	22
   281  005A                     _TMR0IF	set	90
   282  0088                     _TMR1IF	set	136
   283  0095                     _OPTION_REG	set	149
   284  0099                     _OSCCON	set	153
   285  0091                     _PIE1	set	145
   286  008C                     _TRISA	set	140
   287  008D                     _TRISB	set	141
   288  010C                     _LATA	set	268
   289  010D                     _LATB	set	269
   290  018C                     _ANSELA	set	396
   291  018D                     _ANSELB	set	397
   292  020C                     _WPUA	set	524
   293  020D                     _WPUB	set	525
   294                           
   295                           ; #config settings
   296  0000                     
   297                           	psect	cinit
   298  0022                     start_initialization:	
   299  0022                     __initialization:	
   300                           
   301                           ; Clear objects allocated to COMMON
   302  0022  01FD               	clrf	__pbssCOMMON& (0+127)
   303                           
   304                           ; Clear objects allocated to BANK0
   305  0023  01AB               	clrf	__pbssBANK0& (0+127)
   306  0024  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   307  0025  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   308  0026  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   309  0027  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   310  0028  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   311  0029  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   312  002A  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   313                           
   314                           ; Initialize objects allocated to BANK0
   315  002B  30B6               	movlw	low __pidataBANK0
   316  002C  0084               	movwf	4
   317  002D  3081               	movlw	(high __pidataBANK0)| (0+128)
   318  002E  0085               	movwf	5
   319  002F  3020               	movlw	low __pdataBANK0
   320  0030  0086               	movwf	6
   321  0031  3000               	movlw	high __pdataBANK0
   322  0032  0087               	movwf	7
   323  0033  300B               	movlw	11
   324  0034  3181  21C1         	fcall	init_ram
   325  0036                     end_of_initialization:	
   326                           ;End of C runtime variable initialization code
   327                           
   328  0036                     __end_of__initialization:	
   329  0036  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   330  0037  0020               	movlb	0
   331  0038  3181  29C7         	ljmp	_main	;jump to C main() function
   332                           
   333                           	psect	bssCOMMON
   334  007D                     __pbssCOMMON:	
   335  007D                     _timeMinutes:	
   336  007D                     	ds	1
   337                           
   338                           	psect	bssBANK0
   339  002B                     __pbssBANK0:	
   340  002B                     _displayValue:	
   341  002B                     	ds	5
   342  0030                     _timeHours:	
   343  0030                     	ds	1
   344  0031                     _timeSeconds:	
   345  0031                     	ds	1
   346  0032                     _displayDigit:	
   347  0032                     	ds	1
   348                           
   349                           	psect	dataBANK0
   350  0020                     __pdataBANK0:	
   351  0020                     _DISPLAY_MAPPING:	
   352  0020                     	ds	11
   353                           
   354                           	psect	inittext
   355  01C1                     init_ram:	
   356  01C1  00FE               	movwf	126
   357  01C2                     initloop:	
   358  01C2  0012               	moviw fsr0++
   359  01C3  001E               	movwi fsr1++
   360  01C4  0BFE               	decfsz	126,f
   361  01C5  29C2               	goto	initloop
   362  01C6  3400               	retlw	0
   363                           
   364                           	psect	cstackCOMMON
   365  0070                     __pcstackCOMMON:	
   366  0070                     ?_setup:	
   367  0070                     ?_main:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_updateClock:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ??_updateClock:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_multiplexDisplay:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ??_multiplexDisplay:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?_updateDisplay:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ?_onInterrupt:	
   386                           ; 0 bytes @ 0x0
   387                           
   388  0070                     ?___awmod:	
   389                           ; 0 bytes @ 0x0
   390                           
   391  0070                     ___awmod@divisor:	
   392                           ; 2 bytes @ 0x0
   393                           
   394                           
   395                           ; 2 bytes @ 0x0
   396  0070                     	ds	2
   397  0072                     ___awmod@dividend:	
   398                           
   399                           ; 2 bytes @ 0x2
   400  0072                     	ds	2
   401  0074                     ??___awmod:	
   402                           
   403                           ; 0 bytes @ 0x4
   404  0074                     	ds	1
   405  0075                     ___awmod@counter:	
   406                           
   407                           ; 1 bytes @ 0x5
   408  0075                     	ds	1
   409  0076                     ___awmod@sign:	
   410                           
   411                           ; 1 bytes @ 0x6
   412  0076                     	ds	1
   413  0077                     ?___awdiv:	
   414  0077                     ___awdiv@divisor:	
   415                           ; 2 bytes @ 0x7
   416                           
   417                           
   418                           ; 2 bytes @ 0x7
   419  0077                     	ds	2
   420  0079                     ___awdiv@dividend:	
   421                           
   422                           ; 2 bytes @ 0x9
   423  0079                     	ds	2
   424  007B                     ??___awdiv:	
   425                           
   426                           ; 0 bytes @ 0xB
   427  007B                     	ds	1
   428  007C                     ??_onInterrupt:	
   429                           
   430                           ; 0 bytes @ 0xC
   431  007C                     	ds	1
   432                           
   433                           	psect	cstackBANK0
   434  0033                     __pcstackBANK0:	
   435  0033                     ___awdiv@counter:	
   436                           
   437                           ; 1 bytes @ 0x0
   438  0033                     	ds	1
   439  0034                     ___awdiv@sign:	
   440                           
   441                           ; 1 bytes @ 0x1
   442  0034                     	ds	1
   443  0035                     ___awdiv@quotient:	
   444                           
   445                           ; 2 bytes @ 0x2
   446  0035                     	ds	2
   447  0037                     ??_updateDisplay:	
   448                           
   449                           ; 0 bytes @ 0x4
   450  0037                     	ds	3
   451  003A                     ??_setup:	
   452  003A                     ??_main:	
   453                           ; 0 bytes @ 0x7
   454                           
   455                           
   456                           	psect	maintext
   457  01C7                     __pmaintext:	
   458                           ; 0 bytes @ 0x7
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   461 ;;
   462 ;; *************** function _main *****************
   463 ;; Defined at:
   464 ;;		line 114 in file "Main.c"
   465 ;; Parameters:    Size  Location     Type
   466 ;;		None
   467 ;; Auto vars:     Size  Location     Type
   468 ;;		None
   469 ;; Return value:  Size  Location     Type
   470 ;;		None               void
   471 ;; Registers used:
   472 ;;		wreg, status,2, status,0, pclath, cstack
   473 ;; Tracked objects:
   474 ;;		On entry : B1F/0
   475 ;;		On exit  : 0/0
   476 ;;		Unchanged: 0/0
   477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   478 ;;      Params:         0       0       0       0       0       0       0       0
   479 ;;      Locals:         0       0       0       0       0       0       0       0
   480 ;;      Temps:          0       0       0       0       0       0       0       0
   481 ;;      Totals:         0       0       0       0       0       0       0       0
   482 ;;Total ram usage:        0 bytes
   483 ;; Hardware stack levels required when called:    4
   484 ;; This function calls:
   485 ;;		_setup
   486 ;; This function is called by:
   487 ;;		Startup code after reset
   488 ;; This function uses a non-reentrant model
   489 ;;
   490                           
   491                           
   492                           ;psect for function _main
   493  01C7                     _main:	
   494                           
   495                           ;Main.c: 115: setup();
   496                           
   497                           ;incstack = 0
   498                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   499  01C7  3181  214C  3181   	fcall	_setup
   500  01CA                     l56:	
   501                           ;Main.c: 118: while (1) {
   502                           
   503  01CA  29CA               	goto	l56
   504  01CB                     __end_of_main:	
   505                           
   506                           	psect	text1
   507  014C                     __ptext1:	
   508 ;; *************** function _setup *****************
   509 ;; Defined at:
   510 ;;		line 78 in file "Main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;		None               void
   517 ;; Registers used:
   518 ;;		wreg, status,2
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   524 ;;      Params:         0       0       0       0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used:    1
   530 ;; Hardware stack levels required when called:    3
   531 ;; This function calls:
   532 ;;		Nothing
   533 ;; This function is called by:
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _setup
   540  014C                     _setup:	
   541                           
   542                           ;Main.c: 80: OSCCON = 0x68;
   543                           
   544                           ;incstack = 0
   545                           ; Regs used in _setup: [wreg+status,2]
   546  014C  3068               	movlw	104
   547  014D  0021               	movlb	1	; select bank1
   548  014E  0099               	movwf	25	;volatile
   549                           
   550                           ;Main.c: 81: OPTION_REG = 0x00;
   551  014F  0195               	clrf	21	;volatile
   552                           
   553                           ;Main.c: 82: TMR1H = 0x3F;
   554  0150  303F               	movlw	63
   555  0151  0020               	movlb	0	; select bank0
   556  0152  0097               	movwf	23	;volatile
   557                           
   558                           ;Main.c: 83: TMR1L = 0xFF;
   559  0153  30FF               	movlw	255
   560  0154  0096               	movwf	22	;volatile
   561                           
   562                           ;Main.c: 84: T1CON = 0x8D;
   563  0155  308D               	movlw	141
   564  0156  0098               	movwf	24	;volatile
   565                           
   566                           ;Main.c: 87: INTCON = 0xE0;
   567  0157  30E0               	movlw	224
   568  0158  008B               	movwf	11	;volatile
   569                           
   570                           ;Main.c: 88: PIE1 = 0x01;
   571  0159  3001               	movlw	1
   572  015A  0021               	movlb	1	; select bank1
   573  015B  0091               	movwf	17	;volatile
   574                           
   575                           ;Main.c: 91: TRISA = 0x00;
   576  015C  018C               	clrf	12	;volatile
   577                           
   578                           ;Main.c: 92: ANSELA = 0x00;
   579  015D  0023               	movlb	3	; select bank3
   580  015E  018C               	clrf	12	;volatile
   581                           
   582                           ;Main.c: 93: WPUA = 0x00;
   583  015F  0024               	movlb	4	; select bank4
   584  0160  018C               	clrf	12	;volatile
   585                           
   586                           ;Main.c: 94: PORTA = 0x00;
   587  0161  0020               	movlb	0	; select bank0
   588  0162  018C               	clrf	12	;volatile
   589                           
   590                           ;Main.c: 96: TRISB = 0xF0;
   591  0163  30F0               	movlw	240
   592  0164  0021               	movlb	1	; select bank1
   593  0165  008D               	movwf	13	;volatile
   594                           
   595                           ;Main.c: 97: ANSELB = 0x00;
   596  0166  0023               	movlb	3	; select bank3
   597  0167  018D               	clrf	13	;volatile
   598                           
   599                           ;Main.c: 98: WPUB = 0x30;
   600  0168  3030               	movlw	48
   601  0169  0024               	movlb	4	; select bank4
   602  016A  008D               	movwf	13	;volatile
   603                           
   604                           ;Main.c: 99: LATB = 0x00;
   605  016B  0022               	movlb	2	; select bank2
   606  016C  018D               	clrf	13	;volatile
   607                           
   608                           ;Main.c: 102: timeSeconds = 0;
   609  016D  0020               	movlb	0	; select bank0
   610  016E  01B1               	clrf	_timeSeconds
   611                           
   612                           ;Main.c: 103: timeMinutes = 0;
   613  016F  01FD               	clrf	_timeMinutes
   614                           
   615                           ;Main.c: 104: timeHours = 0;
   616  0170  01B0               	clrf	_timeHours
   617                           
   618                           ;Main.c: 106: setTimer = 150 - 1;
   619  0171  3095               	movlw	149
   620  0172  00BA               	movwf	_setTimer
   621  0173  3000               	movlw	0
   622  0174  00BB               	movwf	_setTimer+1
   623  0175  0008               	return
   624  0176                     __end_of_setup:	
   625                           
   626                           	psect	intentry
   627  0004                     __pintentry:	
   628 ;; *************** function _onInterrupt *****************
   629 ;; Defined at:
   630 ;;		line 180 in file "Main.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;		None               void
   637 ;; Registers used:
   638 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   644 ;;      Params:         0       0       0       0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0       0       0       0
   646 ;;      Temps:          1       0       0       0       0       0       0       0
   647 ;;      Totals:         1       0       0       0       0       0       0       0
   648 ;;Total ram usage:        1 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    2
   651 ;; This function calls:
   652 ;;		_multiplexDisplay
   653 ;;		_updateClock
   654 ;;		_updateDisplay
   655 ;; This function is called by:
   656 ;;		Interrupt level 1
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660  0004                     _onInterrupt:	
   661                           
   662                           ;incstack = 0
   663                           ; Regs used in _onInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   664  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   665  0005  3180               	pagesel	$
   666  0006  0020               	movlb	0	; select bank0
   667  0007  087F               	movf	127,w
   668  0008  00FC               	movwf	??_onInterrupt
   669                           
   670                           ;Main.c: 182: if (TMR1IF) {
   671  0009  1C11               	btfss	17,0	;volatile
   672  000A  2816               	goto	i1l866
   673                           
   674                           ;Main.c: 183: TMR1IF = 0x00;
   675  000B  1011               	bcf	17,0	;volatile
   676                           
   677                           ;Main.c: 186: TMR1H = 0x3F;
   678  000C  303F               	movlw	63
   679  000D  0097               	movwf	23	;volatile
   680                           
   681                           ;Main.c: 187: TMR1L = 0xFF;
   682  000E  30FF               	movlw	255
   683  000F  0096               	movwf	22	;volatile
   684                           
   685                           ;Main.c: 190: updateClock();
   686  0010  3181  2199  3180   	fcall	_updateClock
   687                           
   688                           ;Main.c: 191: updateDisplay();
   689  0013  3180  203A  3180   	fcall	_updateDisplay
   690  0016                     i1l866:	
   691                           
   692                           ;Main.c: 192: }
   693                           ;Main.c: 195: if (TMR0IF) {
   694  0016  1D0B               	btfss	11,2	;volatile
   695  0017  281B               	goto	i1l80
   696                           
   697                           ;Main.c: 196: TMR0IF = 0x00;
   698  0018  110B               	bcf	11,2	;volatile
   699                           
   700                           ;Main.c: 199: multiplexDisplay();
   701  0019  3181  2176         	fcall	_multiplexDisplay
   702  001B                     i1l80:	
   703  001B  087C               	movf	??_onInterrupt,w
   704  001C  0020               	movlb	0	; select bank0
   705  001D  00FF               	movwf	127
   706  001E  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   707  001F  0009               	retfie
   708  0020                     __end_of_onInterrupt:	
   709                           
   710                           	psect	text3
   711  003A                     __ptext3:	
   712 ;; *************** function _updateDisplay *****************
   713 ;; Defined at:
   714 ;;		line 160 in file "Main.c"
   715 ;; Parameters:    Size  Location     Type
   716 ;;		None
   717 ;; Auto vars:     Size  Location     Type
   718 ;;		None
   719 ;; Return value:  Size  Location     Type
   720 ;;		None               void
   721 ;; Registers used:
   722 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   723 ;; Tracked objects:
   724 ;;		On entry : 0/0
   725 ;;		On exit  : 0/0
   726 ;;		Unchanged: 0/0
   727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   728 ;;      Params:         0       0       0       0       0       0       0       0
   729 ;;      Locals:         0       0       0       0       0       0       0       0
   730 ;;      Temps:          0       3       0       0       0       0       0       0
   731 ;;      Totals:         0       3       0       0       0       0       0       0
   732 ;;Total ram usage:        3 bytes
   733 ;; Hardware stack levels used:    1
   734 ;; Hardware stack levels required when called:    1
   735 ;; This function calls:
   736 ;;		___awdiv
   737 ;;		___awmod
   738 ;; This function is called by:
   739 ;;		_onInterrupt
   740 ;; This function uses a non-reentrant model
   741 ;;
   742                           
   743                           
   744                           ;psect for function _updateDisplay
   745  003A                     _updateDisplay:	
   746                           
   747                           ;Main.c: 162: if (timeSeconds % 2) {
   748                           
   749                           ;incstack = 0
   750                           ; Regs used in _updateDisplay: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   751  003A  0020               	movlb	0	; select bank0
   752  003B  1C31               	btfss	_timeSeconds,0
   753  003C  2842               	goto	i1l844
   754                           
   755                           ;Main.c: 163: displayValue[0] = DISPLAY_MAPPING[10];
   756  003D  082A               	movf	_DISPLAY_MAPPING+10,w
   757  003E  00B7               	movwf	??_updateDisplay
   758  003F  0837               	movf	??_updateDisplay,w
   759  0040  00AB               	movwf	_displayValue
   760                           
   761                           ;Main.c: 164: } else {
   762  0041  2843               	goto	i1l846
   763  0042                     i1l844:	
   764                           
   765                           ;Main.c: 165: displayValue[0] = 0x00;
   766  0042  01AB               	clrf	_displayValue
   767  0043                     i1l846:	
   768                           
   769                           ;Main.c: 166: }
   770                           ;Main.c: 169: displayValue[1] = DISPLAY_MAPPING[timeHours % 100 / 10];
   771  0043  300A               	movlw	10
   772  0044  00F7               	movwf	___awdiv@divisor
   773  0045  3000               	movlw	0
   774  0046  00F8               	movwf	___awdiv@divisor+1
   775  0047  0830               	movf	_timeHours,w
   776  0048  00B7               	movwf	??_updateDisplay
   777  0049  01B8               	clrf	??_updateDisplay+1
   778  004A  0837               	movf	??_updateDisplay,w
   779  004B  00F2               	movwf	___awmod@dividend
   780  004C  0838               	movf	??_updateDisplay+1,w
   781  004D  00F3               	movwf	___awmod@dividend+1
   782  004E  3064               	movlw	100
   783  004F  00F0               	movwf	___awmod@divisor
   784  0050  3000               	movlw	0
   785  0051  00F1               	movwf	___awmod@divisor+1
   786  0052  3181  2107  3180   	fcall	___awmod
   787  0055  0871               	movf	?___awmod+1,w
   788  0056  00FA               	movwf	___awdiv@dividend+1
   789  0057  0870               	movf	?___awmod,w
   790  0058  00F9               	movwf	___awdiv@dividend
   791  0059  3180  20B5  3180   	fcall	___awdiv
   792  005C  0877               	movf	?___awdiv,w
   793  005D  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   794  005E  0086               	movwf	6
   795  005F  0187               	clrf	7
   796  0060  0801               	movf	1,w
   797  0061  0020               	movlb	0	; select bank0
   798  0062  00B9               	movwf	??_updateDisplay+2
   799  0063  0839               	movf	??_updateDisplay+2,w
   800  0064  00AC               	movwf	_displayValue+1
   801                           
   802                           ;Main.c: 170: displayValue[2] = DISPLAY_MAPPING[timeHours % 10];
   803  0065  300A               	movlw	10
   804  0066  00F0               	movwf	___awmod@divisor
   805  0067  3000               	movlw	0
   806  0068  00F1               	movwf	___awmod@divisor+1
   807  0069  0830               	movf	_timeHours,w
   808  006A  00B7               	movwf	??_updateDisplay
   809  006B  01B8               	clrf	??_updateDisplay+1
   810  006C  0837               	movf	??_updateDisplay,w
   811  006D  00F2               	movwf	___awmod@dividend
   812  006E  0838               	movf	??_updateDisplay+1,w
   813  006F  00F3               	movwf	___awmod@dividend+1
   814  0070  3181  2107  3180   	fcall	___awmod
   815  0073  0870               	movf	?___awmod,w
   816  0074  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   817  0075  0086               	movwf	6
   818  0076  0187               	clrf	7
   819  0077  0801               	movf	1,w
   820  0078  0020               	movlb	0	; select bank0
   821  0079  00B9               	movwf	??_updateDisplay+2
   822  007A  0839               	movf	??_updateDisplay+2,w
   823  007B  00AD               	movwf	_displayValue+2
   824                           
   825                           ;Main.c: 171: displayValue[3] = DISPLAY_MAPPING[timeMinutes % 100 / 10];
   826  007C  300A               	movlw	10
   827  007D  00F7               	movwf	___awdiv@divisor
   828  007E  3000               	movlw	0
   829  007F  00F8               	movwf	___awdiv@divisor+1
   830  0080  087D               	movf	_timeMinutes,w
   831  0081  00B7               	movwf	??_updateDisplay
   832  0082  01B8               	clrf	??_updateDisplay+1
   833  0083  0837               	movf	??_updateDisplay,w
   834  0084  00F2               	movwf	___awmod@dividend
   835  0085  0838               	movf	??_updateDisplay+1,w
   836  0086  00F3               	movwf	___awmod@dividend+1
   837  0087  3064               	movlw	100
   838  0088  00F0               	movwf	___awmod@divisor
   839  0089  3000               	movlw	0
   840  008A  00F1               	movwf	___awmod@divisor+1
   841  008B  3181  2107  3180   	fcall	___awmod
   842  008E  0871               	movf	?___awmod+1,w
   843  008F  00FA               	movwf	___awdiv@dividend+1
   844  0090  0870               	movf	?___awmod,w
   845  0091  00F9               	movwf	___awdiv@dividend
   846  0092  3180  20B5  3180   	fcall	___awdiv
   847  0095  0877               	movf	?___awdiv,w
   848  0096  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   849  0097  0086               	movwf	6
   850  0098  0187               	clrf	7
   851  0099  0801               	movf	1,w
   852  009A  0020               	movlb	0	; select bank0
   853  009B  00B9               	movwf	??_updateDisplay+2
   854  009C  0839               	movf	??_updateDisplay+2,w
   855  009D  00AE               	movwf	_displayValue+3
   856                           
   857                           ;Main.c: 172: displayValue[4] = DISPLAY_MAPPING[timeMinutes % 10];
   858  009E  300A               	movlw	10
   859  009F  00F0               	movwf	___awmod@divisor
   860  00A0  3000               	movlw	0
   861  00A1  00F1               	movwf	___awmod@divisor+1
   862  00A2  087D               	movf	_timeMinutes,w
   863  00A3  00B7               	movwf	??_updateDisplay
   864  00A4  01B8               	clrf	??_updateDisplay+1
   865  00A5  0837               	movf	??_updateDisplay,w
   866  00A6  00F2               	movwf	___awmod@dividend
   867  00A7  0838               	movf	??_updateDisplay+1,w
   868  00A8  00F3               	movwf	___awmod@dividend+1
   869  00A9  3181  2107         	fcall	___awmod
   870  00AB  0870               	movf	?___awmod,w
   871  00AC  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   872  00AD  0086               	movwf	6
   873  00AE  0187               	clrf	7
   874  00AF  0801               	movf	1,w
   875  00B0  0020               	movlb	0	; select bank0
   876  00B1  00B9               	movwf	??_updateDisplay+2
   877  00B2  0839               	movf	??_updateDisplay+2,w
   878  00B3  00AF               	movwf	_displayValue+4
   879  00B4  0008               	return
   880  00B5                     __end_of_updateDisplay:	
   881                           
   882                           	psect	text4
   883  0107                     __ptext4:	
   884 ;; *************** function ___awmod *****************
   885 ;; Defined at:
   886 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   887 ;; Parameters:    Size  Location     Type
   888 ;;  divisor         2    0[COMMON] int 
   889 ;;  dividend        2    2[COMMON] int 
   890 ;; Auto vars:     Size  Location     Type
   891 ;;  sign            1    6[COMMON] unsigned char 
   892 ;;  counter         1    5[COMMON] unsigned char 
   893 ;; Return value:  Size  Location     Type
   894 ;;                  2    0[COMMON] int 
   895 ;; Registers used:
   896 ;;		wreg, status,2, status,0
   897 ;; Tracked objects:
   898 ;;		On entry : 0/0
   899 ;;		On exit  : 0/0
   900 ;;		Unchanged: 0/0
   901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   902 ;;      Params:         4       0       0       0       0       0       0       0
   903 ;;      Locals:         2       0       0       0       0       0       0       0
   904 ;;      Temps:          1       0       0       0       0       0       0       0
   905 ;;      Totals:         7       0       0       0       0       0       0       0
   906 ;;Total ram usage:        7 bytes
   907 ;; Hardware stack levels used:    1
   908 ;; This function calls:
   909 ;;		Nothing
   910 ;; This function is called by:
   911 ;;		_updateDisplay
   912 ;; This function uses a non-reentrant model
   913 ;;
   914                           
   915                           
   916                           ;psect for function ___awmod
   917  0107                     ___awmod:	
   918                           
   919                           ;incstack = 0
   920                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   921  0107  01F6               	clrf	___awmod@sign
   922  0108  1FF3               	btfss	___awmod@dividend+1,7
   923  0109  2911               	goto	i1l758
   924  010A  09F2               	comf	___awmod@dividend,f
   925  010B  09F3               	comf	___awmod@dividend+1,f
   926  010C  0AF2               	incf	___awmod@dividend,f
   927  010D  1903               	skipnz
   928  010E  0AF3               	incf	___awmod@dividend+1,f
   929  010F  01F6               	clrf	___awmod@sign
   930  0110  0AF6               	incf	___awmod@sign,f
   931  0111                     i1l758:	
   932  0111  1FF1               	btfss	___awmod@divisor+1,7
   933  0112  2918               	goto	i1l762
   934  0113  09F0               	comf	___awmod@divisor,f
   935  0114  09F1               	comf	___awmod@divisor+1,f
   936  0115  0AF0               	incf	___awmod@divisor,f
   937  0116  1903               	skipnz
   938  0117  0AF1               	incf	___awmod@divisor+1,f
   939  0118                     i1l762:	
   940  0118  0870               	movf	___awmod@divisor,w
   941  0119  0471               	iorwf	___awmod@divisor+1,w
   942  011A  1903               	btfsc	3,2
   943  011B  293F               	goto	i1l780
   944  011C  01F5               	clrf	___awmod@counter
   945  011D  0AF5               	incf	___awmod@counter,f
   946  011E                     i1l770:	
   947  011E  1BF1               	btfsc	___awmod@divisor+1,7
   948  011F  292A               	goto	i1l772
   949  0120  3001               	movlw	1
   950  0121                     u41_25:	
   951  0121  35F0               	lslf	___awmod@divisor,f
   952  0122  0DF1               	rlf	___awmod@divisor+1,f
   953  0123  0B89               	decfsz	9,f
   954  0124  2921               	goto	u41_25
   955  0125  3001               	movlw	1
   956  0126  00F4               	movwf	??___awmod
   957  0127  0874               	movf	??___awmod,w
   958  0128  07F5               	addwf	___awmod@counter,f
   959  0129  291E               	goto	i1l770
   960  012A                     i1l772:	
   961  012A  0871               	movf	___awmod@divisor+1,w
   962  012B  0273               	subwf	___awmod@dividend+1,w
   963  012C  1D03               	skipz
   964  012D  2930               	goto	u43_25
   965  012E  0870               	movf	___awmod@divisor,w
   966  012F  0272               	subwf	___awmod@dividend,w
   967  0130                     u43_25:	
   968  0130  1C03               	skipc
   969  0131  2936               	goto	i1l776
   970  0132  0870               	movf	___awmod@divisor,w
   971  0133  02F2               	subwf	___awmod@dividend,f
   972  0134  0871               	movf	___awmod@divisor+1,w
   973  0135  3BF3               	subwfb	___awmod@dividend+1,f
   974  0136                     i1l776:	
   975  0136  3001               	movlw	1
   976  0137                     u44_25:	
   977  0137  36F1               	lsrf	___awmod@divisor+1,f
   978  0138  0CF0               	rrf	___awmod@divisor,f
   979  0139  0B89               	decfsz	9,f
   980  013A  2937               	goto	u44_25
   981  013B  3001               	movlw	1
   982  013C  02F5               	subwf	___awmod@counter,f
   983  013D  1D03               	btfss	3,2
   984  013E  292A               	goto	i1l772
   985  013F                     i1l780:	
   986  013F  0876               	movf	___awmod@sign,w
   987  0140  1903               	btfsc	3,2
   988  0141  2947               	goto	i1l784
   989  0142  09F2               	comf	___awmod@dividend,f
   990  0143  09F3               	comf	___awmod@dividend+1,f
   991  0144  0AF2               	incf	___awmod@dividend,f
   992  0145  1903               	skipnz
   993  0146  0AF3               	incf	___awmod@dividend+1,f
   994  0147                     i1l784:	
   995  0147  0873               	movf	___awmod@dividend+1,w
   996  0148  00F1               	movwf	?___awmod+1
   997  0149  0872               	movf	___awmod@dividend,w
   998  014A  00F0               	movwf	?___awmod
   999  014B  0008               	return
  1000  014C                     __end_of___awmod:	
  1001                           
  1002                           	psect	text5
  1003  00B5                     __ptext5:	
  1004 ;; *************** function ___awdiv *****************
  1005 ;; Defined at:
  1006 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;  divisor         2    7[COMMON] int 
  1009 ;;  dividend        2    9[COMMON] int 
  1010 ;; Auto vars:     Size  Location     Type
  1011 ;;  quotient        2    2[BANK0 ] int 
  1012 ;;  sign            1    1[BANK0 ] unsigned char 
  1013 ;;  counter         1    0[BANK0 ] unsigned char 
  1014 ;; Return value:  Size  Location     Type
  1015 ;;                  2    7[COMMON] int 
  1016 ;; Registers used:
  1017 ;;		wreg, status,2, status,0
  1018 ;; Tracked objects:
  1019 ;;		On entry : 0/0
  1020 ;;		On exit  : 0/0
  1021 ;;		Unchanged: 0/0
  1022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1023 ;;      Params:         4       0       0       0       0       0       0       0
  1024 ;;      Locals:         0       4       0       0       0       0       0       0
  1025 ;;      Temps:          1       0       0       0       0       0       0       0
  1026 ;;      Totals:         5       4       0       0       0       0       0       0
  1027 ;;Total ram usage:        9 bytes
  1028 ;; Hardware stack levels used:    1
  1029 ;; This function calls:
  1030 ;;		Nothing
  1031 ;; This function is called by:
  1032 ;;		_updateDisplay
  1033 ;; This function uses a non-reentrant model
  1034 ;;
  1035                           
  1036                           
  1037                           ;psect for function ___awdiv
  1038  00B5                     ___awdiv:	
  1039                           
  1040                           ;incstack = 0
  1041                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1042  00B5  0020               	movlb	0	; select bank0
  1043  00B6  01B4               	clrf	___awdiv@sign
  1044  00B7  1FF8               	btfss	___awdiv@divisor+1,7
  1045  00B8  28C0               	goto	i1l714
  1046  00B9  09F7               	comf	___awdiv@divisor,f
  1047  00BA  09F8               	comf	___awdiv@divisor+1,f
  1048  00BB  0AF7               	incf	___awdiv@divisor,f
  1049  00BC  1903               	skipnz
  1050  00BD  0AF8               	incf	___awdiv@divisor+1,f
  1051  00BE  01B4               	clrf	___awdiv@sign
  1052  00BF  0AB4               	incf	___awdiv@sign,f
  1053  00C0                     i1l714:	
  1054  00C0  1FFA               	btfss	___awdiv@dividend+1,7
  1055  00C1  28CB               	goto	i1l720
  1056  00C2  09F9               	comf	___awdiv@dividend,f
  1057  00C3  09FA               	comf	___awdiv@dividend+1,f
  1058  00C4  0AF9               	incf	___awdiv@dividend,f
  1059  00C5  1903               	skipnz
  1060  00C6  0AFA               	incf	___awdiv@dividend+1,f
  1061  00C7  3001               	movlw	1
  1062  00C8  00FB               	movwf	??___awdiv
  1063  00C9  087B               	movf	??___awdiv,w
  1064  00CA  06B4               	xorwf	___awdiv@sign,f
  1065  00CB                     i1l720:	
  1066  00CB  01B5               	clrf	___awdiv@quotient
  1067  00CC  01B6               	clrf	___awdiv@quotient+1
  1068  00CD  0877               	movf	___awdiv@divisor,w
  1069  00CE  0478               	iorwf	___awdiv@divisor+1,w
  1070  00CF  1903               	btfsc	3,2
  1071  00D0  28FA               	goto	i1l742
  1072  00D1  01B3               	clrf	___awdiv@counter
  1073  00D2  0AB3               	incf	___awdiv@counter,f
  1074  00D3                     i1l730:	
  1075  00D3  1BF8               	btfsc	___awdiv@divisor+1,7
  1076  00D4  28DF               	goto	i1l732
  1077  00D5  3001               	movlw	1
  1078  00D6                     u31_25:	
  1079  00D6  35F7               	lslf	___awdiv@divisor,f
  1080  00D7  0DF8               	rlf	___awdiv@divisor+1,f
  1081  00D8  0B89               	decfsz	9,f
  1082  00D9  28D6               	goto	u31_25
  1083  00DA  3001               	movlw	1
  1084  00DB  00FB               	movwf	??___awdiv
  1085  00DC  087B               	movf	??___awdiv,w
  1086  00DD  07B3               	addwf	___awdiv@counter,f
  1087  00DE  28D3               	goto	i1l730
  1088  00DF                     i1l732:	
  1089  00DF  3001               	movlw	1
  1090  00E0                     u33_25:	
  1091  00E0  35B5               	lslf	___awdiv@quotient,f
  1092  00E1  0DB6               	rlf	___awdiv@quotient+1,f
  1093  00E2  0B89               	decfsz	9,f
  1094  00E3  28E0               	goto	u33_25
  1095  00E4  0878               	movf	___awdiv@divisor+1,w
  1096  00E5  027A               	subwf	___awdiv@dividend+1,w
  1097  00E6  1D03               	skipz
  1098  00E7  28EA               	goto	u34_25
  1099  00E8  0877               	movf	___awdiv@divisor,w
  1100  00E9  0279               	subwf	___awdiv@dividend,w
  1101  00EA                     u34_25:	
  1102  00EA  1C03               	skipc
  1103  00EB  28F1               	goto	i1l738
  1104  00EC  0877               	movf	___awdiv@divisor,w
  1105  00ED  02F9               	subwf	___awdiv@dividend,f
  1106  00EE  0878               	movf	___awdiv@divisor+1,w
  1107  00EF  3BFA               	subwfb	___awdiv@dividend+1,f
  1108  00F0  1435               	bsf	___awdiv@quotient,0
  1109  00F1                     i1l738:	
  1110  00F1  3001               	movlw	1
  1111  00F2                     u35_25:	
  1112  00F2  36F8               	lsrf	___awdiv@divisor+1,f
  1113  00F3  0CF7               	rrf	___awdiv@divisor,f
  1114  00F4  0B89               	decfsz	9,f
  1115  00F5  28F2               	goto	u35_25
  1116  00F6  3001               	movlw	1
  1117  00F7  02B3               	subwf	___awdiv@counter,f
  1118  00F8  1D03               	btfss	3,2
  1119  00F9  28DF               	goto	i1l732
  1120  00FA                     i1l742:	
  1121  00FA  0834               	movf	___awdiv@sign,w
  1122  00FB  1903               	btfsc	3,2
  1123  00FC  2902               	goto	i1l746
  1124  00FD  09B5               	comf	___awdiv@quotient,f
  1125  00FE  09B6               	comf	___awdiv@quotient+1,f
  1126  00FF  0AB5               	incf	___awdiv@quotient,f
  1127  0100  1903               	skipnz
  1128  0101  0AB6               	incf	___awdiv@quotient+1,f
  1129  0102                     i1l746:	
  1130  0102  0836               	movf	___awdiv@quotient+1,w
  1131  0103  00F8               	movwf	?___awdiv+1
  1132  0104  0835               	movf	___awdiv@quotient,w
  1133  0105  00F7               	movwf	?___awdiv
  1134  0106  0008               	return
  1135  0107                     __end_of___awdiv:	
  1136                           
  1137                           	psect	text6
  1138  0199                     __ptext6:	
  1139 ;; *************** function _updateClock *****************
  1140 ;; Defined at:
  1141 ;;		line 124 in file "Main.c"
  1142 ;; Parameters:    Size  Location     Type
  1143 ;;		None
  1144 ;; Auto vars:     Size  Location     Type
  1145 ;;		None
  1146 ;; Return value:  Size  Location     Type
  1147 ;;		None               void
  1148 ;; Registers used:
  1149 ;;		wreg, status,2, status,0
  1150 ;; Tracked objects:
  1151 ;;		On entry : 0/0
  1152 ;;		On exit  : 0/0
  1153 ;;		Unchanged: 0/0
  1154 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1155 ;;      Params:         0       0       0       0       0       0       0       0
  1156 ;;      Locals:         0       0       0       0       0       0       0       0
  1157 ;;      Temps:          1       0       0       0       0       0       0       0
  1158 ;;      Totals:         1       0       0       0       0       0       0       0
  1159 ;;Total ram usage:        1 bytes
  1160 ;; Hardware stack levels used:    1
  1161 ;; This function calls:
  1162 ;;		Nothing
  1163 ;; This function is called by:
  1164 ;;		_onInterrupt
  1165 ;; This function uses a non-reentrant model
  1166 ;;
  1167                           
  1168                           
  1169                           ;psect for function _updateClock
  1170  0199                     _updateClock:	
  1171                           
  1172                           ;Main.c: 125: timeSeconds++;
  1173                           
  1174                           ;incstack = 0
  1175                           ; Regs used in _updateClock: [wreg+status,2+status,0]
  1176  0199  3001               	movlw	1
  1177  019A  00F0               	movwf	??_updateClock
  1178  019B  0870               	movf	??_updateClock,w
  1179  019C  0020               	movlb	0	; select bank0
  1180  019D  07B1               	addwf	_timeSeconds,f
  1181                           
  1182                           ;Main.c: 127: if (timeSeconds == 120) {
  1183  019E  3078               	movlw	120
  1184  019F  0631               	xorwf	_timeSeconds,w
  1185  01A0  1D03               	btfss	3,2
  1186  01A1  0008               	return
  1187                           
  1188                           ;Main.c: 128: timeSeconds = 0;
  1189  01A2  01B1               	clrf	_timeSeconds
  1190                           
  1191                           ;Main.c: 130: timeMinutes++;
  1192  01A3  3001               	movlw	1
  1193  01A4  00F0               	movwf	??_updateClock
  1194  01A5  0870               	movf	??_updateClock,w
  1195  01A6  07FD               	addwf	_timeMinutes,f
  1196                           
  1197                           ;Main.c: 132: if (timeMinutes == 60) {
  1198  01A7  303C               	movlw	60
  1199  01A8  067D               	xorwf	_timeMinutes,w
  1200  01A9  1D03               	btfss	3,2
  1201  01AA  0008               	return
  1202                           
  1203                           ;Main.c: 133: timeMinutes = 0;
  1204  01AB  01FD               	clrf	_timeMinutes
  1205                           
  1206                           ;Main.c: 135: timeHours++;
  1207  01AC  3001               	movlw	1
  1208  01AD  00F0               	movwf	??_updateClock
  1209  01AE  0870               	movf	??_updateClock,w
  1210  01AF  07B0               	addwf	_timeHours,f
  1211                           
  1212                           ;Main.c: 137: if (timeHours == 24) {
  1213  01B0  3018               	movlw	24
  1214  01B1  0630               	xorwf	_timeHours,w
  1215  01B2  1D03               	btfss	3,2
  1216  01B3  0008               	return
  1217                           
  1218                           ;Main.c: 138: timeHours = 0;
  1219  01B4  01B0               	clrf	_timeHours
  1220  01B5  0008               	return
  1221  01B6                     __end_of_updateClock:	
  1222                           
  1223                           	psect	text7
  1224  0176                     __ptext7:	
  1225 ;; *************** function _multiplexDisplay *****************
  1226 ;; Defined at:
  1227 ;;		line 145 in file "Main.c"
  1228 ;; Parameters:    Size  Location     Type
  1229 ;;		None
  1230 ;; Auto vars:     Size  Location     Type
  1231 ;;		None
  1232 ;; Return value:  Size  Location     Type
  1233 ;;		None               void
  1234 ;; Registers used:
  1235 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1236 ;; Tracked objects:
  1237 ;;		On entry : 0/0
  1238 ;;		On exit  : 0/0
  1239 ;;		Unchanged: 0/0
  1240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1241 ;;      Params:         0       0       0       0       0       0       0       0
  1242 ;;      Locals:         0       0       0       0       0       0       0       0
  1243 ;;      Temps:          1       0       0       0       0       0       0       0
  1244 ;;      Totals:         1       0       0       0       0       0       0       0
  1245 ;;Total ram usage:        1 bytes
  1246 ;; Hardware stack levels used:    1
  1247 ;; This function calls:
  1248 ;;		Nothing
  1249 ;; This function is called by:
  1250 ;;		_onInterrupt
  1251 ;; This function uses a non-reentrant model
  1252 ;;
  1253                           
  1254                           
  1255                           ;psect for function _multiplexDisplay
  1256  0176                     _multiplexDisplay:	
  1257                           
  1258                           ;Main.c: 146: displayDigit++;
  1259                           
  1260                           ;incstack = 0
  1261                           ; Regs used in _multiplexDisplay: [wreg+fsr1l+fsr1h+status,2+status,0]
  1262  0176  3001               	movlw	1
  1263  0177  00F0               	movwf	??_multiplexDisplay
  1264  0178  0870               	movf	??_multiplexDisplay,w
  1265  0179  0020               	movlb	0	; select bank0
  1266  017A  07B2               	addwf	_displayDigit,f
  1267                           
  1268                           ;Main.c: 149: if (displayDigit > 4) {
  1269  017B  3005               	movlw	5
  1270  017C  0232               	subwf	_displayDigit,w
  1271  017D  1C03               	skipc
  1272  017E  2983               	goto	i1l836
  1273                           
  1274                           ;Main.c: 150: displayDigit = 0;
  1275  017F  01B2               	clrf	_displayDigit
  1276                           
  1277                           ;Main.c: 151: LATB = 0x00;
  1278  0180  0022               	movlb	2	; select bank2
  1279  0181  018D               	clrf	13	;volatile
  1280                           
  1281                           ;Main.c: 152: } else {
  1282  0182  2990               	goto	i1l838
  1283  0183                     i1l836:	
  1284                           
  1285                           ;Main.c: 153: LATB = 1 << displayDigit - 1;
  1286  0183  3001               	movlw	1
  1287  0184  00F0               	movwf	??_multiplexDisplay
  1288  0185  0020               	movlb	0	; select bank0
  1289  0186  0832               	movf	_displayDigit,w
  1290  0187  3EFF               	addlw	-1
  1291  0188  0A89               	incf	9,f
  1292  0189  298B               	goto	u51_24
  1293  018A                     u51_25:	
  1294  018A  35F0               	lslf	??_multiplexDisplay,f
  1295  018B                     u51_24:	
  1296  018B  0B89               	decfsz	9,f
  1297  018C  298A               	goto	u51_25
  1298  018D  0870               	movf	??_multiplexDisplay,w
  1299  018E  0022               	movlb	2	; select bank2
  1300  018F  008D               	movwf	13	;volatile
  1301  0190                     i1l838:	
  1302                           
  1303                           ;Main.c: 154: }
  1304                           ;Main.c: 156: LATA = ~displayValue[displayDigit];
  1305  0190  0020               	movlb	0	; select bank0
  1306  0191  0832               	movf	_displayDigit,w
  1307  0192  3E2B               	addlw	(low (_displayValue| 0))& (0+255)
  1308  0193  0086               	movwf	6
  1309  0194  0187               	clrf	7
  1310  0195  0901               	comf	1,w
  1311  0196  0022               	movlb	2	; select bank2
  1312  0197  008C               	movwf	12	;volatile
  1313  0198  0008               	return
  1314  0199                     __end_of_multiplexDisplay:	
  1315  007E                     btemp	set	126	;btemp
  1316  007E                     int$flags	set	126
  1317  007E                     wtemp	set	126
  1318  007E                     wtemp0	set	126
  1319  0080                     wtemp1	set	128
  1320  0082                     wtemp2	set	130
  1321  0084                     wtemp3	set	132
  1322  0086                     wtemp4	set	134
  1323  0088                     wtemp5	set	136
  1324  007F                     wtemp6	set	127
  1325  007E                     ttemp	set	126
  1326  007E                     ttemp0	set	126
  1327  0081                     ttemp1	set	129
  1328  0084                     ttemp2	set	132
  1329  0087                     ttemp3	set	135
  1330  007F                     ttemp4	set	127
  1331  007E                     ltemp	set	126
  1332  007E                     ltemp0	set	126
  1333  0082                     ltemp1	set	130
  1334  0086                     ltemp2	set	134
  1335  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         9
    Persistent  2
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      14
    BANK0            80      7      28
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _onInterrupt in COMMON

    _updateDisplay->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _onInterrupt in BANK0

    _onInterrupt->_updateDisplay
    _updateDisplay->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _onInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _onInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _onInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _onInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _onInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _onInterrupt in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _onInterrupt                                          1     1      0    1232
                                             12 COMMON     1     1      0
                   _multiplexDisplay
                        _updateClock
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (3) _updateDisplay                                        3     3      0    1232
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateClock                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _multiplexDisplay                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _onInterrupt (ROOT)
   _multiplexDisplay
   _updateClock
   _updateDisplay
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      D       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      2A       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      1C       6       35.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      2A      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Apr 23 09:03:57 2016

              __CFG_CP$OFF 0000                         l56 01CA               ___awdiv@sign 0034  
             __CFG_CPD$OFF 0000               ___awmod@sign 0076               __CFG_BORV$HI 0000  
                      wreg 0009               __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000  
                     _LATA 010C                       _LATB 010D                       _PIE1 0091  
                     i1l80 001B             ?_updateDisplay 0070                       _WPUA 020C  
                     _WPUB 020D               __CFG_WRT$OFF 0000              __CFG_FCMEN$ON 0000  
                     _main 01C7                       fsr0h 0005                       fsr1h 0007  
                     fsr0l 0004                       indf1 0001                       fsr1l 0006  
                     btemp 007E              __CFG_BOREN$ON 0000                       ltemp 007E  
                     start 0020                       ttemp 007E                       wtemp 007E  
            __CFG_MCLRE$ON 0000               ?_onInterrupt 0070                      ?_main 0070  
          __end_of___awdiv 0107              __CFG_WDTE$OFF 0000            __end_of___awmod 014C  
          ___awdiv@divisor 0077                      _T1CON 0018                      i1l720 00CB  
                    i1l730 00D3                      i1l714 00C0                      i1l732 00DF  
                    i1l742 00FA                      i1l746 0102                      i1l738 00F1  
                    i1l770 011E                      i1l762 0118                      i1l836 0183  
                    i1l772 012A                      i1l780 013F                      i1l844 0042  
                    i1l838 0190                      i1l758 0111                      i1l846 0043  
                    i1l784 0147                      i1l776 0136                      i1l866 0016  
          ___awdiv@counter 0033                      u31_25 00D6                      _TMR1H 0017  
                    u33_25 00E0                      u41_25 0121                      _TMR1L 0016  
                    u34_25 00EA                      _PORTA 000C                      u51_24 018B  
                    u51_25 018A                      u35_25 00F2                      u43_25 0130  
                    u44_25 0137                      _TRISA 008C                      _TRISB 008D  
                    _setup 014C                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          __initialization 0022               __end_of_main 01CB                     ??_main 003A  
           __CFG_PLLEN$OFF 0000  __size_of_multiplexDisplay 0023            ??_updateDisplay 0037  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELA 018C  
                   _ANSELB 018D                     _INTCON 000B                     _OSCCON 0099  
                   _TMR0IF 005A                     _TMR1IF 0088             __CFG_PWRTE$OFF 0000  
                ??___awdiv 007B             __CFG_STVREN$ON 0000                  ??___awmod 0074  
         ___awdiv@quotient 0035            ___awmod@divisor 0070            ___awmod@counter 0075  
  __end_of__initialization 0036               ?_updateClock 0070             __pcstackCOMMON 0070  
             __pidataBANK0 01B6              __end_of_setup 0176       __size_of_onInterrupt 001C  
                  ??_setup 003A                 __pbssBANK0 002B            __CFG_VCAPEN$OFF 0000  
               __pmaintext 01C7                 __pintentry 0004           _multiplexDisplay 0176  
                  ___awdiv 00B5                    ___awmod 0107                    __ptext1 014C  
                  __ptext3 003A                    __ptext4 0107                    __ptext5 00B5  
                  __ptext6 0199                    __ptext7 0176           ___awmod@dividend 0072  
     end_of_initialization 0036                    init_ram 01C1                    initloop 01C2  
     __size_of_updateClock 001D               _displayDigit 0032               _displayValue 002B  
         __CFG_FOSC$INTOSC 0000      __end_of_updateDisplay 00B5        start_initialization 0022  
 __end_of_multiplexDisplay 0199              ??_onInterrupt 007C                __pdataBANK0 0020  
              __pbssCOMMON 007D                  ___latbits 0001              __pcstackBANK0 0033  
                __pnvBANK0 003A            _DISPLAY_MAPPING 0020                   ?___awdiv 0077  
                 ?___awmod 0070        __end_of_onInterrupt 0020             __size_of_setup 002A  
                _timeHours 0030              ??_updateClock 0070                _onInterrupt 0004  
         __size_of___awdiv 0052           __size_of___awmod 0045              __size_of_main 0004  
                 _setTimer 003A          ?_multiplexDisplay 0070                   int$flags 007E  
       ??_multiplexDisplay 0070        __end_of_updateClock 01B6     __size_of_updateDisplay 007B  
                 intlevel1 0000          __CFG_CLKOUTEN$OFF 0000                _timeMinutes 007D  
              _timeSeconds 0031                 _OPTION_REG 0095              _updateDisplay 003A  
              _updateClock 0199  
