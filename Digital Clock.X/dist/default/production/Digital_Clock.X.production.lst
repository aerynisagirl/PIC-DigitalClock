

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Sat Jun 18 10:14:47 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  0090                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0094                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0113                     	;# 
    73  0114                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0117                     	;# 
    77  0118                     	;# 
    78  0119                     	;# 
    79  011D                     	;# 
    80  011D                     	;# 
    81  011E                     	;# 
    82  011F                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0194                     	;# 
    92  0195                     	;# 
    93  0196                     	;# 
    94  0197                     	;# 
    95  0199                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019F                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  020D                     	;# 
   122  020E                     	;# 
   123  0210                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  028C                     	;# 
   140  028D                     	;# 
   141  028E                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0298                     	;# 
   147  0298                     	;# 
   148  0299                     	;# 
   149  029A                     	;# 
   150  030C                     	;# 
   151  030D                     	;# 
   152  030E                     	;# 
   153  038C                     	;# 
   154  038D                     	;# 
   155  038E                     	;# 
   156  0390                     	;# 
   157  0391                     	;# 
   158  0392                     	;# 
   159  0393                     	;# 
   160  0394                     	;# 
   161  0395                     	;# 
   162  0396                     	;# 
   163  0397                     	;# 
   164  0398                     	;# 
   165  0399                     	;# 
   166  039D                     	;# 
   167  039E                     	;# 
   168  039F                     	;# 
   169  0511                     	;# 
   170  0513                     	;# 
   171  051A                     	;# 
   172  0811                     	;# 
   173  0812                     	;# 
   174  0813                     	;# 
   175  0814                     	;# 
   176  0815                     	;# 
   177  0816                     	;# 
   178  0817                     	;# 
   179  0818                     	;# 
   180  0819                     	;# 
   181  081A                     	;# 
   182  081B                     	;# 
   183  081C                     	;# 
   184  081D                     	;# 
   185  081E                     	;# 
   186  081F                     	;# 
   187  0820                     	;# 
   188  0821                     	;# 
   189  0821                     	;# 
   190  0822                     	;# 
   191  0823                     	;# 
   192  0823                     	;# 
   193  0824                     	;# 
   194  0825                     	;# 
   195  0825                     	;# 
   196  0826                     	;# 
   197  0827                     	;# 
   198  0827                     	;# 
   199  0828                     	;# 
   200  0829                     	;# 
   201  082A                     	;# 
   202  082B                     	;# 
   203  082C                     	;# 
   204  082D                     	;# 
   205  082E                     	;# 
   206  082F                     	;# 
   207  0831                     	;# 
   208  0832                     	;# 
   209  0833                     	;# 
   210  0834                     	;# 
   211  0835                     	;# 
   212  0836                     	;# 
   213  0837                     	;# 
   214  0838                     	;# 
   215  0839                     	;# 
   216  083A                     	;# 
   217  083B                     	;# 
   218  083C                     	;# 
   219  083D                     	;# 
   220  083E                     	;# 
   221  083F                     	;# 
   222  0840                     	;# 
   223  0841                     	;# 
   224  0841                     	;# 
   225  0842                     	;# 
   226  0843                     	;# 
   227  0843                     	;# 
   228  0844                     	;# 
   229  0845                     	;# 
   230  0845                     	;# 
   231  0846                     	;# 
   232  0847                     	;# 
   233  0847                     	;# 
   234  0848                     	;# 
   235  0849                     	;# 
   236  084A                     	;# 
   237  084B                     	;# 
   238  084C                     	;# 
   239  084D                     	;# 
   240  084E                     	;# 
   241  084F                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253                           
   254                           	psect	idataBANK0
   255  01D9                     __pidataBANK0:	
   256                           
   257                           ;initializer for _DISPLAY_MAPPING
   258  01D9  34B7               	retlw	183
   259  01DA  3424               	retlw	36
   260  01DB  3473               	retlw	115
   261  01DC  3476               	retlw	118
   262  01DD  34E4               	retlw	228
   263  01DE  34D6               	retlw	214
   264  01DF  34D7               	retlw	215
   265  01E0  3434               	retlw	52
   266  01E1  34F7               	retlw	247
   267  01E2  34F6               	retlw	246
   268  01E3  3408               	retlw	8
   269  000B                     _INTCON	set	11
   270  0011                     _PIR1	set	17
   271  001B                     _PR2	set	27
   272  0018                     _T1CON	set	24
   273  001C                     _T2CON	set	28
   274  0017                     _TMR1H	set	23
   275  0016                     _TMR1L	set	22
   276  006C                     _RB4	set	108
   277  006D                     _RB5	set	109
   278  005A                     _TMR0IF	set	90
   279  0088                     _TMR1IF	set	136
   280  0089                     _TMR2IF	set	137
   281  0095                     _OPTION_REG	set	149
   282  0099                     _OSCCON	set	153
   283  0091                     _PIE1	set	145
   284  008C                     _TRISA	set	140
   285  008D                     _TRISB	set	141
   286  010C                     _LATA	set	268
   287  010D                     _LATB	set	269
   288  018C                     _ANSELA	set	396
   289  018D                     _ANSELB	set	397
   290  020C                     _WPUA	set	524
   291  020D                     _WPUB	set	525
   292                           
   293                           ; #config settings
   294  0000                     
   295                           	psect	cinit
   296  0043                     start_initialization:	
   297  0043                     __initialization:	
   298                           
   299                           ; Clear objects allocated to BANK0
   300  0043  01AB               	clrf	__pbssBANK0& (0+127)
   301  0044  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   302  0045  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   303  0046  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   304  0047  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   305  0048  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   306  0049  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   307  004A  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   308  004B  01B3               	clrf	(__pbssBANK0+8)& (0+127)
   309                           
   310                           ; Initialize objects allocated to BANK0
   311  004C  30D9               	movlw	low __pidataBANK0
   312  004D  0084               	movwf	4
   313  004E  3081               	movlw	(high __pidataBANK0)| (0+128)
   314  004F  0085               	movwf	5
   315  0050  3020               	movlw	low __pdataBANK0
   316  0051  0086               	movwf	6
   317  0052  3000               	movlw	high __pdataBANK0
   318  0053  0087               	movwf	7
   319  0054  300B               	movlw	11
   320  0055  3181  21E4         	fcall	init_ram
   321  0057                     end_of_initialization:	
   322                           ;End of C runtime variable initialization code
   323                           
   324  0057                     __end_of__initialization:	
   325  0057  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   326  0058  0020               	movlb	0
   327  0059  3181  29EA         	ljmp	_main	;jump to C main() function
   328                           
   329                           	psect	bssBANK0
   330  002B                     __pbssBANK0:	
   331  002B                     _displayValue:	
   332  002B                     	ds	5
   333  0030                     _timeHours:	
   334  0030                     	ds	1
   335  0031                     _timeMinutes:	
   336  0031                     	ds	1
   337  0032                     _timeSeconds:	
   338  0032                     	ds	1
   339  0033                     _displayDigit:	
   340  0033                     	ds	1
   341                           
   342                           	psect	dataBANK0
   343  0020                     __pdataBANK0:	
   344  0020                     _DISPLAY_MAPPING:	
   345  0020                     	ds	11
   346                           
   347                           	psect	inittext
   348  01E4                     init_ram:	
   349  01E4  00FE               	movwf	126
   350  01E5                     initloop:	
   351  01E5  0012               	moviw fsr0++
   352  01E6  001E               	movwi fsr1++
   353  01E7  0BFE               	decfsz	126,f
   354  01E8  29E5               	goto	initloop
   355  01E9  3400               	retlw	0
   356                           
   357                           	psect	cstackCOMMON
   358  0070                     __pcstackCOMMON:	
   359  0070                     ?_setup:	
   360  0070                     ?_main:	
   361                           ; 0 bytes @ 0x0
   362                           
   363  0070                     ?_updateClock:	
   364                           ; 0 bytes @ 0x0
   365                           
   366  0070                     ??_updateClock:	
   367                           ; 0 bytes @ 0x0
   368                           
   369  0070                     ?_multiplexDisplay:	
   370                           ; 0 bytes @ 0x0
   371                           
   372  0070                     ??_multiplexDisplay:	
   373                           ; 0 bytes @ 0x0
   374                           
   375  0070                     ?_updateDisplay:	
   376                           ; 0 bytes @ 0x0
   377                           
   378  0070                     ?_onInterrupt:	
   379                           ; 0 bytes @ 0x0
   380                           
   381  0070                     ?___awmod:	
   382                           ; 0 bytes @ 0x0
   383                           
   384  0070                     ___awmod@divisor:	
   385                           ; 2 bytes @ 0x0
   386                           
   387                           
   388                           ; 2 bytes @ 0x0
   389  0070                     	ds	2
   390  0072                     ___awmod@dividend:	
   391                           
   392                           ; 2 bytes @ 0x2
   393  0072                     	ds	2
   394  0074                     ??___awmod:	
   395                           
   396                           ; 0 bytes @ 0x4
   397  0074                     	ds	1
   398  0075                     ___awmod@counter:	
   399                           
   400                           ; 1 bytes @ 0x5
   401  0075                     	ds	1
   402  0076                     ___awmod@sign:	
   403                           
   404                           ; 1 bytes @ 0x6
   405  0076                     	ds	1
   406  0077                     ?___awdiv:	
   407  0077                     ___awdiv@divisor:	
   408                           ; 2 bytes @ 0x7
   409                           
   410                           
   411                           ; 2 bytes @ 0x7
   412  0077                     	ds	2
   413  0079                     ___awdiv@dividend:	
   414                           
   415                           ; 2 bytes @ 0x9
   416  0079                     	ds	2
   417  007B                     ??___awdiv:	
   418                           
   419                           ; 0 bytes @ 0xB
   420  007B                     	ds	1
   421  007C                     ??_onInterrupt:	
   422                           
   423                           ; 0 bytes @ 0xC
   424  007C                     	ds	2
   425                           
   426                           	psect	cstackBANK0
   427  0034                     __pcstackBANK0:	
   428  0034                     ___awdiv@counter:	
   429                           
   430                           ; 1 bytes @ 0x0
   431  0034                     	ds	1
   432  0035                     ___awdiv@sign:	
   433                           
   434                           ; 1 bytes @ 0x1
   435  0035                     	ds	1
   436  0036                     ___awdiv@quotient:	
   437                           
   438                           ; 2 bytes @ 0x2
   439  0036                     	ds	2
   440  0038                     ??_updateDisplay:	
   441                           
   442                           ; 0 bytes @ 0x4
   443  0038                     	ds	3
   444  003B                     ??_setup:	
   445  003B                     ??_main:	
   446                           ; 0 bytes @ 0x7
   447                           
   448                           
   449                           	psect	maintext
   450  01EA                     __pmaintext:	
   451                           ; 0 bytes @ 0x7
   452 ;;
   453 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   454 ;;
   455 ;; *************** function _main *****************
   456 ;; Defined at:
   457 ;;		line 112 in file "Main.c"
   458 ;; Parameters:    Size  Location     Type
   459 ;;		None
   460 ;; Auto vars:     Size  Location     Type
   461 ;;		None
   462 ;; Return value:  Size  Location     Type
   463 ;;		None               void
   464 ;; Registers used:
   465 ;;		wreg, status,2, status,0, pclath, cstack
   466 ;; Tracked objects:
   467 ;;		On entry : B1F/0
   468 ;;		On exit  : 0/0
   469 ;;		Unchanged: 0/0
   470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   471 ;;      Params:         0       0       0       0       0       0       0       0
   472 ;;      Locals:         0       0       0       0       0       0       0       0
   473 ;;      Temps:          0       0       0       0       0       0       0       0
   474 ;;      Totals:         0       0       0       0       0       0       0       0
   475 ;;Total ram usage:        0 bytes
   476 ;; Hardware stack levels required when called:    4
   477 ;; This function calls:
   478 ;;		_setup
   479 ;; This function is called by:
   480 ;;		Startup code after reset
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _main
   486  01EA                     _main:	
   487                           
   488                           ;Main.c: 113: setup();
   489                           
   490                           ;incstack = 0
   491                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   492  01EA  3181  216D  3181   	fcall	_setup
   493  01ED                     l64:	
   494                           ;Main.c: 116: while (1) {
   495                           
   496  01ED  29ED               	goto	l64
   497  01EE                     __end_of_main:	
   498                           
   499                           	psect	text1
   500  016D                     __ptext1:	
   501 ;; *************** function _setup *****************
   502 ;; Defined at:
   503 ;;		line 75 in file "Main.c"
   504 ;; Parameters:    Size  Location     Type
   505 ;;		None
   506 ;; Auto vars:     Size  Location     Type
   507 ;;		None
   508 ;; Return value:  Size  Location     Type
   509 ;;		None               void
   510 ;; Registers used:
   511 ;;		wreg, status,2
   512 ;; Tracked objects:
   513 ;;		On entry : 0/0
   514 ;;		On exit  : 0/0
   515 ;;		Unchanged: 0/0
   516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   517 ;;      Params:         0       0       0       0       0       0       0       0
   518 ;;      Locals:         0       0       0       0       0       0       0       0
   519 ;;      Temps:          0       0       0       0       0       0       0       0
   520 ;;      Totals:         0       0       0       0       0       0       0       0
   521 ;;Total ram usage:        0 bytes
   522 ;; Hardware stack levels used:    1
   523 ;; Hardware stack levels required when called:    3
   524 ;; This function calls:
   525 ;;		Nothing
   526 ;; This function is called by:
   527 ;;		_main
   528 ;; This function uses a non-reentrant model
   529 ;;
   530                           
   531                           
   532                           ;psect for function _setup
   533  016D                     _setup:	
   534                           
   535                           ;Main.c: 77: OSCCON = 0x70;
   536                           
   537                           ;incstack = 0
   538                           ; Regs used in _setup: [wreg+status,2]
   539  016D  3070               	movlw	112
   540  016E  0021               	movlb	1	; select bank1
   541  016F  0099               	movwf	25	;volatile
   542                           
   543                           ;Main.c: 78: OPTION_REG = 0x5F;
   544  0170  305F               	movlw	95
   545  0171  0095               	movwf	21	;volatile
   546                           
   547                           ;Main.c: 79: TMR1H = 0xFF;
   548  0172  30FF               	movlw	255
   549  0173  0020               	movlb	0	; select bank0
   550  0174  0097               	movwf	23	;volatile
   551                           
   552                           ;Main.c: 80: TMR1L = 0xFF;
   553  0175  30FF               	movlw	255
   554  0176  0096               	movwf	22	;volatile
   555                           
   556                           ;Main.c: 81: T1CON = 0x8D;
   557  0177  308D               	movlw	141
   558  0178  0098               	movwf	24	;volatile
   559                           
   560                           ;Main.c: 82: T2CON = 0x7F;
   561  0179  307F               	movlw	127
   562  017A  009C               	movwf	28	;volatile
   563                           
   564                           ;Main.c: 83: PR2 = 0x7F;;
   565  017B  307F               	movlw	127
   566  017C  009B               	movwf	27	;volatile
   567                           
   568                           ;Main.c: 86: INTCON = 0xE0;
   569  017D  30E0               	movlw	224
   570  017E  008B               	movwf	11	;volatile
   571                           
   572                           ;Main.c: 87: PIR1 = 0x00;
   573  017F  0191               	clrf	17	;volatile
   574                           
   575                           ;Main.c: 88: PIE1 = 0x03;
   576  0180  3003               	movlw	3
   577  0181  0021               	movlb	1	; select bank1
   578  0182  0091               	movwf	17	;volatile
   579                           
   580                           ;Main.c: 91: TRISA = 0x00;
   581  0183  018C               	clrf	12	;volatile
   582                           
   583                           ;Main.c: 92: ANSELA = 0x00;
   584  0184  0023               	movlb	3	; select bank3
   585  0185  018C               	clrf	12	;volatile
   586                           
   587                           ;Main.c: 93: WPUA = 0x00;
   588  0186  0024               	movlb	4	; select bank4
   589  0187  018C               	clrf	12	;volatile
   590                           
   591                           ;Main.c: 94: LATA = 0x00;
   592  0188  0022               	movlb	2	; select bank2
   593  0189  018C               	clrf	12	;volatile
   594                           
   595                           ;Main.c: 96: TRISB = 0xF0;
   596  018A  30F0               	movlw	240
   597  018B  0021               	movlb	1	; select bank1
   598  018C  008D               	movwf	13	;volatile
   599                           
   600                           ;Main.c: 97: ANSELB = 0x00;
   601  018D  0023               	movlb	3	; select bank3
   602  018E  018D               	clrf	13	;volatile
   603                           
   604                           ;Main.c: 98: WPUB = 0x30;
   605  018F  3030               	movlw	48
   606  0190  0024               	movlb	4	; select bank4
   607  0191  008D               	movwf	13	;volatile
   608                           
   609                           ;Main.c: 99: LATB = 0x00;
   610  0192  0022               	movlb	2	; select bank2
   611  0193  018D               	clrf	13	;volatile
   612                           
   613                           ;Main.c: 102: timeSeconds = 0;
   614  0194  0020               	movlb	0	; select bank0
   615  0195  01B2               	clrf	_timeSeconds
   616                           
   617                           ;Main.c: 103: timeMinutes = 0;
   618  0196  01B1               	clrf	_timeMinutes
   619                           
   620                           ;Main.c: 104: timeHours = 0;
   621  0197  01B0               	clrf	_timeHours
   622  0198  0008               	return
   623  0199                     __end_of_setup:	
   624                           
   625                           	psect	intentry
   626  0004                     __pintentry:	
   627 ;; *************** function _onInterrupt *****************
   628 ;; Defined at:
   629 ;;		line 178 in file "Main.c"
   630 ;; Parameters:    Size  Location     Type
   631 ;;		None
   632 ;; Auto vars:     Size  Location     Type
   633 ;;		None
   634 ;; Return value:  Size  Location     Type
   635 ;;		None               void
   636 ;; Registers used:
   637 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   638 ;; Tracked objects:
   639 ;;		On entry : 0/0
   640 ;;		On exit  : 0/0
   641 ;;		Unchanged: 0/0
   642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   643 ;;      Params:         0       0       0       0       0       0       0       0
   644 ;;      Locals:         0       0       0       0       0       0       0       0
   645 ;;      Temps:          2       0       0       0       0       0       0       0
   646 ;;      Totals:         2       0       0       0       0       0       0       0
   647 ;;Total ram usage:        2 bytes
   648 ;; Hardware stack levels used:    1
   649 ;; Hardware stack levels required when called:    2
   650 ;; This function calls:
   651 ;;		_multiplexDisplay
   652 ;;		_updateClock
   653 ;;		_updateDisplay
   654 ;; This function is called by:
   655 ;;		Interrupt level 1
   656 ;; This function uses a non-reentrant model
   657 ;;
   658                           
   659  0004                     _onInterrupt:	
   660                           
   661                           ;incstack = 0
   662                           ; Regs used in _onInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   663  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   664  0005  3180               	pagesel	$
   665  0006  0020               	movlb	0	; select bank0
   666  0007  087F               	movf	127,w
   667  0008  00FD               	movwf	??_onInterrupt+1
   668                           
   669                           ;Main.c: 180: if (TMR1IF) {
   670  0009  1C11               	btfss	17,0	;volatile
   671  000A  2816               	goto	i1l885
   672                           
   673                           ;Main.c: 181: TMR1IF = 0x00;
   674  000B  1011               	bcf	17,0	;volatile
   675                           
   676                           ;Main.c: 184: TMR1H = 0xBF;
   677  000C  30BF               	movlw	191
   678  000D  0097               	movwf	23	;volatile
   679                           
   680                           ;Main.c: 185: TMR1L = 0xFD;
   681  000E  30FD               	movlw	253
   682  000F  0096               	movwf	22	;volatile
   683                           
   684                           ;Main.c: 188: updateClock();
   685  0010  3181  21BC  3180   	fcall	_updateClock
   686                           
   687                           ;Main.c: 189: updateDisplay();
   688  0013  3180  205B  3180   	fcall	_updateDisplay
   689  0016                     i1l885:	
   690                           
   691                           ;Main.c: 190: }
   692                           ;Main.c: 193: if (TMR0IF) {
   693  0016  1D0B               	btfss	11,2	;volatile
   694  0017  281C               	goto	i1l891
   695                           
   696                           ;Main.c: 194: TMR0IF = 0x00;
   697  0018  110B               	bcf	11,2	;volatile
   698                           
   699                           ;Main.c: 197: multiplexDisplay();
   700  0019  3181  2199  3180   	fcall	_multiplexDisplay
   701  001C                     i1l891:	
   702                           
   703                           ;Main.c: 198: }
   704                           ;Main.c: 201: if (TMR2IF) {
   705  001C  0020               	movlb	0	; select bank0
   706  001D  1C91               	btfss	17,1	;volatile
   707  001E  283C               	goto	i1l93
   708                           
   709                           ;Main.c: 202: TMR2IF = 0x00;
   710  001F  1091               	bcf	17,1	;volatile
   711                           
   712                           ;Main.c: 205: if (!RB4 && RB5) {
   713  0020  1E0D               	btfss	13,4	;volatile
   714  0021  1E8D               	btfss	13,5	;volatile
   715  0022  282E               	goto	i1l903
   716                           
   717                           ;Main.c: 206: timeMinutes++;
   718  0023  3001               	movlw	1
   719  0024  00FC               	movwf	??_onInterrupt
   720  0025  087C               	movf	??_onInterrupt,w
   721  0026  07B1               	addwf	_timeMinutes,f
   722                           
   723                           ;Main.c: 209: if (timeMinutes == 60) {
   724  0027  303C               	movlw	60
   725  0028  0631               	xorwf	_timeMinutes,w
   726  0029  1903               	btfsc	3,2
   727                           
   728                           ;Main.c: 210: timeMinutes = 0;
   729  002A  01B1               	clrf	_timeMinutes
   730                           
   731                           ;Main.c: 211: }
   732                           ;Main.c: 213: updateDisplay();
   733  002B  3180  205B  3180   	fcall	_updateDisplay
   734  002E                     i1l903:	
   735                           
   736                           ;Main.c: 214: }
   737                           ;Main.c: 217: if (RB4 && !RB5) {
   738  002E  0020               	movlb	0	; select bank0
   739  002F  1A0D               	btfsc	13,4	;volatile
   740  0030  1A8D               	btfsc	13,5	;volatile
   741  0031  283C               	goto	i1l93
   742                           
   743                           ;Main.c: 218: timeHours++;
   744  0032  3001               	movlw	1
   745  0033  00FC               	movwf	??_onInterrupt
   746  0034  087C               	movf	??_onInterrupt,w
   747  0035  07B0               	addwf	_timeHours,f
   748                           
   749                           ;Main.c: 221: if (timeHours == 24) {
   750  0036  3018               	movlw	24
   751  0037  0630               	xorwf	_timeHours,w
   752  0038  1903               	btfsc	3,2
   753                           
   754                           ;Main.c: 222: timeHours = 0;
   755  0039  01B0               	clrf	_timeHours
   756                           
   757                           ;Main.c: 223: }
   758                           ;Main.c: 225: updateDisplay();
   759  003A  3180  205B         	fcall	_updateDisplay
   760  003C                     i1l93:	
   761  003C  087D               	movf	??_onInterrupt+1,w
   762  003D  0020               	movlb	0	; select bank0
   763  003E  00FF               	movwf	127
   764  003F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   765  0040  0009               	retfie
   766  0041                     __end_of_onInterrupt:	
   767                           
   768                           	psect	text3
   769  005B                     __ptext3:	
   770 ;; *************** function _updateDisplay *****************
   771 ;; Defined at:
   772 ;;		line 158 in file "Main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;		None
   777 ;; Return value:  Size  Location     Type
   778 ;;		None               void
   779 ;; Registers used:
   780 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : 0/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   786 ;;      Params:         0       0       0       0       0       0       0       0
   787 ;;      Locals:         0       0       0       0       0       0       0       0
   788 ;;      Temps:          0       3       0       0       0       0       0       0
   789 ;;      Totals:         0       3       0       0       0       0       0       0
   790 ;;Total ram usage:        3 bytes
   791 ;; Hardware stack levels used:    1
   792 ;; Hardware stack levels required when called:    1
   793 ;; This function calls:
   794 ;;		___awdiv
   795 ;;		___awmod
   796 ;; This function is called by:
   797 ;;		_onInterrupt
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _updateDisplay
   803  005B                     _updateDisplay:	
   804                           
   805                           ;Main.c: 160: if (timeSeconds % 2) {
   806                           
   807                           ;incstack = 0
   808                           ; Regs used in _updateDisplay: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   809  005B  0020               	movlb	0	; select bank0
   810  005C  1C32               	btfss	_timeSeconds,0
   811  005D  2863               	goto	i1l863
   812                           
   813                           ;Main.c: 161: displayValue[0] = DISPLAY_MAPPING[10];
   814  005E  082A               	movf	_DISPLAY_MAPPING+10,w
   815  005F  00B8               	movwf	??_updateDisplay
   816  0060  0838               	movf	??_updateDisplay,w
   817  0061  00AB               	movwf	_displayValue
   818                           
   819                           ;Main.c: 162: } else {
   820  0062  2864               	goto	i1l865
   821  0063                     i1l863:	
   822                           
   823                           ;Main.c: 163: displayValue[0] = 0x00;
   824  0063  01AB               	clrf	_displayValue
   825  0064                     i1l865:	
   826                           
   827                           ;Main.c: 164: }
   828                           ;Main.c: 167: displayValue[1] = DISPLAY_MAPPING[timeHours % 100 / 10];
   829  0064  300A               	movlw	10
   830  0065  00F7               	movwf	___awdiv@divisor
   831  0066  3000               	movlw	0
   832  0067  00F8               	movwf	___awdiv@divisor+1
   833  0068  0830               	movf	_timeHours,w
   834  0069  00B8               	movwf	??_updateDisplay
   835  006A  01B9               	clrf	??_updateDisplay+1
   836  006B  0838               	movf	??_updateDisplay,w
   837  006C  00F2               	movwf	___awmod@dividend
   838  006D  0839               	movf	??_updateDisplay+1,w
   839  006E  00F3               	movwf	___awmod@dividend+1
   840  006F  3064               	movlw	100
   841  0070  00F0               	movwf	___awmod@divisor
   842  0071  3000               	movlw	0
   843  0072  00F1               	movwf	___awmod@divisor+1
   844  0073  3181  2128  3180   	fcall	___awmod
   845  0076  0871               	movf	?___awmod+1,w
   846  0077  00FA               	movwf	___awdiv@dividend+1
   847  0078  0870               	movf	?___awmod,w
   848  0079  00F9               	movwf	___awdiv@dividend
   849  007A  3180  20D6  3180   	fcall	___awdiv
   850  007D  0877               	movf	?___awdiv,w
   851  007E  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   852  007F  0086               	movwf	6
   853  0080  0187               	clrf	7
   854  0081  0801               	movf	1,w
   855  0082  0020               	movlb	0	; select bank0
   856  0083  00BA               	movwf	??_updateDisplay+2
   857  0084  083A               	movf	??_updateDisplay+2,w
   858  0085  00AC               	movwf	_displayValue+1
   859                           
   860                           ;Main.c: 168: displayValue[2] = DISPLAY_MAPPING[timeHours % 10];
   861  0086  300A               	movlw	10
   862  0087  00F0               	movwf	___awmod@divisor
   863  0088  3000               	movlw	0
   864  0089  00F1               	movwf	___awmod@divisor+1
   865  008A  0830               	movf	_timeHours,w
   866  008B  00B8               	movwf	??_updateDisplay
   867  008C  01B9               	clrf	??_updateDisplay+1
   868  008D  0838               	movf	??_updateDisplay,w
   869  008E  00F2               	movwf	___awmod@dividend
   870  008F  0839               	movf	??_updateDisplay+1,w
   871  0090  00F3               	movwf	___awmod@dividend+1
   872  0091  3181  2128  3180   	fcall	___awmod
   873  0094  0870               	movf	?___awmod,w
   874  0095  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   875  0096  0086               	movwf	6
   876  0097  0187               	clrf	7
   877  0098  0801               	movf	1,w
   878  0099  0020               	movlb	0	; select bank0
   879  009A  00BA               	movwf	??_updateDisplay+2
   880  009B  083A               	movf	??_updateDisplay+2,w
   881  009C  00AD               	movwf	_displayValue+2
   882                           
   883                           ;Main.c: 169: displayValue[3] = DISPLAY_MAPPING[timeMinutes % 100 / 10];
   884  009D  300A               	movlw	10
   885  009E  00F7               	movwf	___awdiv@divisor
   886  009F  3000               	movlw	0
   887  00A0  00F8               	movwf	___awdiv@divisor+1
   888  00A1  0831               	movf	_timeMinutes,w
   889  00A2  00B8               	movwf	??_updateDisplay
   890  00A3  01B9               	clrf	??_updateDisplay+1
   891  00A4  0838               	movf	??_updateDisplay,w
   892  00A5  00F2               	movwf	___awmod@dividend
   893  00A6  0839               	movf	??_updateDisplay+1,w
   894  00A7  00F3               	movwf	___awmod@dividend+1
   895  00A8  3064               	movlw	100
   896  00A9  00F0               	movwf	___awmod@divisor
   897  00AA  3000               	movlw	0
   898  00AB  00F1               	movwf	___awmod@divisor+1
   899  00AC  3181  2128  3180   	fcall	___awmod
   900  00AF  0871               	movf	?___awmod+1,w
   901  00B0  00FA               	movwf	___awdiv@dividend+1
   902  00B1  0870               	movf	?___awmod,w
   903  00B2  00F9               	movwf	___awdiv@dividend
   904  00B3  3180  20D6  3180   	fcall	___awdiv
   905  00B6  0877               	movf	?___awdiv,w
   906  00B7  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   907  00B8  0086               	movwf	6
   908  00B9  0187               	clrf	7
   909  00BA  0801               	movf	1,w
   910  00BB  0020               	movlb	0	; select bank0
   911  00BC  00BA               	movwf	??_updateDisplay+2
   912  00BD  083A               	movf	??_updateDisplay+2,w
   913  00BE  00AE               	movwf	_displayValue+3
   914                           
   915                           ;Main.c: 170: displayValue[4] = DISPLAY_MAPPING[timeMinutes % 10];
   916  00BF  300A               	movlw	10
   917  00C0  00F0               	movwf	___awmod@divisor
   918  00C1  3000               	movlw	0
   919  00C2  00F1               	movwf	___awmod@divisor+1
   920  00C3  0831               	movf	_timeMinutes,w
   921  00C4  00B8               	movwf	??_updateDisplay
   922  00C5  01B9               	clrf	??_updateDisplay+1
   923  00C6  0838               	movf	??_updateDisplay,w
   924  00C7  00F2               	movwf	___awmod@dividend
   925  00C8  0839               	movf	??_updateDisplay+1,w
   926  00C9  00F3               	movwf	___awmod@dividend+1
   927  00CA  3181  2128         	fcall	___awmod
   928  00CC  0870               	movf	?___awmod,w
   929  00CD  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   930  00CE  0086               	movwf	6
   931  00CF  0187               	clrf	7
   932  00D0  0801               	movf	1,w
   933  00D1  0020               	movlb	0	; select bank0
   934  00D2  00BA               	movwf	??_updateDisplay+2
   935  00D3  083A               	movf	??_updateDisplay+2,w
   936  00D4  00AF               	movwf	_displayValue+4
   937  00D5  0008               	return
   938  00D6                     __end_of_updateDisplay:	
   939                           
   940                           	psect	text4
   941  0128                     __ptext4:	
   942 ;; *************** function ___awmod *****************
   943 ;; Defined at:
   944 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   945 ;; Parameters:    Size  Location     Type
   946 ;;  divisor         2    0[COMMON] int 
   947 ;;  dividend        2    2[COMMON] int 
   948 ;; Auto vars:     Size  Location     Type
   949 ;;  sign            1    6[COMMON] unsigned char 
   950 ;;  counter         1    5[COMMON] unsigned char 
   951 ;; Return value:  Size  Location     Type
   952 ;;                  2    0[COMMON] int 
   953 ;; Registers used:
   954 ;;		wreg, status,2, status,0
   955 ;; Tracked objects:
   956 ;;		On entry : 0/0
   957 ;;		On exit  : 0/0
   958 ;;		Unchanged: 0/0
   959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   960 ;;      Params:         4       0       0       0       0       0       0       0
   961 ;;      Locals:         2       0       0       0       0       0       0       0
   962 ;;      Temps:          1       0       0       0       0       0       0       0
   963 ;;      Totals:         7       0       0       0       0       0       0       0
   964 ;;Total ram usage:        7 bytes
   965 ;; Hardware stack levels used:    1
   966 ;; This function calls:
   967 ;;		Nothing
   968 ;; This function is called by:
   969 ;;		_updateDisplay
   970 ;; This function uses a non-reentrant model
   971 ;;
   972                           
   973                           
   974                           ;psect for function ___awmod
   975  0128                     ___awmod:	
   976                           
   977                           ;incstack = 0
   978                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   979  0128  01F6               	clrf	___awmod@sign
   980  0129  1FF3               	btfss	___awmod@dividend+1,7
   981  012A  2932               	goto	i1l785
   982  012B  09F2               	comf	___awmod@dividend,f
   983  012C  09F3               	comf	___awmod@dividend+1,f
   984  012D  0AF2               	incf	___awmod@dividend,f
   985  012E  1903               	skipnz
   986  012F  0AF3               	incf	___awmod@dividend+1,f
   987  0130  01F6               	clrf	___awmod@sign
   988  0131  0AF6               	incf	___awmod@sign,f
   989  0132                     i1l785:	
   990  0132  1FF1               	btfss	___awmod@divisor+1,7
   991  0133  2939               	goto	i1l789
   992  0134  09F0               	comf	___awmod@divisor,f
   993  0135  09F1               	comf	___awmod@divisor+1,f
   994  0136  0AF0               	incf	___awmod@divisor,f
   995  0137  1903               	skipnz
   996  0138  0AF1               	incf	___awmod@divisor+1,f
   997  0139                     i1l789:	
   998  0139  0870               	movf	___awmod@divisor,w
   999  013A  0471               	iorwf	___awmod@divisor+1,w
  1000  013B  1903               	btfsc	3,2
  1001  013C  2960               	goto	i1l807
  1002  013D  01F5               	clrf	___awmod@counter
  1003  013E  0AF5               	incf	___awmod@counter,f
  1004  013F                     i1l797:	
  1005  013F  1BF1               	btfsc	___awmod@divisor+1,7
  1006  0140  294B               	goto	i1l799
  1007  0141  3001               	movlw	1
  1008  0142                     u48_25:	
  1009  0142  35F0               	lslf	___awmod@divisor,f
  1010  0143  0DF1               	rlf	___awmod@divisor+1,f
  1011  0144  0B89               	decfsz	9,f
  1012  0145  2942               	goto	u48_25
  1013  0146  3001               	movlw	1
  1014  0147  00F4               	movwf	??___awmod
  1015  0148  0874               	movf	??___awmod,w
  1016  0149  07F5               	addwf	___awmod@counter,f
  1017  014A  293F               	goto	i1l797
  1018  014B                     i1l799:	
  1019  014B  0871               	movf	___awmod@divisor+1,w
  1020  014C  0273               	subwf	___awmod@dividend+1,w
  1021  014D  1D03               	skipz
  1022  014E  2951               	goto	u50_25
  1023  014F  0870               	movf	___awmod@divisor,w
  1024  0150  0272               	subwf	___awmod@dividend,w
  1025  0151                     u50_25:	
  1026  0151  1C03               	skipc
  1027  0152  2957               	goto	i1l803
  1028  0153  0870               	movf	___awmod@divisor,w
  1029  0154  02F2               	subwf	___awmod@dividend,f
  1030  0155  0871               	movf	___awmod@divisor+1,w
  1031  0156  3BF3               	subwfb	___awmod@dividend+1,f
  1032  0157                     i1l803:	
  1033  0157  3001               	movlw	1
  1034  0158                     u51_25:	
  1035  0158  36F1               	lsrf	___awmod@divisor+1,f
  1036  0159  0CF0               	rrf	___awmod@divisor,f
  1037  015A  0B89               	decfsz	9,f
  1038  015B  2958               	goto	u51_25
  1039  015C  3001               	movlw	1
  1040  015D  02F5               	subwf	___awmod@counter,f
  1041  015E  1D03               	btfss	3,2
  1042  015F  294B               	goto	i1l799
  1043  0160                     i1l807:	
  1044  0160  0876               	movf	___awmod@sign,w
  1045  0161  1903               	btfsc	3,2
  1046  0162  2968               	goto	i1l811
  1047  0163  09F2               	comf	___awmod@dividend,f
  1048  0164  09F3               	comf	___awmod@dividend+1,f
  1049  0165  0AF2               	incf	___awmod@dividend,f
  1050  0166  1903               	skipnz
  1051  0167  0AF3               	incf	___awmod@dividend+1,f
  1052  0168                     i1l811:	
  1053  0168  0873               	movf	___awmod@dividend+1,w
  1054  0169  00F1               	movwf	?___awmod+1
  1055  016A  0872               	movf	___awmod@dividend,w
  1056  016B  00F0               	movwf	?___awmod
  1057  016C  0008               	return
  1058  016D                     __end_of___awmod:	
  1059                           
  1060                           	psect	text5
  1061  00D6                     __ptext5:	
  1062 ;; *************** function ___awdiv *****************
  1063 ;; Defined at:
  1064 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1065 ;; Parameters:    Size  Location     Type
  1066 ;;  divisor         2    7[COMMON] int 
  1067 ;;  dividend        2    9[COMMON] int 
  1068 ;; Auto vars:     Size  Location     Type
  1069 ;;  quotient        2    2[BANK0 ] int 
  1070 ;;  sign            1    1[BANK0 ] unsigned char 
  1071 ;;  counter         1    0[BANK0 ] unsigned char 
  1072 ;; Return value:  Size  Location     Type
  1073 ;;                  2    7[COMMON] int 
  1074 ;; Registers used:
  1075 ;;		wreg, status,2, status,0
  1076 ;; Tracked objects:
  1077 ;;		On entry : 0/0
  1078 ;;		On exit  : 0/0
  1079 ;;		Unchanged: 0/0
  1080 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1081 ;;      Params:         4       0       0       0       0       0       0       0
  1082 ;;      Locals:         0       4       0       0       0       0       0       0
  1083 ;;      Temps:          1       0       0       0       0       0       0       0
  1084 ;;      Totals:         5       4       0       0       0       0       0       0
  1085 ;;Total ram usage:        9 bytes
  1086 ;; Hardware stack levels used:    1
  1087 ;; This function calls:
  1088 ;;		Nothing
  1089 ;; This function is called by:
  1090 ;;		_updateDisplay
  1091 ;; This function uses a non-reentrant model
  1092 ;;
  1093                           
  1094                           
  1095                           ;psect for function ___awdiv
  1096  00D6                     ___awdiv:	
  1097                           
  1098                           ;incstack = 0
  1099                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1100  00D6  0020               	movlb	0	; select bank0
  1101  00D7  01B5               	clrf	___awdiv@sign
  1102  00D8  1FF8               	btfss	___awdiv@divisor+1,7
  1103  00D9  28E1               	goto	i1l741
  1104  00DA  09F7               	comf	___awdiv@divisor,f
  1105  00DB  09F8               	comf	___awdiv@divisor+1,f
  1106  00DC  0AF7               	incf	___awdiv@divisor,f
  1107  00DD  1903               	skipnz
  1108  00DE  0AF8               	incf	___awdiv@divisor+1,f
  1109  00DF  01B5               	clrf	___awdiv@sign
  1110  00E0  0AB5               	incf	___awdiv@sign,f
  1111  00E1                     i1l741:	
  1112  00E1  1FFA               	btfss	___awdiv@dividend+1,7
  1113  00E2  28EC               	goto	i1l747
  1114  00E3  09F9               	comf	___awdiv@dividend,f
  1115  00E4  09FA               	comf	___awdiv@dividend+1,f
  1116  00E5  0AF9               	incf	___awdiv@dividend,f
  1117  00E6  1903               	skipnz
  1118  00E7  0AFA               	incf	___awdiv@dividend+1,f
  1119  00E8  3001               	movlw	1
  1120  00E9  00FB               	movwf	??___awdiv
  1121  00EA  087B               	movf	??___awdiv,w
  1122  00EB  06B5               	xorwf	___awdiv@sign,f
  1123  00EC                     i1l747:	
  1124  00EC  01B6               	clrf	___awdiv@quotient
  1125  00ED  01B7               	clrf	___awdiv@quotient+1
  1126  00EE  0877               	movf	___awdiv@divisor,w
  1127  00EF  0478               	iorwf	___awdiv@divisor+1,w
  1128  00F0  1903               	btfsc	3,2
  1129  00F1  291B               	goto	i1l769
  1130  00F2  01B4               	clrf	___awdiv@counter
  1131  00F3  0AB4               	incf	___awdiv@counter,f
  1132  00F4                     i1l757:	
  1133  00F4  1BF8               	btfsc	___awdiv@divisor+1,7
  1134  00F5  2900               	goto	i1l759
  1135  00F6  3001               	movlw	1
  1136  00F7                     u38_25:	
  1137  00F7  35F7               	lslf	___awdiv@divisor,f
  1138  00F8  0DF8               	rlf	___awdiv@divisor+1,f
  1139  00F9  0B89               	decfsz	9,f
  1140  00FA  28F7               	goto	u38_25
  1141  00FB  3001               	movlw	1
  1142  00FC  00FB               	movwf	??___awdiv
  1143  00FD  087B               	movf	??___awdiv,w
  1144  00FE  07B4               	addwf	___awdiv@counter,f
  1145  00FF  28F4               	goto	i1l757
  1146  0100                     i1l759:	
  1147  0100  3001               	movlw	1
  1148  0101                     u40_25:	
  1149  0101  35B6               	lslf	___awdiv@quotient,f
  1150  0102  0DB7               	rlf	___awdiv@quotient+1,f
  1151  0103  0B89               	decfsz	9,f
  1152  0104  2901               	goto	u40_25
  1153  0105  0878               	movf	___awdiv@divisor+1,w
  1154  0106  027A               	subwf	___awdiv@dividend+1,w
  1155  0107  1D03               	skipz
  1156  0108  290B               	goto	u41_25
  1157  0109  0877               	movf	___awdiv@divisor,w
  1158  010A  0279               	subwf	___awdiv@dividend,w
  1159  010B                     u41_25:	
  1160  010B  1C03               	skipc
  1161  010C  2912               	goto	i1l765
  1162  010D  0877               	movf	___awdiv@divisor,w
  1163  010E  02F9               	subwf	___awdiv@dividend,f
  1164  010F  0878               	movf	___awdiv@divisor+1,w
  1165  0110  3BFA               	subwfb	___awdiv@dividend+1,f
  1166  0111  1436               	bsf	___awdiv@quotient,0
  1167  0112                     i1l765:	
  1168  0112  3001               	movlw	1
  1169  0113                     u42_25:	
  1170  0113  36F8               	lsrf	___awdiv@divisor+1,f
  1171  0114  0CF7               	rrf	___awdiv@divisor,f
  1172  0115  0B89               	decfsz	9,f
  1173  0116  2913               	goto	u42_25
  1174  0117  3001               	movlw	1
  1175  0118  02B4               	subwf	___awdiv@counter,f
  1176  0119  1D03               	btfss	3,2
  1177  011A  2900               	goto	i1l759
  1178  011B                     i1l769:	
  1179  011B  0835               	movf	___awdiv@sign,w
  1180  011C  1903               	btfsc	3,2
  1181  011D  2923               	goto	i1l773
  1182  011E  09B6               	comf	___awdiv@quotient,f
  1183  011F  09B7               	comf	___awdiv@quotient+1,f
  1184  0120  0AB6               	incf	___awdiv@quotient,f
  1185  0121  1903               	skipnz
  1186  0122  0AB7               	incf	___awdiv@quotient+1,f
  1187  0123                     i1l773:	
  1188  0123  0837               	movf	___awdiv@quotient+1,w
  1189  0124  00F8               	movwf	?___awdiv+1
  1190  0125  0836               	movf	___awdiv@quotient,w
  1191  0126  00F7               	movwf	?___awdiv
  1192  0127  0008               	return
  1193  0128                     __end_of___awdiv:	
  1194                           
  1195                           	psect	text6
  1196  01BC                     __ptext6:	
  1197 ;; *************** function _updateClock *****************
  1198 ;; Defined at:
  1199 ;;		line 122 in file "Main.c"
  1200 ;; Parameters:    Size  Location     Type
  1201 ;;		None
  1202 ;; Auto vars:     Size  Location     Type
  1203 ;;		None
  1204 ;; Return value:  Size  Location     Type
  1205 ;;		None               void
  1206 ;; Registers used:
  1207 ;;		wreg, status,2, status,0
  1208 ;; Tracked objects:
  1209 ;;		On entry : 0/0
  1210 ;;		On exit  : 0/0
  1211 ;;		Unchanged: 0/0
  1212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1213 ;;      Params:         0       0       0       0       0       0       0       0
  1214 ;;      Locals:         0       0       0       0       0       0       0       0
  1215 ;;      Temps:          1       0       0       0       0       0       0       0
  1216 ;;      Totals:         1       0       0       0       0       0       0       0
  1217 ;;Total ram usage:        1 bytes
  1218 ;; Hardware stack levels used:    1
  1219 ;; This function calls:
  1220 ;;		Nothing
  1221 ;; This function is called by:
  1222 ;;		_onInterrupt
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           
  1227                           ;psect for function _updateClock
  1228  01BC                     _updateClock:	
  1229                           
  1230                           ;Main.c: 123: timeSeconds++;
  1231                           
  1232                           ;incstack = 0
  1233                           ; Regs used in _updateClock: [wreg+status,2+status,0]
  1234  01BC  3001               	movlw	1
  1235  01BD  00F0               	movwf	??_updateClock
  1236  01BE  0870               	movf	??_updateClock,w
  1237  01BF  0020               	movlb	0	; select bank0
  1238  01C0  07B2               	addwf	_timeSeconds,f
  1239                           
  1240                           ;Main.c: 125: if (timeSeconds == 120) {
  1241  01C1  3078               	movlw	120
  1242  01C2  0632               	xorwf	_timeSeconds,w
  1243  01C3  1D03               	btfss	3,2
  1244  01C4  0008               	return
  1245                           
  1246                           ;Main.c: 126: timeSeconds = 0;
  1247  01C5  01B2               	clrf	_timeSeconds
  1248                           
  1249                           ;Main.c: 128: timeMinutes++;
  1250  01C6  3001               	movlw	1
  1251  01C7  00F0               	movwf	??_updateClock
  1252  01C8  0870               	movf	??_updateClock,w
  1253  01C9  07B1               	addwf	_timeMinutes,f
  1254                           
  1255                           ;Main.c: 130: if (timeMinutes == 60) {
  1256  01CA  303C               	movlw	60
  1257  01CB  0631               	xorwf	_timeMinutes,w
  1258  01CC  1D03               	btfss	3,2
  1259  01CD  0008               	return
  1260                           
  1261                           ;Main.c: 131: timeMinutes = 0;
  1262  01CE  01B1               	clrf	_timeMinutes
  1263                           
  1264                           ;Main.c: 133: timeHours++;
  1265  01CF  3001               	movlw	1
  1266  01D0  00F0               	movwf	??_updateClock
  1267  01D1  0870               	movf	??_updateClock,w
  1268  01D2  07B0               	addwf	_timeHours,f
  1269                           
  1270                           ;Main.c: 135: if (timeHours == 24) {
  1271  01D3  3018               	movlw	24
  1272  01D4  0630               	xorwf	_timeHours,w
  1273  01D5  1D03               	btfss	3,2
  1274  01D6  0008               	return
  1275                           
  1276                           ;Main.c: 136: timeHours = 0;
  1277  01D7  01B0               	clrf	_timeHours
  1278  01D8  0008               	return
  1279  01D9                     __end_of_updateClock:	
  1280                           
  1281                           	psect	text7
  1282  0199                     __ptext7:	
  1283 ;; *************** function _multiplexDisplay *****************
  1284 ;; Defined at:
  1285 ;;		line 143 in file "Main.c"
  1286 ;; Parameters:    Size  Location     Type
  1287 ;;		None
  1288 ;; Auto vars:     Size  Location     Type
  1289 ;;		None
  1290 ;; Return value:  Size  Location     Type
  1291 ;;		None               void
  1292 ;; Registers used:
  1293 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1294 ;; Tracked objects:
  1295 ;;		On entry : 0/0
  1296 ;;		On exit  : 0/0
  1297 ;;		Unchanged: 0/0
  1298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1299 ;;      Params:         0       0       0       0       0       0       0       0
  1300 ;;      Locals:         0       0       0       0       0       0       0       0
  1301 ;;      Temps:          1       0       0       0       0       0       0       0
  1302 ;;      Totals:         1       0       0       0       0       0       0       0
  1303 ;;Total ram usage:        1 bytes
  1304 ;; Hardware stack levels used:    1
  1305 ;; This function calls:
  1306 ;;		Nothing
  1307 ;; This function is called by:
  1308 ;;		_onInterrupt
  1309 ;; This function uses a non-reentrant model
  1310 ;;
  1311                           
  1312                           
  1313                           ;psect for function _multiplexDisplay
  1314  0199                     _multiplexDisplay:	
  1315                           
  1316                           ;Main.c: 144: displayDigit++;
  1317                           
  1318                           ;incstack = 0
  1319                           ; Regs used in _multiplexDisplay: [wreg+fsr1l+fsr1h+status,2+status,0]
  1320  0199  3001               	movlw	1
  1321  019A  00F0               	movwf	??_multiplexDisplay
  1322  019B  0870               	movf	??_multiplexDisplay,w
  1323  019C  0020               	movlb	0	; select bank0
  1324  019D  07B3               	addwf	_displayDigit,f
  1325                           
  1326                           ;Main.c: 147: if (displayDigit > 4) {
  1327  019E  3005               	movlw	5
  1328  019F  0233               	subwf	_displayDigit,w
  1329  01A0  1C03               	skipc
  1330  01A1  29A6               	goto	i1l855
  1331                           
  1332                           ;Main.c: 148: displayDigit = 0;
  1333  01A2  01B3               	clrf	_displayDigit
  1334                           
  1335                           ;Main.c: 149: LATB = 0x00;
  1336  01A3  0022               	movlb	2	; select bank2
  1337  01A4  018D               	clrf	13	;volatile
  1338                           
  1339                           ;Main.c: 150: } else {
  1340  01A5  29B3               	goto	i1l857
  1341  01A6                     i1l855:	
  1342                           
  1343                           ;Main.c: 151: LATB = 1 << displayDigit - 1;
  1344  01A6  3001               	movlw	1
  1345  01A7  00F0               	movwf	??_multiplexDisplay
  1346  01A8  0020               	movlb	0	; select bank0
  1347  01A9  0833               	movf	_displayDigit,w
  1348  01AA  3EFF               	addlw	-1
  1349  01AB  0A89               	incf	9,f
  1350  01AC  29AE               	goto	u58_24
  1351  01AD                     u58_25:	
  1352  01AD  35F0               	lslf	??_multiplexDisplay,f
  1353  01AE                     u58_24:	
  1354  01AE  0B89               	decfsz	9,f
  1355  01AF  29AD               	goto	u58_25
  1356  01B0  0870               	movf	??_multiplexDisplay,w
  1357  01B1  0022               	movlb	2	; select bank2
  1358  01B2  008D               	movwf	13	;volatile
  1359  01B3                     i1l857:	
  1360                           
  1361                           ;Main.c: 152: }
  1362                           ;Main.c: 154: LATA = ~displayValue[displayDigit];
  1363  01B3  0020               	movlb	0	; select bank0
  1364  01B4  0833               	movf	_displayDigit,w
  1365  01B5  3E2B               	addlw	(low (_displayValue| 0))& (0+255)
  1366  01B6  0086               	movwf	6
  1367  01B7  0187               	clrf	7
  1368  01B8  0901               	comf	1,w
  1369  01B9  0022               	movlb	2	; select bank2
  1370  01BA  008C               	movwf	12	;volatile
  1371  01BB  0008               	return
  1372  01BC                     __end_of_multiplexDisplay:	
  1373  007E                     btemp	set	126	;btemp
  1374  007E                     int$flags	set	126
  1375  007E                     wtemp	set	126
  1376  007E                     wtemp0	set	126
  1377  0080                     wtemp1	set	128
  1378  0082                     wtemp2	set	130
  1379  0084                     wtemp3	set	132
  1380  0086                     wtemp4	set	134
  1381  0088                     wtemp5	set	136
  1382  007F                     wtemp6	set	127
  1383  007E                     ttemp	set	126
  1384  007E                     ttemp0	set	126
  1385  0081                     ttemp1	set	129
  1386  0084                     ttemp2	set	132
  1387  0087                     ttemp3	set	135
  1388  007F                     ttemp4	set	127
  1389  007E                     ltemp	set	126
  1390  007E                     ltemp0	set	126
  1391  0082                     ltemp1	set	130
  1392  0086                     ltemp2	set	134
  1393  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      27
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _onInterrupt in COMMON

    _updateDisplay->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _onInterrupt in BANK0

    _onInterrupt->_updateDisplay
    _updateDisplay->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _onInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _onInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _onInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _onInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _onInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _onInterrupt in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _onInterrupt                                          2     2      0    1232
                                             12 COMMON     2     2      0
                   _multiplexDisplay
                        _updateClock
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (3) _updateDisplay                                        3     3      0    1232
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateClock                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _multiplexDisplay                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _onInterrupt (ROOT)
   _multiplexDisplay
   _updateClock
   _updateDisplay
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      1B       6       33.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      29      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Sat Jun 18 10:14:47 2016

              __CFG_CP$OFF 0000                         l64 01ED               ___awdiv@sign 0035  
                      _RB4 006C                        _RB5 006D                        _PR2 001B  
             __CFG_CPD$OFF 0000               ___awmod@sign 0076               __CFG_BORV$HI 0000  
                      wreg 0009               __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000  
                     _LATA 010C                       _LATB 010D                       _PIE1 0091  
                     _PIR1 0011                       i1l93 003C             ?_updateDisplay 0070  
                     _WPUA 020C                       _WPUB 020D               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 01EA                       fsr0h 0005  
                     fsr1h 0007                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0041                       ttemp 007E  
                     wtemp 007E              __CFG_MCLRE$ON 0000               ?_onInterrupt 0070  
                    ?_main 0070            __end_of___awdiv 0128              __CFG_WDTE$OFF 0000  
          __end_of___awmod 016D            ___awdiv@divisor 0077                      _T1CON 0018  
                    _T2CON 001C                      i1l811 0168                      i1l803 0157  
                    i1l741 00E1                      i1l807 0160                      i1l903 002E  
                    i1l747 00EC                      i1l773 0123                      i1l765 0112  
                    i1l757 00F4                      i1l855 01A6                      i1l759 0100  
                    i1l863 0063                      i1l857 01B3                      i1l769 011B  
                    i1l785 0132                      i1l865 0064                      i1l891 001C  
                    i1l797 013F                      i1l789 0139                      i1l885 0016  
                    i1l799 014B            ___awdiv@counter 0034                      u40_25 0101  
                    _TMR1H 0017                      u41_25 010B                      _TMR1L 0016  
                    u42_25 0113                      u50_25 0151                      u51_25 0158  
                    u38_25 00F7                      u48_25 0142                      _TRISA 008C  
                    _TRISB 008D                      u58_24 01AE                      u58_25 01AD  
                    _setup 016D                      ltemp0 007E                      ltemp1 0082  
                    ltemp2 0086                      ltemp3 0080                      ttemp0 007E  
                    ttemp1 0081                      ttemp2 0084                      ttemp3 0087  
                    ttemp4 007F                      status 0003                      wtemp0 007E  
                    wtemp1 0080                      wtemp2 0082                      wtemp3 0084  
                    wtemp4 0086                      wtemp5 0088                      wtemp6 007F  
          __initialization 0043               __end_of_main 01EE                     ??_main 003B  
           __CFG_PLLEN$OFF 0000  __size_of_multiplexDisplay 0023            ??_updateDisplay 0038  
         ___awdiv@dividend 0079                     ?_setup 0070                     _ANSELA 018C  
                   _ANSELB 018D                     _INTCON 000B                     _OSCCON 0099  
                   _TMR0IF 005A                     _TMR1IF 0088                     _TMR2IF 0089  
           __CFG_PWRTE$OFF 0000                  ??___awdiv 007B             __CFG_STVREN$ON 0000  
                ??___awmod 0074           ___awdiv@quotient 0036            ___awmod@divisor 0070  
          ___awmod@counter 0075    __end_of__initialization 0057               ?_updateClock 0070  
           __pcstackCOMMON 0070               __pidataBANK0 01D9              __end_of_setup 0199  
     __size_of_onInterrupt 003D                    ??_setup 003B                 __pbssBANK0 002B  
          __CFG_VCAPEN$OFF 0000                 __pmaintext 01EA                 __pintentry 0004  
         _multiplexDisplay 0199                    ___awdiv 00D6                    ___awmod 0128  
                  __ptext1 016D                    __ptext3 005B                    __ptext4 0128  
                  __ptext5 00D6                    __ptext6 01BC                    __ptext7 0199  
         ___awmod@dividend 0072       end_of_initialization 0057                    init_ram 01E4  
                  initloop 01E5       __size_of_updateClock 001D               _displayDigit 0033  
             _displayValue 002B           __CFG_FOSC$INTOSC 0000      __end_of_updateDisplay 00D6  
      start_initialization 0043   __end_of_multiplexDisplay 01BC              ??_onInterrupt 007C  
              __pdataBANK0 0020                  ___latbits 0001              __pcstackBANK0 0034  
          _DISPLAY_MAPPING 0020                   ?___awdiv 0077                   ?___awmod 0070  
      __end_of_onInterrupt 0041             __size_of_setup 002C                  _timeHours 0030  
            ??_updateClock 0070                _onInterrupt 0004           __size_of___awdiv 0052  
         __size_of___awmod 0045              __size_of_main 0004          ?_multiplexDisplay 0070  
                 int$flags 007E         ??_multiplexDisplay 0070        __end_of_updateClock 01D9  
   __size_of_updateDisplay 007B                   intlevel1 0000          __CFG_CLKOUTEN$OFF 0000  
              _timeMinutes 0031                _timeSeconds 0032                 _OPTION_REG 0095  
            _updateDisplay 005B                _updateClock 01BC  
