

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Thu Jun 09 11:26:33 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     	;# 
    21  0001                     	;# 
    22  0002                     	;# 
    23  0003                     	;# 
    24  0004                     	;# 
    25  0005                     	;# 
    26  0006                     	;# 
    27  0007                     	;# 
    28  0008                     	;# 
    29  0009                     	;# 
    30  000A                     	;# 
    31  000B                     	;# 
    32  000C                     	;# 
    33  000D                     	;# 
    34  000E                     	;# 
    35  0010                     	;# 
    36  0011                     	;# 
    37  0012                     	;# 
    38  0014                     	;# 
    39  0015                     	;# 
    40  0016                     	;# 
    41  0016                     	;# 
    42  0017                     	;# 
    43  0018                     	;# 
    44  0019                     	;# 
    45  001A                     	;# 
    46  001B                     	;# 
    47  001C                     	;# 
    48  008C                     	;# 
    49  008D                     	;# 
    50  008E                     	;# 
    51  0090                     	;# 
    52  0091                     	;# 
    53  0092                     	;# 
    54  0094                     	;# 
    55  0095                     	;# 
    56  0096                     	;# 
    57  0097                     	;# 
    58  0098                     	;# 
    59  0099                     	;# 
    60  009A                     	;# 
    61  009B                     	;# 
    62  009B                     	;# 
    63  009C                     	;# 
    64  009D                     	;# 
    65  009E                     	;# 
    66  009F                     	;# 
    67  010C                     	;# 
    68  010D                     	;# 
    69  010E                     	;# 
    70  0111                     	;# 
    71  0112                     	;# 
    72  0113                     	;# 
    73  0114                     	;# 
    74  0115                     	;# 
    75  0116                     	;# 
    76  0117                     	;# 
    77  0118                     	;# 
    78  0119                     	;# 
    79  011D                     	;# 
    80  011D                     	;# 
    81  011E                     	;# 
    82  011F                     	;# 
    83  018C                     	;# 
    84  018D                     	;# 
    85  0191                     	;# 
    86  0191                     	;# 
    87  0192                     	;# 
    88  0193                     	;# 
    89  0193                     	;# 
    90  0193                     	;# 
    91  0194                     	;# 
    92  0195                     	;# 
    93  0196                     	;# 
    94  0197                     	;# 
    95  0199                     	;# 
    96  0199                     	;# 
    97  0199                     	;# 
    98  019A                     	;# 
    99  019A                     	;# 
   100  019A                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019B                     	;# 
   105  019B                     	;# 
   106  019C                     	;# 
   107  019C                     	;# 
   108  019C                     	;# 
   109  019D                     	;# 
   110  019D                     	;# 
   111  019D                     	;# 
   112  019E                     	;# 
   113  019E                     	;# 
   114  019E                     	;# 
   115  019F                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  019F                     	;# 
   119  019F                     	;# 
   120  020C                     	;# 
   121  020D                     	;# 
   122  020E                     	;# 
   123  0210                     	;# 
   124  0211                     	;# 
   125  0211                     	;# 
   126  0212                     	;# 
   127  0212                     	;# 
   128  0213                     	;# 
   129  0213                     	;# 
   130  0214                     	;# 
   131  0214                     	;# 
   132  0215                     	;# 
   133  0215                     	;# 
   134  0215                     	;# 
   135  0216                     	;# 
   136  0216                     	;# 
   137  0217                     	;# 
   138  0217                     	;# 
   139  028C                     	;# 
   140  028D                     	;# 
   141  028E                     	;# 
   142  0291                     	;# 
   143  0291                     	;# 
   144  0292                     	;# 
   145  0293                     	;# 
   146  0298                     	;# 
   147  0298                     	;# 
   148  0299                     	;# 
   149  029A                     	;# 
   150  030C                     	;# 
   151  030D                     	;# 
   152  030E                     	;# 
   153  038C                     	;# 
   154  038D                     	;# 
   155  038E                     	;# 
   156  0390                     	;# 
   157  0391                     	;# 
   158  0392                     	;# 
   159  0393                     	;# 
   160  0394                     	;# 
   161  0395                     	;# 
   162  0396                     	;# 
   163  0397                     	;# 
   164  0398                     	;# 
   165  0399                     	;# 
   166  039D                     	;# 
   167  039E                     	;# 
   168  039F                     	;# 
   169  0511                     	;# 
   170  0513                     	;# 
   171  051A                     	;# 
   172  0811                     	;# 
   173  0812                     	;# 
   174  0813                     	;# 
   175  0814                     	;# 
   176  0815                     	;# 
   177  0816                     	;# 
   178  0817                     	;# 
   179  0818                     	;# 
   180  0819                     	;# 
   181  081A                     	;# 
   182  081B                     	;# 
   183  081C                     	;# 
   184  081D                     	;# 
   185  081E                     	;# 
   186  081F                     	;# 
   187  0820                     	;# 
   188  0821                     	;# 
   189  0821                     	;# 
   190  0822                     	;# 
   191  0823                     	;# 
   192  0823                     	;# 
   193  0824                     	;# 
   194  0825                     	;# 
   195  0825                     	;# 
   196  0826                     	;# 
   197  0827                     	;# 
   198  0827                     	;# 
   199  0828                     	;# 
   200  0829                     	;# 
   201  082A                     	;# 
   202  082B                     	;# 
   203  082C                     	;# 
   204  082D                     	;# 
   205  082E                     	;# 
   206  082F                     	;# 
   207  0831                     	;# 
   208  0832                     	;# 
   209  0833                     	;# 
   210  0834                     	;# 
   211  0835                     	;# 
   212  0836                     	;# 
   213  0837                     	;# 
   214  0838                     	;# 
   215  0839                     	;# 
   216  083A                     	;# 
   217  083B                     	;# 
   218  083C                     	;# 
   219  083D                     	;# 
   220  083E                     	;# 
   221  083F                     	;# 
   222  0840                     	;# 
   223  0841                     	;# 
   224  0841                     	;# 
   225  0842                     	;# 
   226  0843                     	;# 
   227  0843                     	;# 
   228  0844                     	;# 
   229  0845                     	;# 
   230  0845                     	;# 
   231  0846                     	;# 
   232  0847                     	;# 
   233  0847                     	;# 
   234  0848                     	;# 
   235  0849                     	;# 
   236  084A                     	;# 
   237  084B                     	;# 
   238  084C                     	;# 
   239  084D                     	;# 
   240  084E                     	;# 
   241  084F                     	;# 
   242  0FE4                     	;# 
   243  0FE5                     	;# 
   244  0FE6                     	;# 
   245  0FE7                     	;# 
   246  0FE8                     	;# 
   247  0FE9                     	;# 
   248  0FEA                     	;# 
   249  0FEB                     	;# 
   250  0FED                     	;# 
   251  0FEE                     	;# 
   252  0FEF                     	;# 
   253                           
   254                           	psect	idataBANK0
   255  01D7                     __pidataBANK0:	
   256                           
   257                           ;initializer for _DISPLAY_MAPPING
   258  01D7  34B7               	retlw	183
   259  01D8  3424               	retlw	36
   260  01D9  3473               	retlw	115
   261  01DA  3476               	retlw	118
   262  01DB  34E4               	retlw	228
   263  01DC  34D6               	retlw	214
   264  01DD  34D7               	retlw	215
   265  01DE  3434               	retlw	52
   266  01DF  34F7               	retlw	247
   267  01E0  34F6               	retlw	246
   268  01E1  3408               	retlw	8
   269  000B                     _INTCON	set	11
   270  0011                     _PIR1	set	17
   271  000C                     _PORTA	set	12
   272  001B                     _PR2	set	27
   273  0018                     _T1CON	set	24
   274  001C                     _T2CON	set	28
   275  0017                     _TMR1H	set	23
   276  0016                     _TMR1L	set	22
   277  006C                     _RB4	set	108
   278  006D                     _RB5	set	109
   279  005A                     _TMR0IF	set	90
   280  0088                     _TMR1IF	set	136
   281  0089                     _TMR2IF	set	137
   282  0095                     _OPTION_REG	set	149
   283  0099                     _OSCCON	set	153
   284  0091                     _PIE1	set	145
   285  008C                     _TRISA	set	140
   286  008D                     _TRISB	set	141
   287  010C                     _LATA	set	268
   288  010D                     _LATB	set	269
   289  018C                     _ANSELA	set	396
   290  018D                     _ANSELB	set	397
   291  020C                     _WPUA	set	524
   292  020D                     _WPUB	set	525
   293                           
   294                           ; #config settings
   295  0000                     
   296                           	psect	cinit
   297  0043                     start_initialization:	
   298  0043                     __initialization:	
   299                           
   300                           ; Clear objects allocated to BANK0
   301  0043  01AB               	clrf	__pbssBANK0& (0+127)
   302  0044  01AC               	clrf	(__pbssBANK0+1)& (0+127)
   303  0045  01AD               	clrf	(__pbssBANK0+2)& (0+127)
   304  0046  01AE               	clrf	(__pbssBANK0+3)& (0+127)
   305  0047  01AF               	clrf	(__pbssBANK0+4)& (0+127)
   306  0048  01B0               	clrf	(__pbssBANK0+5)& (0+127)
   307  0049  01B1               	clrf	(__pbssBANK0+6)& (0+127)
   308  004A  01B2               	clrf	(__pbssBANK0+7)& (0+127)
   309  004B  01B3               	clrf	(__pbssBANK0+8)& (0+127)
   310                           
   311                           ; Initialize objects allocated to BANK0
   312  004C  30D7               	movlw	low __pidataBANK0
   313  004D  0084               	movwf	4
   314  004E  3081               	movlw	(high __pidataBANK0)| (0+128)
   315  004F  0085               	movwf	5
   316  0050  3020               	movlw	low __pdataBANK0
   317  0051  0086               	movwf	6
   318  0052  3000               	movlw	high __pdataBANK0
   319  0053  0087               	movwf	7
   320  0054  300B               	movlw	11
   321  0055  3181  21E2         	fcall	init_ram
   322  0057                     end_of_initialization:	
   323                           ;End of C runtime variable initialization code
   324                           
   325  0057                     __end_of__initialization:	
   326  0057  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   327  0058  0020               	movlb	0
   328  0059  3181  29E8         	ljmp	_main	;jump to C main() function
   329                           
   330                           	psect	bssBANK0
   331  002B                     __pbssBANK0:	
   332  002B                     _displayValue:	
   333  002B                     	ds	5
   334  0030                     _timeHours:	
   335  0030                     	ds	1
   336  0031                     _timeMinutes:	
   337  0031                     	ds	1
   338  0032                     _timeSeconds:	
   339  0032                     	ds	1
   340  0033                     _displayDigit:	
   341  0033                     	ds	1
   342                           
   343                           	psect	dataBANK0
   344  0020                     __pdataBANK0:	
   345  0020                     _DISPLAY_MAPPING:	
   346  0020                     	ds	11
   347                           
   348                           	psect	inittext
   349  01E2                     init_ram:	
   350  01E2  00FE               	movwf	126
   351  01E3                     initloop:	
   352  01E3  0012               	moviw fsr0++
   353  01E4  001E               	movwi fsr1++
   354  01E5  0BFE               	decfsz	126,f
   355  01E6  29E3               	goto	initloop
   356  01E7  3400               	retlw	0
   357                           
   358                           	psect	cstackCOMMON
   359  0070                     __pcstackCOMMON:	
   360  0070                     ?_setup:	
   361  0070                     ?_main:	
   362                           ; 0 bytes @ 0x0
   363                           
   364  0070                     ?_updateClock:	
   365                           ; 0 bytes @ 0x0
   366                           
   367  0070                     ??_updateClock:	
   368                           ; 0 bytes @ 0x0
   369                           
   370  0070                     ?_multiplexDisplay:	
   371                           ; 0 bytes @ 0x0
   372                           
   373  0070                     ??_multiplexDisplay:	
   374                           ; 0 bytes @ 0x0
   375                           
   376  0070                     ?_updateDisplay:	
   377                           ; 0 bytes @ 0x0
   378                           
   379  0070                     ?_onInterrupt:	
   380                           ; 0 bytes @ 0x0
   381                           
   382  0070                     ?___awmod:	
   383                           ; 0 bytes @ 0x0
   384                           
   385  0070                     ___awmod@divisor:	
   386                           ; 2 bytes @ 0x0
   387                           
   388                           
   389                           ; 2 bytes @ 0x0
   390  0070                     	ds	2
   391  0072                     ___awmod@dividend:	
   392                           
   393                           ; 2 bytes @ 0x2
   394  0072                     	ds	2
   395  0074                     ??___awmod:	
   396                           
   397                           ; 0 bytes @ 0x4
   398  0074                     	ds	1
   399  0075                     ___awmod@counter:	
   400                           
   401                           ; 1 bytes @ 0x5
   402  0075                     	ds	1
   403  0076                     ___awmod@sign:	
   404                           
   405                           ; 1 bytes @ 0x6
   406  0076                     	ds	1
   407  0077                     ?___awdiv:	
   408  0077                     ___awdiv@divisor:	
   409                           ; 2 bytes @ 0x7
   410                           
   411                           
   412                           ; 2 bytes @ 0x7
   413  0077                     	ds	2
   414  0079                     ___awdiv@dividend:	
   415                           
   416                           ; 2 bytes @ 0x9
   417  0079                     	ds	2
   418  007B                     ??___awdiv:	
   419                           
   420                           ; 0 bytes @ 0xB
   421  007B                     	ds	1
   422  007C                     ??_onInterrupt:	
   423                           
   424                           ; 0 bytes @ 0xC
   425  007C                     	ds	2
   426                           
   427                           	psect	cstackBANK0
   428  0034                     __pcstackBANK0:	
   429  0034                     ___awdiv@counter:	
   430                           
   431                           ; 1 bytes @ 0x0
   432  0034                     	ds	1
   433  0035                     ___awdiv@sign:	
   434                           
   435                           ; 1 bytes @ 0x1
   436  0035                     	ds	1
   437  0036                     ___awdiv@quotient:	
   438                           
   439                           ; 2 bytes @ 0x2
   440  0036                     	ds	2
   441  0038                     ??_updateDisplay:	
   442                           
   443                           ; 0 bytes @ 0x4
   444  0038                     	ds	3
   445  003B                     ??_setup:	
   446  003B                     ??_main:	
   447                           ; 0 bytes @ 0x7
   448                           
   449                           
   450                           	psect	maintext
   451  01E8                     __pmaintext:	
   452                           ; 0 bytes @ 0x7
   453 ;;
   454 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   455 ;;
   456 ;; *************** function _main *****************
   457 ;; Defined at:
   458 ;;		line 111 in file "Main.c"
   459 ;; Parameters:    Size  Location     Type
   460 ;;		None
   461 ;; Auto vars:     Size  Location     Type
   462 ;;		None
   463 ;; Return value:  Size  Location     Type
   464 ;;		None               void
   465 ;; Registers used:
   466 ;;		wreg, status,2, status,0, pclath, cstack
   467 ;; Tracked objects:
   468 ;;		On entry : B1F/0
   469 ;;		On exit  : 0/0
   470 ;;		Unchanged: 0/0
   471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   472 ;;      Params:         0       0       0       0       0       0       0       0
   473 ;;      Locals:         0       0       0       0       0       0       0       0
   474 ;;      Temps:          0       0       0       0       0       0       0       0
   475 ;;      Totals:         0       0       0       0       0       0       0       0
   476 ;;Total ram usage:        0 bytes
   477 ;; Hardware stack levels required when called:    4
   478 ;; This function calls:
   479 ;;		_setup
   480 ;; This function is called by:
   481 ;;		Startup code after reset
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           
   485                           
   486                           ;psect for function _main
   487  01E8                     _main:	
   488                           
   489                           ;Main.c: 112: setup();
   490                           
   491                           ;incstack = 0
   492                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   493  01E8  3181  216D  3181   	fcall	_setup
   494  01EB                     l66:	
   495                           ;Main.c: 115: while (1) {
   496                           
   497  01EB  29EB               	goto	l66
   498  01EC                     __end_of_main:	
   499                           
   500                           	psect	text1
   501  016D                     __ptext1:	
   502 ;; *************** function _setup *****************
   503 ;; Defined at:
   504 ;;		line 75 in file "Main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;		None               void
   511 ;; Registers used:
   512 ;;		wreg, status,2
   513 ;; Tracked objects:
   514 ;;		On entry : 0/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   518 ;;      Params:         0       0       0       0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels used:    1
   524 ;; Hardware stack levels required when called:    3
   525 ;; This function calls:
   526 ;;		Nothing
   527 ;; This function is called by:
   528 ;;		_main
   529 ;; This function uses a non-reentrant model
   530 ;;
   531                           
   532                           
   533                           ;psect for function _setup
   534  016D                     _setup:	
   535                           
   536                           ;Main.c: 77: OSCCON = 0x70;
   537                           
   538                           ;incstack = 0
   539                           ; Regs used in _setup: [wreg+status,2]
   540  016D  3070               	movlw	112
   541  016E  0021               	movlb	1	; select bank1
   542  016F  0099               	movwf	25	;volatile
   543                           
   544                           ;Main.c: 78: OPTION_REG = 0x5F;
   545  0170  305F               	movlw	95
   546  0171  0095               	movwf	21	;volatile
   547                           
   548                           ;Main.c: 79: TMR1H = 0xFF;
   549  0172  30FF               	movlw	255
   550  0173  0020               	movlb	0	; select bank0
   551  0174  0097               	movwf	23	;volatile
   552                           
   553                           ;Main.c: 80: TMR1L = 0xFF;
   554  0175  30FF               	movlw	255
   555  0176  0096               	movwf	22	;volatile
   556                           
   557                           ;Main.c: 81: T1CON = 0x8D;
   558  0177  308D               	movlw	141
   559  0178  0098               	movwf	24	;volatile
   560                           
   561                           ;Main.c: 82: T2CON = 0x7F;
   562  0179  307F               	movlw	127
   563  017A  009C               	movwf	28	;volatile
   564                           
   565                           ;Main.c: 83: PR2 = 0x7F;;
   566  017B  307F               	movlw	127
   567  017C  009B               	movwf	27	;volatile
   568                           
   569                           ;Main.c: 86: INTCON = 0xE0;
   570  017D  30E0               	movlw	224
   571  017E  008B               	movwf	11	;volatile
   572                           
   573                           ;Main.c: 87: PIR1 = 0x00;
   574  017F  0191               	clrf	17	;volatile
   575                           
   576                           ;Main.c: 88: PIE1 = 0x03;
   577  0180  3003               	movlw	3
   578  0181  0021               	movlb	1	; select bank1
   579  0182  0091               	movwf	17	;volatile
   580                           
   581                           ;Main.c: 91: TRISA = 0x00;
   582  0183  018C               	clrf	12	;volatile
   583                           
   584                           ;Main.c: 92: ANSELA = 0x00;
   585  0184  0023               	movlb	3	; select bank3
   586  0185  018C               	clrf	12	;volatile
   587                           
   588                           ;Main.c: 93: WPUA = 0x00;
   589  0186  0024               	movlb	4	; select bank4
   590  0187  018C               	clrf	12	;volatile
   591                           
   592                           ;Main.c: 94: PORTA = 0x00;
   593  0188  0020               	movlb	0	; select bank0
   594  0189  018C               	clrf	12	;volatile
   595                           
   596                           ;Main.c: 96: TRISB = 0xF0;
   597  018A  30F0               	movlw	240
   598  018B  0021               	movlb	1	; select bank1
   599  018C  008D               	movwf	13	;volatile
   600                           
   601                           ;Main.c: 97: ANSELB = 0x00;
   602  018D  0023               	movlb	3	; select bank3
   603  018E  018D               	clrf	13	;volatile
   604                           
   605                           ;Main.c: 98: WPUB = 0x30;
   606  018F  3030               	movlw	48
   607  0190  0024               	movlb	4	; select bank4
   608  0191  008D               	movwf	13	;volatile
   609                           
   610                           ;Main.c: 101: timeSeconds = 0;
   611  0192  0020               	movlb	0	; select bank0
   612  0193  01B2               	clrf	_timeSeconds
   613                           
   614                           ;Main.c: 102: timeMinutes = 0;
   615  0194  01B1               	clrf	_timeMinutes
   616                           
   617                           ;Main.c: 103: timeHours = 0;
   618  0195  01B0               	clrf	_timeHours
   619  0196  0008               	return
   620  0197                     __end_of_setup:	
   621                           
   622                           	psect	intentry
   623  0004                     __pintentry:	
   624 ;; *************** function _onInterrupt *****************
   625 ;; Defined at:
   626 ;;		line 177 in file "Main.c"
   627 ;; Parameters:    Size  Location     Type
   628 ;;		None
   629 ;; Auto vars:     Size  Location     Type
   630 ;;		None
   631 ;; Return value:  Size  Location     Type
   632 ;;		None               void
   633 ;; Registers used:
   634 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   635 ;; Tracked objects:
   636 ;;		On entry : 0/0
   637 ;;		On exit  : 0/0
   638 ;;		Unchanged: 0/0
   639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   640 ;;      Params:         0       0       0       0       0       0       0       0
   641 ;;      Locals:         0       0       0       0       0       0       0       0
   642 ;;      Temps:          2       0       0       0       0       0       0       0
   643 ;;      Totals:         2       0       0       0       0       0       0       0
   644 ;;Total ram usage:        2 bytes
   645 ;; Hardware stack levels used:    1
   646 ;; Hardware stack levels required when called:    2
   647 ;; This function calls:
   648 ;;		_multiplexDisplay
   649 ;;		_updateClock
   650 ;;		_updateDisplay
   651 ;; This function is called by:
   652 ;;		Interrupt level 1
   653 ;; This function uses a non-reentrant model
   654 ;;
   655                           
   656  0004                     _onInterrupt:	
   657                           
   658                           ;incstack = 0
   659                           ; Regs used in _onInterrupt: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   660  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   661  0005  3180               	pagesel	$
   662  0006  0020               	movlb	0	; select bank0
   663  0007  087F               	movf	127,w
   664  0008  00FD               	movwf	??_onInterrupt+1
   665                           
   666                           ;Main.c: 179: if (TMR1IF) {
   667  0009  1C11               	btfss	17,0	;volatile
   668  000A  2816               	goto	i1l883
   669                           
   670                           ;Main.c: 180: TMR1IF = 0x00;
   671  000B  1011               	bcf	17,0	;volatile
   672                           
   673                           ;Main.c: 183: TMR1H = 0xBF;
   674  000C  30BF               	movlw	191
   675  000D  0097               	movwf	23	;volatile
   676                           
   677                           ;Main.c: 184: TMR1L = 0xFD;
   678  000E  30FD               	movlw	253
   679  000F  0096               	movwf	22	;volatile
   680                           
   681                           ;Main.c: 187: updateClock();
   682  0010  3181  21BA  3180   	fcall	_updateClock
   683                           
   684                           ;Main.c: 188: updateDisplay();
   685  0013  3180  205B  3180   	fcall	_updateDisplay
   686  0016                     i1l883:	
   687                           
   688                           ;Main.c: 189: }
   689                           ;Main.c: 192: if (TMR0IF) {
   690  0016  1D0B               	btfss	11,2	;volatile
   691  0017  281C               	goto	i1l889
   692                           
   693                           ;Main.c: 193: TMR0IF = 0x00;
   694  0018  110B               	bcf	11,2	;volatile
   695                           
   696                           ;Main.c: 196: multiplexDisplay();
   697  0019  3181  2197  3180   	fcall	_multiplexDisplay
   698  001C                     i1l889:	
   699                           
   700                           ;Main.c: 197: }
   701                           ;Main.c: 200: if (TMR2IF) {
   702  001C  0020               	movlb	0	; select bank0
   703  001D  1C91               	btfss	17,1	;volatile
   704  001E  283C               	goto	i1l95
   705                           
   706                           ;Main.c: 201: TMR2IF = 0x00;
   707  001F  1091               	bcf	17,1	;volatile
   708                           
   709                           ;Main.c: 204: if (!RB4 && RB5) {
   710  0020  1E0D               	btfss	13,4	;volatile
   711  0021  1E8D               	btfss	13,5	;volatile
   712  0022  282E               	goto	i1l901
   713                           
   714                           ;Main.c: 205: timeMinutes++;
   715  0023  3001               	movlw	1
   716  0024  00FC               	movwf	??_onInterrupt
   717  0025  087C               	movf	??_onInterrupt,w
   718  0026  07B1               	addwf	_timeMinutes,f
   719                           
   720                           ;Main.c: 208: if (timeMinutes == 60) {
   721  0027  303C               	movlw	60
   722  0028  0631               	xorwf	_timeMinutes,w
   723  0029  1903               	btfsc	3,2
   724                           
   725                           ;Main.c: 209: timeMinutes = 0;
   726  002A  01B1               	clrf	_timeMinutes
   727                           
   728                           ;Main.c: 210: }
   729                           ;Main.c: 212: updateDisplay();
   730  002B  3180  205B  3180   	fcall	_updateDisplay
   731  002E                     i1l901:	
   732                           
   733                           ;Main.c: 213: }
   734                           ;Main.c: 216: if (RB4 && !RB5) {
   735  002E  0020               	movlb	0	; select bank0
   736  002F  1A0D               	btfsc	13,4	;volatile
   737  0030  1A8D               	btfsc	13,5	;volatile
   738  0031  283C               	goto	i1l95
   739                           
   740                           ;Main.c: 217: timeHours++;
   741  0032  3001               	movlw	1
   742  0033  00FC               	movwf	??_onInterrupt
   743  0034  087C               	movf	??_onInterrupt,w
   744  0035  07B0               	addwf	_timeHours,f
   745                           
   746                           ;Main.c: 220: if (timeHours == 24) {
   747  0036  3018               	movlw	24
   748  0037  0630               	xorwf	_timeHours,w
   749  0038  1903               	btfsc	3,2
   750                           
   751                           ;Main.c: 221: timeHours = 0;
   752  0039  01B0               	clrf	_timeHours
   753                           
   754                           ;Main.c: 222: }
   755                           ;Main.c: 224: updateDisplay();
   756  003A  3180  205B         	fcall	_updateDisplay
   757  003C                     i1l95:	
   758  003C  087D               	movf	??_onInterrupt+1,w
   759  003D  0020               	movlb	0	; select bank0
   760  003E  00FF               	movwf	127
   761  003F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   762  0040  0009               	retfie
   763  0041                     __end_of_onInterrupt:	
   764                           
   765                           	psect	text3
   766  005B                     __ptext3:	
   767 ;; *************** function _updateDisplay *****************
   768 ;; Defined at:
   769 ;;		line 157 in file "Main.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;		None               void
   776 ;; Registers used:
   777 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   783 ;;      Params:         0       0       0       0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0       0       0       0
   785 ;;      Temps:          0       3       0       0       0       0       0       0
   786 ;;      Totals:         0       3       0       0       0       0       0       0
   787 ;;Total ram usage:        3 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		___awdiv
   792 ;;		___awmod
   793 ;; This function is called by:
   794 ;;		_onInterrupt
   795 ;; This function uses a non-reentrant model
   796 ;;
   797                           
   798                           
   799                           ;psect for function _updateDisplay
   800  005B                     _updateDisplay:	
   801                           
   802                           ;Main.c: 159: if (timeSeconds % 2) {
   803                           
   804                           ;incstack = 0
   805                           ; Regs used in _updateDisplay: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
   806  005B  0020               	movlb	0	; select bank0
   807  005C  1C32               	btfss	_timeSeconds,0
   808  005D  2863               	goto	i1l861
   809                           
   810                           ;Main.c: 160: displayValue[0] = DISPLAY_MAPPING[10];
   811  005E  082A               	movf	_DISPLAY_MAPPING+10,w
   812  005F  00B8               	movwf	??_updateDisplay
   813  0060  0838               	movf	??_updateDisplay,w
   814  0061  00AB               	movwf	_displayValue
   815                           
   816                           ;Main.c: 161: } else {
   817  0062  2864               	goto	i1l863
   818  0063                     i1l861:	
   819                           
   820                           ;Main.c: 162: displayValue[0] = 0x00;
   821  0063  01AB               	clrf	_displayValue
   822  0064                     i1l863:	
   823                           
   824                           ;Main.c: 163: }
   825                           ;Main.c: 166: displayValue[1] = DISPLAY_MAPPING[timeHours % 10];
   826  0064  300A               	movlw	10
   827  0065  00F0               	movwf	___awmod@divisor
   828  0066  3000               	movlw	0
   829  0067  00F1               	movwf	___awmod@divisor+1
   830  0068  0830               	movf	_timeHours,w
   831  0069  00B8               	movwf	??_updateDisplay
   832  006A  01B9               	clrf	??_updateDisplay+1
   833  006B  0838               	movf	??_updateDisplay,w
   834  006C  00F2               	movwf	___awmod@dividend
   835  006D  0839               	movf	??_updateDisplay+1,w
   836  006E  00F3               	movwf	___awmod@dividend+1
   837  006F  3181  2128  3180   	fcall	___awmod
   838  0072  0870               	movf	?___awmod,w
   839  0073  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   840  0074  0086               	movwf	6
   841  0075  0187               	clrf	7
   842  0076  0801               	movf	1,w
   843  0077  0020               	movlb	0	; select bank0
   844  0078  00BA               	movwf	??_updateDisplay+2
   845  0079  083A               	movf	??_updateDisplay+2,w
   846  007A  00AC               	movwf	_displayValue+1
   847                           
   848                           ;Main.c: 167: displayValue[2] = DISPLAY_MAPPING[timeHours % 100 / 10];
   849  007B  300A               	movlw	10
   850  007C  00F7               	movwf	___awdiv@divisor
   851  007D  3000               	movlw	0
   852  007E  00F8               	movwf	___awdiv@divisor+1
   853  007F  0830               	movf	_timeHours,w
   854  0080  00B8               	movwf	??_updateDisplay
   855  0081  01B9               	clrf	??_updateDisplay+1
   856  0082  0838               	movf	??_updateDisplay,w
   857  0083  00F2               	movwf	___awmod@dividend
   858  0084  0839               	movf	??_updateDisplay+1,w
   859  0085  00F3               	movwf	___awmod@dividend+1
   860  0086  3064               	movlw	100
   861  0087  00F0               	movwf	___awmod@divisor
   862  0088  3000               	movlw	0
   863  0089  00F1               	movwf	___awmod@divisor+1
   864  008A  3181  2128  3180   	fcall	___awmod
   865  008D  0871               	movf	?___awmod+1,w
   866  008E  00FA               	movwf	___awdiv@dividend+1
   867  008F  0870               	movf	?___awmod,w
   868  0090  00F9               	movwf	___awdiv@dividend
   869  0091  3180  20D6  3180   	fcall	___awdiv
   870  0094  0877               	movf	?___awdiv,w
   871  0095  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   872  0096  0086               	movwf	6
   873  0097  0187               	clrf	7
   874  0098  0801               	movf	1,w
   875  0099  0020               	movlb	0	; select bank0
   876  009A  00BA               	movwf	??_updateDisplay+2
   877  009B  083A               	movf	??_updateDisplay+2,w
   878  009C  00AD               	movwf	_displayValue+2
   879                           
   880                           ;Main.c: 168: displayValue[3] = DISPLAY_MAPPING[timeMinutes % 100 / 10];
   881  009D  300A               	movlw	10
   882  009E  00F7               	movwf	___awdiv@divisor
   883  009F  3000               	movlw	0
   884  00A0  00F8               	movwf	___awdiv@divisor+1
   885  00A1  0831               	movf	_timeMinutes,w
   886  00A2  00B8               	movwf	??_updateDisplay
   887  00A3  01B9               	clrf	??_updateDisplay+1
   888  00A4  0838               	movf	??_updateDisplay,w
   889  00A5  00F2               	movwf	___awmod@dividend
   890  00A6  0839               	movf	??_updateDisplay+1,w
   891  00A7  00F3               	movwf	___awmod@dividend+1
   892  00A8  3064               	movlw	100
   893  00A9  00F0               	movwf	___awmod@divisor
   894  00AA  3000               	movlw	0
   895  00AB  00F1               	movwf	___awmod@divisor+1
   896  00AC  3181  2128  3180   	fcall	___awmod
   897  00AF  0871               	movf	?___awmod+1,w
   898  00B0  00FA               	movwf	___awdiv@dividend+1
   899  00B1  0870               	movf	?___awmod,w
   900  00B2  00F9               	movwf	___awdiv@dividend
   901  00B3  3180  20D6  3180   	fcall	___awdiv
   902  00B6  0877               	movf	?___awdiv,w
   903  00B7  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   904  00B8  0086               	movwf	6
   905  00B9  0187               	clrf	7
   906  00BA  0801               	movf	1,w
   907  00BB  0020               	movlb	0	; select bank0
   908  00BC  00BA               	movwf	??_updateDisplay+2
   909  00BD  083A               	movf	??_updateDisplay+2,w
   910  00BE  00AE               	movwf	_displayValue+3
   911                           
   912                           ;Main.c: 169: displayValue[4] = DISPLAY_MAPPING[timeMinutes % 10];
   913  00BF  300A               	movlw	10
   914  00C0  00F0               	movwf	___awmod@divisor
   915  00C1  3000               	movlw	0
   916  00C2  00F1               	movwf	___awmod@divisor+1
   917  00C3  0831               	movf	_timeMinutes,w
   918  00C4  00B8               	movwf	??_updateDisplay
   919  00C5  01B9               	clrf	??_updateDisplay+1
   920  00C6  0838               	movf	??_updateDisplay,w
   921  00C7  00F2               	movwf	___awmod@dividend
   922  00C8  0839               	movf	??_updateDisplay+1,w
   923  00C9  00F3               	movwf	___awmod@dividend+1
   924  00CA  3181  2128         	fcall	___awmod
   925  00CC  0870               	movf	?___awmod,w
   926  00CD  3E20               	addlw	(low (_DISPLAY_MAPPING| 0))& (0+255)
   927  00CE  0086               	movwf	6
   928  00CF  0187               	clrf	7
   929  00D0  0801               	movf	1,w
   930  00D1  0020               	movlb	0	; select bank0
   931  00D2  00BA               	movwf	??_updateDisplay+2
   932  00D3  083A               	movf	??_updateDisplay+2,w
   933  00D4  00AF               	movwf	_displayValue+4
   934  00D5  0008               	return
   935  00D6                     __end_of_updateDisplay:	
   936                           
   937                           	psect	text4
   938  0128                     __ptext4:	
   939 ;; *************** function ___awmod *****************
   940 ;; Defined at:
   941 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   942 ;; Parameters:    Size  Location     Type
   943 ;;  divisor         2    0[COMMON] int 
   944 ;;  dividend        2    2[COMMON] int 
   945 ;; Auto vars:     Size  Location     Type
   946 ;;  sign            1    6[COMMON] unsigned char 
   947 ;;  counter         1    5[COMMON] unsigned char 
   948 ;; Return value:  Size  Location     Type
   949 ;;                  2    0[COMMON] int 
   950 ;; Registers used:
   951 ;;		wreg, status,2, status,0
   952 ;; Tracked objects:
   953 ;;		On entry : 0/0
   954 ;;		On exit  : 0/0
   955 ;;		Unchanged: 0/0
   956 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   957 ;;      Params:         4       0       0       0       0       0       0       0
   958 ;;      Locals:         2       0       0       0       0       0       0       0
   959 ;;      Temps:          1       0       0       0       0       0       0       0
   960 ;;      Totals:         7       0       0       0       0       0       0       0
   961 ;;Total ram usage:        7 bytes
   962 ;; Hardware stack levels used:    1
   963 ;; This function calls:
   964 ;;		Nothing
   965 ;; This function is called by:
   966 ;;		_updateDisplay
   967 ;; This function uses a non-reentrant model
   968 ;;
   969                           
   970                           
   971                           ;psect for function ___awmod
   972  0128                     ___awmod:	
   973                           
   974                           ;incstack = 0
   975                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   976  0128  01F6               	clrf	___awmod@sign
   977  0129  1FF3               	btfss	___awmod@dividend+1,7
   978  012A  2932               	goto	i1l785
   979  012B  09F2               	comf	___awmod@dividend,f
   980  012C  09F3               	comf	___awmod@dividend+1,f
   981  012D  0AF2               	incf	___awmod@dividend,f
   982  012E  1903               	skipnz
   983  012F  0AF3               	incf	___awmod@dividend+1,f
   984  0130  01F6               	clrf	___awmod@sign
   985  0131  0AF6               	incf	___awmod@sign,f
   986  0132                     i1l785:	
   987  0132  1FF1               	btfss	___awmod@divisor+1,7
   988  0133  2939               	goto	i1l789
   989  0134  09F0               	comf	___awmod@divisor,f
   990  0135  09F1               	comf	___awmod@divisor+1,f
   991  0136  0AF0               	incf	___awmod@divisor,f
   992  0137  1903               	skipnz
   993  0138  0AF1               	incf	___awmod@divisor+1,f
   994  0139                     i1l789:	
   995  0139  0870               	movf	___awmod@divisor,w
   996  013A  0471               	iorwf	___awmod@divisor+1,w
   997  013B  1903               	btfsc	3,2
   998  013C  2960               	goto	i1l807
   999  013D  01F5               	clrf	___awmod@counter
  1000  013E  0AF5               	incf	___awmod@counter,f
  1001  013F                     i1l797:	
  1002  013F  1BF1               	btfsc	___awmod@divisor+1,7
  1003  0140  294B               	goto	i1l799
  1004  0141  3001               	movlw	1
  1005  0142                     u48_25:	
  1006  0142  35F0               	lslf	___awmod@divisor,f
  1007  0143  0DF1               	rlf	___awmod@divisor+1,f
  1008  0144  0B89               	decfsz	9,f
  1009  0145  2942               	goto	u48_25
  1010  0146  3001               	movlw	1
  1011  0147  00F4               	movwf	??___awmod
  1012  0148  0874               	movf	??___awmod,w
  1013  0149  07F5               	addwf	___awmod@counter,f
  1014  014A  293F               	goto	i1l797
  1015  014B                     i1l799:	
  1016  014B  0871               	movf	___awmod@divisor+1,w
  1017  014C  0273               	subwf	___awmod@dividend+1,w
  1018  014D  1D03               	skipz
  1019  014E  2951               	goto	u50_25
  1020  014F  0870               	movf	___awmod@divisor,w
  1021  0150  0272               	subwf	___awmod@dividend,w
  1022  0151                     u50_25:	
  1023  0151  1C03               	skipc
  1024  0152  2957               	goto	i1l803
  1025  0153  0870               	movf	___awmod@divisor,w
  1026  0154  02F2               	subwf	___awmod@dividend,f
  1027  0155  0871               	movf	___awmod@divisor+1,w
  1028  0156  3BF3               	subwfb	___awmod@dividend+1,f
  1029  0157                     i1l803:	
  1030  0157  3001               	movlw	1
  1031  0158                     u51_25:	
  1032  0158  36F1               	lsrf	___awmod@divisor+1,f
  1033  0159  0CF0               	rrf	___awmod@divisor,f
  1034  015A  0B89               	decfsz	9,f
  1035  015B  2958               	goto	u51_25
  1036  015C  3001               	movlw	1
  1037  015D  02F5               	subwf	___awmod@counter,f
  1038  015E  1D03               	btfss	3,2
  1039  015F  294B               	goto	i1l799
  1040  0160                     i1l807:	
  1041  0160  0876               	movf	___awmod@sign,w
  1042  0161  1903               	btfsc	3,2
  1043  0162  2968               	goto	i1l811
  1044  0163  09F2               	comf	___awmod@dividend,f
  1045  0164  09F3               	comf	___awmod@dividend+1,f
  1046  0165  0AF2               	incf	___awmod@dividend,f
  1047  0166  1903               	skipnz
  1048  0167  0AF3               	incf	___awmod@dividend+1,f
  1049  0168                     i1l811:	
  1050  0168  0873               	movf	___awmod@dividend+1,w
  1051  0169  00F1               	movwf	?___awmod+1
  1052  016A  0872               	movf	___awmod@dividend,w
  1053  016B  00F0               	movwf	?___awmod
  1054  016C  0008               	return
  1055  016D                     __end_of___awmod:	
  1056                           
  1057                           	psect	text5
  1058  00D6                     __ptext5:	
  1059 ;; *************** function ___awdiv *****************
  1060 ;; Defined at:
  1061 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;  divisor         2    7[COMMON] int 
  1064 ;;  dividend        2    9[COMMON] int 
  1065 ;; Auto vars:     Size  Location     Type
  1066 ;;  quotient        2    2[BANK0 ] int 
  1067 ;;  sign            1    1[BANK0 ] unsigned char 
  1068 ;;  counter         1    0[BANK0 ] unsigned char 
  1069 ;; Return value:  Size  Location     Type
  1070 ;;                  2    7[COMMON] int 
  1071 ;; Registers used:
  1072 ;;		wreg, status,2, status,0
  1073 ;; Tracked objects:
  1074 ;;		On entry : 0/0
  1075 ;;		On exit  : 0/0
  1076 ;;		Unchanged: 0/0
  1077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1078 ;;      Params:         4       0       0       0       0       0       0       0
  1079 ;;      Locals:         0       4       0       0       0       0       0       0
  1080 ;;      Temps:          1       0       0       0       0       0       0       0
  1081 ;;      Totals:         5       4       0       0       0       0       0       0
  1082 ;;Total ram usage:        9 bytes
  1083 ;; Hardware stack levels used:    1
  1084 ;; This function calls:
  1085 ;;		Nothing
  1086 ;; This function is called by:
  1087 ;;		_updateDisplay
  1088 ;; This function uses a non-reentrant model
  1089 ;;
  1090                           
  1091                           
  1092                           ;psect for function ___awdiv
  1093  00D6                     ___awdiv:	
  1094                           
  1095                           ;incstack = 0
  1096                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1097  00D6  0020               	movlb	0	; select bank0
  1098  00D7  01B5               	clrf	___awdiv@sign
  1099  00D8  1FF8               	btfss	___awdiv@divisor+1,7
  1100  00D9  28E1               	goto	i1l741
  1101  00DA  09F7               	comf	___awdiv@divisor,f
  1102  00DB  09F8               	comf	___awdiv@divisor+1,f
  1103  00DC  0AF7               	incf	___awdiv@divisor,f
  1104  00DD  1903               	skipnz
  1105  00DE  0AF8               	incf	___awdiv@divisor+1,f
  1106  00DF  01B5               	clrf	___awdiv@sign
  1107  00E0  0AB5               	incf	___awdiv@sign,f
  1108  00E1                     i1l741:	
  1109  00E1  1FFA               	btfss	___awdiv@dividend+1,7
  1110  00E2  28EC               	goto	i1l747
  1111  00E3  09F9               	comf	___awdiv@dividend,f
  1112  00E4  09FA               	comf	___awdiv@dividend+1,f
  1113  00E5  0AF9               	incf	___awdiv@dividend,f
  1114  00E6  1903               	skipnz
  1115  00E7  0AFA               	incf	___awdiv@dividend+1,f
  1116  00E8  3001               	movlw	1
  1117  00E9  00FB               	movwf	??___awdiv
  1118  00EA  087B               	movf	??___awdiv,w
  1119  00EB  06B5               	xorwf	___awdiv@sign,f
  1120  00EC                     i1l747:	
  1121  00EC  01B6               	clrf	___awdiv@quotient
  1122  00ED  01B7               	clrf	___awdiv@quotient+1
  1123  00EE  0877               	movf	___awdiv@divisor,w
  1124  00EF  0478               	iorwf	___awdiv@divisor+1,w
  1125  00F0  1903               	btfsc	3,2
  1126  00F1  291B               	goto	i1l769
  1127  00F2  01B4               	clrf	___awdiv@counter
  1128  00F3  0AB4               	incf	___awdiv@counter,f
  1129  00F4                     i1l757:	
  1130  00F4  1BF8               	btfsc	___awdiv@divisor+1,7
  1131  00F5  2900               	goto	i1l759
  1132  00F6  3001               	movlw	1
  1133  00F7                     u38_25:	
  1134  00F7  35F7               	lslf	___awdiv@divisor,f
  1135  00F8  0DF8               	rlf	___awdiv@divisor+1,f
  1136  00F9  0B89               	decfsz	9,f
  1137  00FA  28F7               	goto	u38_25
  1138  00FB  3001               	movlw	1
  1139  00FC  00FB               	movwf	??___awdiv
  1140  00FD  087B               	movf	??___awdiv,w
  1141  00FE  07B4               	addwf	___awdiv@counter,f
  1142  00FF  28F4               	goto	i1l757
  1143  0100                     i1l759:	
  1144  0100  3001               	movlw	1
  1145  0101                     u40_25:	
  1146  0101  35B6               	lslf	___awdiv@quotient,f
  1147  0102  0DB7               	rlf	___awdiv@quotient+1,f
  1148  0103  0B89               	decfsz	9,f
  1149  0104  2901               	goto	u40_25
  1150  0105  0878               	movf	___awdiv@divisor+1,w
  1151  0106  027A               	subwf	___awdiv@dividend+1,w
  1152  0107  1D03               	skipz
  1153  0108  290B               	goto	u41_25
  1154  0109  0877               	movf	___awdiv@divisor,w
  1155  010A  0279               	subwf	___awdiv@dividend,w
  1156  010B                     u41_25:	
  1157  010B  1C03               	skipc
  1158  010C  2912               	goto	i1l765
  1159  010D  0877               	movf	___awdiv@divisor,w
  1160  010E  02F9               	subwf	___awdiv@dividend,f
  1161  010F  0878               	movf	___awdiv@divisor+1,w
  1162  0110  3BFA               	subwfb	___awdiv@dividend+1,f
  1163  0111  1436               	bsf	___awdiv@quotient,0
  1164  0112                     i1l765:	
  1165  0112  3001               	movlw	1
  1166  0113                     u42_25:	
  1167  0113  36F8               	lsrf	___awdiv@divisor+1,f
  1168  0114  0CF7               	rrf	___awdiv@divisor,f
  1169  0115  0B89               	decfsz	9,f
  1170  0116  2913               	goto	u42_25
  1171  0117  3001               	movlw	1
  1172  0118  02B4               	subwf	___awdiv@counter,f
  1173  0119  1D03               	btfss	3,2
  1174  011A  2900               	goto	i1l759
  1175  011B                     i1l769:	
  1176  011B  0835               	movf	___awdiv@sign,w
  1177  011C  1903               	btfsc	3,2
  1178  011D  2923               	goto	i1l773
  1179  011E  09B6               	comf	___awdiv@quotient,f
  1180  011F  09B7               	comf	___awdiv@quotient+1,f
  1181  0120  0AB6               	incf	___awdiv@quotient,f
  1182  0121  1903               	skipnz
  1183  0122  0AB7               	incf	___awdiv@quotient+1,f
  1184  0123                     i1l773:	
  1185  0123  0837               	movf	___awdiv@quotient+1,w
  1186  0124  00F8               	movwf	?___awdiv+1
  1187  0125  0836               	movf	___awdiv@quotient,w
  1188  0126  00F7               	movwf	?___awdiv
  1189  0127  0008               	return
  1190  0128                     __end_of___awdiv:	
  1191                           
  1192                           	psect	text6
  1193  01BA                     __ptext6:	
  1194 ;; *************** function _updateClock *****************
  1195 ;; Defined at:
  1196 ;;		line 121 in file "Main.c"
  1197 ;; Parameters:    Size  Location     Type
  1198 ;;		None
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;		None
  1201 ;; Return value:  Size  Location     Type
  1202 ;;		None               void
  1203 ;; Registers used:
  1204 ;;		wreg, status,2, status,0
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1210 ;;      Params:         0       0       0       0       0       0       0       0
  1211 ;;      Locals:         0       0       0       0       0       0       0       0
  1212 ;;      Temps:          1       0       0       0       0       0       0       0
  1213 ;;      Totals:         1       0       0       0       0       0       0       0
  1214 ;;Total ram usage:        1 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; This function calls:
  1217 ;;		Nothing
  1218 ;; This function is called by:
  1219 ;;		_onInterrupt
  1220 ;; This function uses a non-reentrant model
  1221 ;;
  1222                           
  1223                           
  1224                           ;psect for function _updateClock
  1225  01BA                     _updateClock:	
  1226                           
  1227                           ;Main.c: 122: timeSeconds++;
  1228                           
  1229                           ;incstack = 0
  1230                           ; Regs used in _updateClock: [wreg+status,2+status,0]
  1231  01BA  3001               	movlw	1
  1232  01BB  00F0               	movwf	??_updateClock
  1233  01BC  0870               	movf	??_updateClock,w
  1234  01BD  0020               	movlb	0	; select bank0
  1235  01BE  07B2               	addwf	_timeSeconds,f
  1236                           
  1237                           ;Main.c: 124: if (timeSeconds == 120) {
  1238  01BF  3078               	movlw	120
  1239  01C0  0632               	xorwf	_timeSeconds,w
  1240  01C1  1D03               	btfss	3,2
  1241  01C2  0008               	return
  1242                           
  1243                           ;Main.c: 125: timeSeconds = 0;
  1244  01C3  01B2               	clrf	_timeSeconds
  1245                           
  1246                           ;Main.c: 127: timeMinutes++;
  1247  01C4  3001               	movlw	1
  1248  01C5  00F0               	movwf	??_updateClock
  1249  01C6  0870               	movf	??_updateClock,w
  1250  01C7  07B1               	addwf	_timeMinutes,f
  1251                           
  1252                           ;Main.c: 129: if (timeMinutes == 60) {
  1253  01C8  303C               	movlw	60
  1254  01C9  0631               	xorwf	_timeMinutes,w
  1255  01CA  1D03               	btfss	3,2
  1256  01CB  0008               	return
  1257                           
  1258                           ;Main.c: 130: timeMinutes = 0;
  1259  01CC  01B1               	clrf	_timeMinutes
  1260                           
  1261                           ;Main.c: 132: timeHours++;
  1262  01CD  3001               	movlw	1
  1263  01CE  00F0               	movwf	??_updateClock
  1264  01CF  0870               	movf	??_updateClock,w
  1265  01D0  07B0               	addwf	_timeHours,f
  1266                           
  1267                           ;Main.c: 134: if (timeHours == 24) {
  1268  01D1  3018               	movlw	24
  1269  01D2  0630               	xorwf	_timeHours,w
  1270  01D3  1D03               	btfss	3,2
  1271  01D4  0008               	return
  1272                           
  1273                           ;Main.c: 135: timeHours = 0;
  1274  01D5  01B0               	clrf	_timeHours
  1275  01D6  0008               	return
  1276  01D7                     __end_of_updateClock:	
  1277                           
  1278                           	psect	text7
  1279  0197                     __ptext7:	
  1280 ;; *************** function _multiplexDisplay *****************
  1281 ;; Defined at:
  1282 ;;		line 142 in file "Main.c"
  1283 ;; Parameters:    Size  Location     Type
  1284 ;;		None
  1285 ;; Auto vars:     Size  Location     Type
  1286 ;;		None
  1287 ;; Return value:  Size  Location     Type
  1288 ;;		None               void
  1289 ;; Registers used:
  1290 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1291 ;; Tracked objects:
  1292 ;;		On entry : 0/0
  1293 ;;		On exit  : 0/0
  1294 ;;		Unchanged: 0/0
  1295 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1296 ;;      Params:         0       0       0       0       0       0       0       0
  1297 ;;      Locals:         0       0       0       0       0       0       0       0
  1298 ;;      Temps:          1       0       0       0       0       0       0       0
  1299 ;;      Totals:         1       0       0       0       0       0       0       0
  1300 ;;Total ram usage:        1 bytes
  1301 ;; Hardware stack levels used:    1
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_onInterrupt
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _multiplexDisplay
  1311  0197                     _multiplexDisplay:	
  1312                           
  1313                           ;Main.c: 143: displayDigit++;
  1314                           
  1315                           ;incstack = 0
  1316                           ; Regs used in _multiplexDisplay: [wreg+fsr1l+fsr1h+status,2+status,0]
  1317  0197  3001               	movlw	1
  1318  0198  00F0               	movwf	??_multiplexDisplay
  1319  0199  0870               	movf	??_multiplexDisplay,w
  1320  019A  0020               	movlb	0	; select bank0
  1321  019B  07B3               	addwf	_displayDigit,f
  1322                           
  1323                           ;Main.c: 146: if (displayDigit > 4) {
  1324  019C  3005               	movlw	5
  1325  019D  0233               	subwf	_displayDigit,w
  1326  019E  1C03               	skipc
  1327  019F  29A4               	goto	i1l853
  1328                           
  1329                           ;Main.c: 147: displayDigit = 0;
  1330  01A0  01B3               	clrf	_displayDigit
  1331                           
  1332                           ;Main.c: 148: LATB = 0x00;
  1333  01A1  0022               	movlb	2	; select bank2
  1334  01A2  018D               	clrf	13	;volatile
  1335                           
  1336                           ;Main.c: 149: } else {
  1337  01A3  29B1               	goto	i1l855
  1338  01A4                     i1l853:	
  1339                           
  1340                           ;Main.c: 150: LATB = 1 << displayDigit - 1;
  1341  01A4  3001               	movlw	1
  1342  01A5  00F0               	movwf	??_multiplexDisplay
  1343  01A6  0020               	movlb	0	; select bank0
  1344  01A7  0833               	movf	_displayDigit,w
  1345  01A8  3EFF               	addlw	-1
  1346  01A9  0A89               	incf	9,f
  1347  01AA  29AC               	goto	u58_24
  1348  01AB                     u58_25:	
  1349  01AB  35F0               	lslf	??_multiplexDisplay,f
  1350  01AC                     u58_24:	
  1351  01AC  0B89               	decfsz	9,f
  1352  01AD  29AB               	goto	u58_25
  1353  01AE  0870               	movf	??_multiplexDisplay,w
  1354  01AF  0022               	movlb	2	; select bank2
  1355  01B0  008D               	movwf	13	;volatile
  1356  01B1                     i1l855:	
  1357                           
  1358                           ;Main.c: 151: }
  1359                           ;Main.c: 153: LATA = ~displayValue[displayDigit];
  1360  01B1  0020               	movlb	0	; select bank0
  1361  01B2  0833               	movf	_displayDigit,w
  1362  01B3  3E2B               	addlw	(low (_displayValue| 0))& (0+255)
  1363  01B4  0086               	movwf	6
  1364  01B5  0187               	clrf	7
  1365  01B6  0901               	comf	1,w
  1366  01B7  0022               	movlb	2	; select bank2
  1367  01B8  008C               	movwf	12	;volatile
  1368  01B9  0008               	return
  1369  01BA                     __end_of_multiplexDisplay:	
  1370  007E                     btemp	set	126	;btemp
  1371  007E                     int$flags	set	126
  1372  007E                     wtemp	set	126
  1373  007E                     wtemp0	set	126
  1374  0080                     wtemp1	set	128
  1375  0082                     wtemp2	set	130
  1376  0084                     wtemp3	set	132
  1377  0086                     wtemp4	set	134
  1378  0088                     wtemp5	set	136
  1379  007F                     wtemp6	set	127
  1380  007E                     ttemp	set	126
  1381  007E                     ttemp0	set	126
  1382  0081                     ttemp1	set	129
  1383  0084                     ttemp2	set	132
  1384  0087                     ttemp3	set	135
  1385  007F                     ttemp4	set	127
  1386  007E                     ltemp	set	126
  1387  007E                     ltemp0	set	126
  1388  0082                     ltemp1	set	130
  1389  0086                     ltemp2	set	134
  1390  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    0
    Data        11
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      27
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _onInterrupt in COMMON

    _updateDisplay->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _onInterrupt in BANK0

    _onInterrupt->_updateDisplay
    _updateDisplay->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _onInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _onInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _onInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _onInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _onInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _onInterrupt in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _onInterrupt                                          2     2      0    1232
                                             12 COMMON     2     2      0
                   _multiplexDisplay
                        _updateClock
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (3) _updateDisplay                                        3     3      0    1232
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateClock                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _multiplexDisplay                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _onInterrupt (ROOT)
   _multiplexDisplay
   _updateClock
   _updateDisplay
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      29       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      1B       6       33.8%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      29      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Thu Jun 09 11:26:33 2016

              __CFG_CP$OFF 0000                         l66 01EB               ___awdiv@sign 0035  
                      _RB4 006C                        _RB5 006D                        _PR2 001B  
             __CFG_CPD$OFF 0000               ___awmod@sign 0076               __CFG_BORV$HI 0000  
                      wreg 0009               __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000  
                     _LATA 010C                       _LATB 010D                       _PIE1 0091  
                     _PIR1 0011                       i1l95 003C             ?_updateDisplay 0070  
                     _WPUA 020C                       _WPUB 020D               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 01E8                       fsr0h 0005  
                     fsr1h 0007                       fsr0l 0004                       indf1 0001  
                     fsr1l 0006                       btemp 007E              __CFG_BOREN$ON 0000  
                     ltemp 007E                       start 0041                       ttemp 007E  
                     wtemp 007E              __CFG_MCLRE$ON 0000               ?_onInterrupt 0070  
                    ?_main 0070            __end_of___awdiv 0128              __CFG_WDTE$OFF 0000  
          __end_of___awmod 016D            ___awdiv@divisor 0077                      _T1CON 0018  
                    _T2CON 001C                      i1l811 0168                      i1l803 0157  
                    i1l741 00E1                      i1l901 002E                      i1l807 0160  
                    i1l747 00EC                      i1l853 01A4                      i1l773 0123  
                    i1l765 0112                      i1l757 00F4                      i1l861 0063  
                    i1l855 01B1                      i1l759 0100                      i1l863 0064  
                    i1l769 011B                      i1l785 0132                      i1l883 0016  
                    i1l797 013F                      i1l789 0139                      i1l799 014B  
                    i1l889 001C            ___awdiv@counter 0034                      u40_25 0101  
                    _TMR1H 0017                      u41_25 010B                      _TMR1L 0016  
                    u42_25 0113                      u50_25 0151                      _PORTA 000C  
                    u51_25 0158                      u38_25 00F7                      u48_25 0142  
                    _TRISA 008C                      _TRISB 008D                      u58_24 01AC  
                    u58_25 01AB                      _setup 016D                      ltemp0 007E  
                    ltemp1 0082                      ltemp2 0086                      ltemp3 0080  
                    ttemp0 007E                      ttemp1 0081                      ttemp2 0084  
                    ttemp3 0087                      ttemp4 007F                      status 0003  
                    wtemp0 007E                      wtemp1 0080                      wtemp2 0082  
                    wtemp3 0084                      wtemp4 0086                      wtemp5 0088  
                    wtemp6 007F            __initialization 0043               __end_of_main 01EC  
                   ??_main 003B             __CFG_PLLEN$OFF 0000  __size_of_multiplexDisplay 0023  
          ??_updateDisplay 0038           ___awdiv@dividend 0079                     ?_setup 0070  
                   _ANSELA 018C                     _ANSELB 018D                     _INTCON 000B  
                   _OSCCON 0099                     _TMR0IF 005A                     _TMR1IF 0088  
                   _TMR2IF 0089             __CFG_PWRTE$OFF 0000                  ??___awdiv 007B  
           __CFG_STVREN$ON 0000                  ??___awmod 0074           ___awdiv@quotient 0036  
          ___awmod@divisor 0070            ___awmod@counter 0075    __end_of__initialization 0057  
             ?_updateClock 0070             __pcstackCOMMON 0070               __pidataBANK0 01D7  
            __end_of_setup 0197       __size_of_onInterrupt 003D                    ??_setup 003B  
               __pbssBANK0 002B            __CFG_VCAPEN$OFF 0000                 __pmaintext 01E8  
               __pintentry 0004           _multiplexDisplay 0197                    ___awdiv 00D6  
                  ___awmod 0128                    __ptext1 016D                    __ptext3 005B  
                  __ptext4 0128                    __ptext5 00D6                    __ptext6 01BA  
                  __ptext7 0197           ___awmod@dividend 0072       end_of_initialization 0057  
                  init_ram 01E2                    initloop 01E3       __size_of_updateClock 001D  
             _displayDigit 0033               _displayValue 002B           __CFG_FOSC$INTOSC 0000  
    __end_of_updateDisplay 00D6        start_initialization 0043   __end_of_multiplexDisplay 01BA  
            ??_onInterrupt 007C                __pdataBANK0 0020                  ___latbits 0001  
            __pcstackBANK0 0034            _DISPLAY_MAPPING 0020                   ?___awdiv 0077  
                 ?___awmod 0070        __end_of_onInterrupt 0041             __size_of_setup 002A  
                _timeHours 0030              ??_updateClock 0070                _onInterrupt 0004  
         __size_of___awdiv 0052           __size_of___awmod 0045              __size_of_main 0004  
        ?_multiplexDisplay 0070                   int$flags 007E         ??_multiplexDisplay 0070  
      __end_of_updateClock 01D7     __size_of_updateDisplay 007B                   intlevel1 0000  
        __CFG_CLKOUTEN$OFF 0000                _timeMinutes 0031                _timeSeconds 0032  
               _OPTION_REG 0095              _updateDisplay 005B                _updateClock 01BA  
