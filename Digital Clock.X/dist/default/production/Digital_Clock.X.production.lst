

Microchip Technology PIC LITE Macro Assembler V1.35 build -356382666 
                                                                                               Wed Jul 13 15:39:04 2016

Microchip Technology Omniscient Code Generator v1.35 (Free mode) build 201507080246
     1                           	processor	16F1783
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	stringtext,global,class=STRCODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	intentry,global,class=CODE,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	dabs	1,0x7E,2
    18  0000                     	;# 
    19  0001                     	;# 
    20  0002                     	;# 
    21  0003                     	;# 
    22  0004                     	;# 
    23  0005                     	;# 
    24  0006                     	;# 
    25  0007                     	;# 
    26  0008                     	;# 
    27  0009                     	;# 
    28  000A                     	;# 
    29  000B                     	;# 
    30  000C                     	;# 
    31  000D                     	;# 
    32  000E                     	;# 
    33  0010                     	;# 
    34  0011                     	;# 
    35  0012                     	;# 
    36  0014                     	;# 
    37  0015                     	;# 
    38  0016                     	;# 
    39  0016                     	;# 
    40  0017                     	;# 
    41  0018                     	;# 
    42  0019                     	;# 
    43  001A                     	;# 
    44  001B                     	;# 
    45  001C                     	;# 
    46  008C                     	;# 
    47  008D                     	;# 
    48  008E                     	;# 
    49  0090                     	;# 
    50  0091                     	;# 
    51  0092                     	;# 
    52  0094                     	;# 
    53  0095                     	;# 
    54  0096                     	;# 
    55  0097                     	;# 
    56  0098                     	;# 
    57  0099                     	;# 
    58  009A                     	;# 
    59  009B                     	;# 
    60  009B                     	;# 
    61  009C                     	;# 
    62  009D                     	;# 
    63  009E                     	;# 
    64  009F                     	;# 
    65  010C                     	;# 
    66  010D                     	;# 
    67  010E                     	;# 
    68  0111                     	;# 
    69  0112                     	;# 
    70  0113                     	;# 
    71  0114                     	;# 
    72  0115                     	;# 
    73  0116                     	;# 
    74  0117                     	;# 
    75  0118                     	;# 
    76  0119                     	;# 
    77  011D                     	;# 
    78  011D                     	;# 
    79  011E                     	;# 
    80  011F                     	;# 
    81  018C                     	;# 
    82  018D                     	;# 
    83  0191                     	;# 
    84  0191                     	;# 
    85  0192                     	;# 
    86  0193                     	;# 
    87  0193                     	;# 
    88  0193                     	;# 
    89  0194                     	;# 
    90  0195                     	;# 
    91  0196                     	;# 
    92  0197                     	;# 
    93  0199                     	;# 
    94  0199                     	;# 
    95  0199                     	;# 
    96  019A                     	;# 
    97  019A                     	;# 
    98  019A                     	;# 
    99  019B                     	;# 
   100  019B                     	;# 
   101  019B                     	;# 
   102  019B                     	;# 
   103  019B                     	;# 
   104  019C                     	;# 
   105  019C                     	;# 
   106  019C                     	;# 
   107  019D                     	;# 
   108  019D                     	;# 
   109  019D                     	;# 
   110  019E                     	;# 
   111  019E                     	;# 
   112  019E                     	;# 
   113  019F                     	;# 
   114  019F                     	;# 
   115  019F                     	;# 
   116  019F                     	;# 
   117  019F                     	;# 
   118  020C                     	;# 
   119  020D                     	;# 
   120  020E                     	;# 
   121  0210                     	;# 
   122  0211                     	;# 
   123  0211                     	;# 
   124  0212                     	;# 
   125  0212                     	;# 
   126  0213                     	;# 
   127  0213                     	;# 
   128  0214                     	;# 
   129  0214                     	;# 
   130  0215                     	;# 
   131  0215                     	;# 
   132  0215                     	;# 
   133  0216                     	;# 
   134  0216                     	;# 
   135  0217                     	;# 
   136  0217                     	;# 
   137  028C                     	;# 
   138  028D                     	;# 
   139  028E                     	;# 
   140  0291                     	;# 
   141  0291                     	;# 
   142  0292                     	;# 
   143  0293                     	;# 
   144  0298                     	;# 
   145  0298                     	;# 
   146  0299                     	;# 
   147  029A                     	;# 
   148  030C                     	;# 
   149  030D                     	;# 
   150  030E                     	;# 
   151  038C                     	;# 
   152  038D                     	;# 
   153  038E                     	;# 
   154  0390                     	;# 
   155  0391                     	;# 
   156  0392                     	;# 
   157  0393                     	;# 
   158  0394                     	;# 
   159  0395                     	;# 
   160  0396                     	;# 
   161  0397                     	;# 
   162  0398                     	;# 
   163  0399                     	;# 
   164  039D                     	;# 
   165  039E                     	;# 
   166  039F                     	;# 
   167  0511                     	;# 
   168  0513                     	;# 
   169  051A                     	;# 
   170  0811                     	;# 
   171  0812                     	;# 
   172  0813                     	;# 
   173  0814                     	;# 
   174  0815                     	;# 
   175  0816                     	;# 
   176  0817                     	;# 
   177  0818                     	;# 
   178  0819                     	;# 
   179  081A                     	;# 
   180  081B                     	;# 
   181  081C                     	;# 
   182  081D                     	;# 
   183  081E                     	;# 
   184  081F                     	;# 
   185  0820                     	;# 
   186  0821                     	;# 
   187  0821                     	;# 
   188  0822                     	;# 
   189  0823                     	;# 
   190  0823                     	;# 
   191  0824                     	;# 
   192  0825                     	;# 
   193  0825                     	;# 
   194  0826                     	;# 
   195  0827                     	;# 
   196  0827                     	;# 
   197  0828                     	;# 
   198  0829                     	;# 
   199  082A                     	;# 
   200  082B                     	;# 
   201  082C                     	;# 
   202  082D                     	;# 
   203  082E                     	;# 
   204  082F                     	;# 
   205  0831                     	;# 
   206  0832                     	;# 
   207  0833                     	;# 
   208  0834                     	;# 
   209  0835                     	;# 
   210  0836                     	;# 
   211  0837                     	;# 
   212  0838                     	;# 
   213  0839                     	;# 
   214  083A                     	;# 
   215  083B                     	;# 
   216  083C                     	;# 
   217  083D                     	;# 
   218  083E                     	;# 
   219  083F                     	;# 
   220  0840                     	;# 
   221  0841                     	;# 
   222  0841                     	;# 
   223  0842                     	;# 
   224  0843                     	;# 
   225  0843                     	;# 
   226  0844                     	;# 
   227  0845                     	;# 
   228  0845                     	;# 
   229  0846                     	;# 
   230  0847                     	;# 
   231  0847                     	;# 
   232  0848                     	;# 
   233  0849                     	;# 
   234  084A                     	;# 
   235  084B                     	;# 
   236  084C                     	;# 
   237  084D                     	;# 
   238  084E                     	;# 
   239  084F                     	;# 
   240  0FE4                     	;# 
   241  0FE5                     	;# 
   242  0FE6                     	;# 
   243  0FE7                     	;# 
   244  0FE8                     	;# 
   245  0FE9                     	;# 
   246  0FEA                     	;# 
   247  0FEB                     	;# 
   248  0FED                     	;# 
   249  0FEE                     	;# 
   250  0FEF                     	;# 
   251                           
   252                           	psect	stringtext
   253  01DF                     __pstringtext:	
   254  01DF                     _DISPLAY_MAPPING:	
   255  01DF  34FD               	retlw	253
   256  01E0  3430               	retlw	48
   257  01E1  345E               	retlw	94
   258  01E2  343E               	retlw	62
   259  01E3  3433               	retlw	51
   260  01E4  342F               	retlw	47
   261  01E5  346F               	retlw	111
   262  01E6  3434               	retlw	52
   263  01E7  347F               	retlw	127
   264  01E8  343F               	retlw	63
   265  01E9  3480               	retlw	128
   266  01EA                     __end_of_DISPLAY_MAPPING:	
   267  000B                     _INTCON	set	11
   268  0011                     _PIR1	set	17
   269  001B                     _PR2	set	27
   270  0018                     _T1CON	set	24
   271  001C                     _T2CON	set	28
   272  0017                     _TMR1H	set	23
   273  0016                     _TMR1L	set	22
   274  006E                     _RB6	set	110
   275  006F                     _RB7	set	111
   276  005A                     _TMR0IF	set	90
   277  0088                     _TMR1IF	set	136
   278  0089                     _TMR2IF	set	137
   279  0095                     _OPTION_REG	set	149
   280  0099                     _OSCCON	set	153
   281  0091                     _PIE1	set	145
   282  008C                     _TRISA	set	140
   283  008D                     _TRISB	set	141
   284  010C                     _LATA	set	268
   285  010D                     _LATB	set	269
   286  018C                     _ANSELA	set	396
   287  018D                     _ANSELB	set	397
   288  020C                     _WPUA	set	524
   289  020D                     _WPUB	set	525
   290                           
   291                           ; #config settings
   292  0000                     
   293                           	psect	cinit
   294  0043                     start_initialization:	
   295  0043                     __initialization:	
   296                           
   297                           ; Clear objects allocated to BANK0
   298  0043  01A0               	clrf	__pbssBANK0& (0+127)
   299  0044  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   300  0045  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   301  0046  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   302  0047  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   303  0048  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   304  0049  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   305  004A  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   306  004B  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   307  004C                     end_of_initialization:	
   308                           ;End of C runtime variable initialization code
   309                           
   310  004C                     __end_of__initialization:	
   311  004C  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
   312  004D  0020               	movlb	0
   313  004E  3181  29EA         	ljmp	_main	;jump to C main() function
   314                           
   315                           	psect	bssBANK0
   316  0020                     __pbssBANK0:	
   317  0020                     _displayValue:	
   318  0020                     	ds	5
   319  0025                     _timeHours:	
   320  0025                     	ds	1
   321  0026                     _timeMinutes:	
   322  0026                     	ds	1
   323  0027                     _timeSeconds:	
   324  0027                     	ds	1
   325  0028                     _displayDigit:	
   326  0028                     	ds	1
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:	
   330  0070                     ?_setup:	
   331  0070                     ?_main:	
   332                           ; 0 bytes @ 0x0
   333                           
   334  0070                     ?_updateClock:	
   335                           ; 0 bytes @ 0x0
   336                           
   337  0070                     ??_updateClock:	
   338                           ; 0 bytes @ 0x0
   339                           
   340  0070                     ?_multiplexDisplay:	
   341                           ; 0 bytes @ 0x0
   342                           
   343  0070                     ??_multiplexDisplay:	
   344                           ; 0 bytes @ 0x0
   345                           
   346  0070                     ?_updateDisplay:	
   347                           ; 0 bytes @ 0x0
   348                           
   349  0070                     ?_onInterrupt:	
   350                           ; 0 bytes @ 0x0
   351                           
   352  0070                     ?___awmod:	
   353                           ; 0 bytes @ 0x0
   354                           
   355  0070                     ___awmod@divisor:	
   356                           ; 2 bytes @ 0x0
   357                           
   358                           
   359                           ; 2 bytes @ 0x0
   360  0070                     	ds	2
   361  0072                     ___awmod@dividend:	
   362                           
   363                           ; 2 bytes @ 0x2
   364  0072                     	ds	2
   365  0074                     ??___awmod:	
   366                           
   367                           ; 0 bytes @ 0x4
   368  0074                     	ds	1
   369  0075                     ___awmod@counter:	
   370                           
   371                           ; 1 bytes @ 0x5
   372  0075                     	ds	1
   373  0076                     ___awmod@sign:	
   374                           
   375                           ; 1 bytes @ 0x6
   376  0076                     	ds	1
   377  0077                     ?___awdiv:	
   378  0077                     ___awdiv@divisor:	
   379                           ; 2 bytes @ 0x7
   380                           
   381                           
   382                           ; 2 bytes @ 0x7
   383  0077                     	ds	2
   384  0079                     ___awdiv@dividend:	
   385                           
   386                           ; 2 bytes @ 0x9
   387  0079                     	ds	2
   388  007B                     ??___awdiv:	
   389                           
   390                           ; 0 bytes @ 0xB
   391  007B                     	ds	1
   392  007C                     ??_onInterrupt:	
   393                           
   394                           ; 0 bytes @ 0xC
   395  007C                     	ds	2
   396                           
   397                           	psect	cstackBANK0
   398  0029                     __pcstackBANK0:	
   399  0029                     ___awdiv@counter:	
   400                           
   401                           ; 1 bytes @ 0x0
   402  0029                     	ds	1
   403  002A                     ___awdiv@sign:	
   404                           
   405                           ; 1 bytes @ 0x1
   406  002A                     	ds	1
   407  002B                     ___awdiv@quotient:	
   408                           
   409                           ; 2 bytes @ 0x2
   410  002B                     	ds	2
   411  002D                     ??_updateDisplay:	
   412                           
   413                           ; 0 bytes @ 0x4
   414  002D                     	ds	3
   415  0030                     ??_setup:	
   416  0030                     ??_main:	
   417                           ; 0 bytes @ 0x7
   418                           
   419                           
   420                           	psect	maintext
   421  01EA                     __pmaintext:	
   422                           ; 0 bytes @ 0x7
   423 ;;
   424 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   425 ;;
   426 ;; *************** function _main *****************
   427 ;; Defined at:
   428 ;;		line 112 in file "Main.c"
   429 ;; Parameters:    Size  Location     Type
   430 ;;		None
   431 ;; Auto vars:     Size  Location     Type
   432 ;;		None
   433 ;; Return value:  Size  Location     Type
   434 ;;		None               void
   435 ;; Registers used:
   436 ;;		wreg, status,2, status,0, pclath, cstack
   437 ;; Tracked objects:
   438 ;;		On entry : B1F/0
   439 ;;		On exit  : 0/0
   440 ;;		Unchanged: 0/0
   441 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   442 ;;      Params:         0       0       0       0       0       0       0       0
   443 ;;      Locals:         0       0       0       0       0       0       0       0
   444 ;;      Temps:          0       0       0       0       0       0       0       0
   445 ;;      Totals:         0       0       0       0       0       0       0       0
   446 ;;Total ram usage:        0 bytes
   447 ;; Hardware stack levels required when called:    4
   448 ;; This function calls:
   449 ;;		_setup
   450 ;; This function is called by:
   451 ;;		Startup code after reset
   452 ;; This function uses a non-reentrant model
   453 ;;
   454                           
   455                           
   456                           ;psect for function _main
   457  01EA                     _main:	
   458                           
   459                           ;Main.c: 113: setup();
   460                           
   461                           ;incstack = 0
   462                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   463  01EA  3181  2176  3181   	fcall	_setup
   464  01ED                     l64:	
   465                           ;Main.c: 116: while (1) {
   466                           
   467  01ED  29ED               	goto	l64
   468  01EE                     __end_of_main:	
   469                           
   470                           	psect	text1
   471  0176                     __ptext1:	
   472 ;; *************** function _setup *****************
   473 ;; Defined at:
   474 ;;		line 75 in file "Main.c"
   475 ;; Parameters:    Size  Location     Type
   476 ;;		None
   477 ;; Auto vars:     Size  Location     Type
   478 ;;		None
   479 ;; Return value:  Size  Location     Type
   480 ;;		None               void
   481 ;; Registers used:
   482 ;;		wreg, status,2
   483 ;; Tracked objects:
   484 ;;		On entry : 0/0
   485 ;;		On exit  : 0/0
   486 ;;		Unchanged: 0/0
   487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   488 ;;      Params:         0       0       0       0       0       0       0       0
   489 ;;      Locals:         0       0       0       0       0       0       0       0
   490 ;;      Temps:          0       0       0       0       0       0       0       0
   491 ;;      Totals:         0       0       0       0       0       0       0       0
   492 ;;Total ram usage:        0 bytes
   493 ;; Hardware stack levels used:    1
   494 ;; Hardware stack levels required when called:    3
   495 ;; This function calls:
   496 ;;		Nothing
   497 ;; This function is called by:
   498 ;;		_main
   499 ;; This function uses a non-reentrant model
   500 ;;
   501                           
   502                           
   503                           ;psect for function _setup
   504  0176                     _setup:	
   505                           
   506                           ;Main.c: 77: OSCCON = 0x70;
   507                           
   508                           ;incstack = 0
   509                           ; Regs used in _setup: [wreg+status,2]
   510  0176  3070               	movlw	112
   511  0177  0021               	movlb	1	; select bank1
   512  0178  0099               	movwf	25	;volatile
   513                           
   514                           ;Main.c: 78: OPTION_REG = 0x5F;
   515  0179  305F               	movlw	95
   516  017A  0095               	movwf	21	;volatile
   517                           
   518                           ;Main.c: 79: TMR1H = 0xFF;
   519  017B  30FF               	movlw	255
   520  017C  0020               	movlb	0	; select bank0
   521  017D  0097               	movwf	23	;volatile
   522                           
   523                           ;Main.c: 80: TMR1L = 0xFF;
   524  017E  30FF               	movlw	255
   525  017F  0096               	movwf	22	;volatile
   526                           
   527                           ;Main.c: 81: T1CON = 0x8D;
   528  0180  308D               	movlw	141
   529  0181  0098               	movwf	24	;volatile
   530                           
   531                           ;Main.c: 82: T2CON = 0x7F;
   532  0182  307F               	movlw	127
   533  0183  009C               	movwf	28	;volatile
   534                           
   535                           ;Main.c: 83: PR2 = 0xBF;;
   536  0184  30BF               	movlw	191
   537  0185  009B               	movwf	27	;volatile
   538                           
   539                           ;Main.c: 86: INTCON = 0xE0;
   540  0186  30E0               	movlw	224
   541  0187  008B               	movwf	11	;volatile
   542                           
   543                           ;Main.c: 87: PIR1 = 0x00;
   544  0188  0191               	clrf	17	;volatile
   545                           
   546                           ;Main.c: 88: PIE1 = 0x03;
   547  0189  3003               	movlw	3
   548  018A  0021               	movlb	1	; select bank1
   549  018B  0091               	movwf	17	;volatile
   550                           
   551                           ;Main.c: 91: TRISA = 0x00;
   552  018C  018C               	clrf	12	;volatile
   553                           
   554                           ;Main.c: 92: ANSELA = 0x00;
   555  018D  0023               	movlb	3	; select bank3
   556  018E  018C               	clrf	12	;volatile
   557                           
   558                           ;Main.c: 93: WPUA = 0x00;
   559  018F  0024               	movlb	4	; select bank4
   560  0190  018C               	clrf	12	;volatile
   561                           
   562                           ;Main.c: 94: LATA = 0x00;
   563  0191  0022               	movlb	2	; select bank2
   564  0192  018C               	clrf	12	;volatile
   565                           
   566                           ;Main.c: 96: TRISB = 0xE0;
   567  0193  30E0               	movlw	224
   568  0194  0021               	movlb	1	; select bank1
   569  0195  008D               	movwf	13	;volatile
   570                           
   571                           ;Main.c: 97: ANSELB = 0x00;
   572  0196  0023               	movlb	3	; select bank3
   573  0197  018D               	clrf	13	;volatile
   574                           
   575                           ;Main.c: 98: WPUB = 0xE0;
   576  0198  30E0               	movlw	224
   577  0199  0024               	movlb	4	; select bank4
   578  019A  008D               	movwf	13	;volatile
   579                           
   580                           ;Main.c: 99: LATB = 0x00;
   581  019B  0022               	movlb	2	; select bank2
   582  019C  018D               	clrf	13	;volatile
   583                           
   584                           ;Main.c: 102: timeSeconds = 0;
   585  019D  0020               	movlb	0	; select bank0
   586  019E  01A7               	clrf	_timeSeconds
   587                           
   588                           ;Main.c: 103: timeMinutes = 0;
   589  019F  01A6               	clrf	_timeMinutes
   590                           
   591                           ;Main.c: 104: timeHours = 0;
   592  01A0  01A5               	clrf	_timeHours
   593  01A1  0008               	return
   594  01A2                     __end_of_setup:	
   595                           
   596                           	psect	intentry
   597  0004                     __pintentry:	
   598 ;; *************** function _onInterrupt *****************
   599 ;; Defined at:
   600 ;;		line 181 in file "Main.c"
   601 ;; Parameters:    Size  Location     Type
   602 ;;		None
   603 ;; Auto vars:     Size  Location     Type
   604 ;;		None
   605 ;; Return value:  Size  Location     Type
   606 ;;		None               void
   607 ;; Registers used:
   608 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
   609 ;; Tracked objects:
   610 ;;		On entry : 0/0
   611 ;;		On exit  : 0/0
   612 ;;		Unchanged: 0/0
   613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   614 ;;      Params:         0       0       0       0       0       0       0       0
   615 ;;      Locals:         0       0       0       0       0       0       0       0
   616 ;;      Temps:          2       0       0       0       0       0       0       0
   617 ;;      Totals:         2       0       0       0       0       0       0       0
   618 ;;Total ram usage:        2 bytes
   619 ;; Hardware stack levels used:    1
   620 ;; Hardware stack levels required when called:    2
   621 ;; This function calls:
   622 ;;		_multiplexDisplay
   623 ;;		_updateClock
   624 ;;		_updateDisplay
   625 ;; This function is called by:
   626 ;;		Interrupt level 1
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630  0004                     _onInterrupt:	
   631                           
   632                           ;incstack = 0
   633                           ; Regs used in _onInterrupt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
   634  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
   635  0005  3180               	pagesel	$
   636  0006  0020               	movlb	0	; select bank0
   637  0007  087F               	movf	127,w
   638  0008  00FD               	movwf	??_onInterrupt+1
   639                           
   640                           ;Main.c: 183: if (TMR1IF) {
   641  0009  1C11               	btfss	17,0	;volatile
   642  000A  2816               	goto	i1l884
   643                           
   644                           ;Main.c: 184: TMR1IF = 0x00;
   645  000B  1011               	bcf	17,0	;volatile
   646                           
   647                           ;Main.c: 187: TMR1H = 0xBF;
   648  000C  30BF               	movlw	191
   649  000D  0097               	movwf	23	;volatile
   650                           
   651                           ;Main.c: 188: TMR1L = 0xFD;
   652  000E  30FD               	movlw	253
   653  000F  0096               	movwf	22	;volatile
   654                           
   655                           ;Main.c: 191: updateClock();
   656  0010  3181  21C2  3180   	fcall	_updateClock
   657                           
   658                           ;Main.c: 192: updateDisplay();
   659  0013  3180  2050  3180   	fcall	_updateDisplay
   660  0016                     i1l884:	
   661                           
   662                           ;Main.c: 193: }
   663                           ;Main.c: 196: if (TMR0IF) {
   664  0016  1D0B               	btfss	11,2	;volatile
   665  0017  281C               	goto	i1l890
   666                           
   667                           ;Main.c: 197: TMR0IF = 0x00;
   668  0018  110B               	bcf	11,2	;volatile
   669                           
   670                           ;Main.c: 200: multiplexDisplay();
   671  0019  3181  21A2  3180   	fcall	_multiplexDisplay
   672  001C                     i1l890:	
   673                           
   674                           ;Main.c: 201: }
   675                           ;Main.c: 204: if (TMR2IF) {
   676  001C  0020               	movlb	0	; select bank0
   677  001D  1C91               	btfss	17,1	;volatile
   678  001E  283C               	goto	i1l92
   679                           
   680                           ;Main.c: 205: TMR2IF = 0x00;
   681  001F  1091               	bcf	17,1	;volatile
   682                           
   683                           ;Main.c: 208: if (RB6 && !RB7) {
   684  0020  1B0D               	btfsc	13,6	;volatile
   685  0021  1B8D               	btfsc	13,7	;volatile
   686  0022  282E               	goto	i1l902
   687                           
   688                           ;Main.c: 209: timeMinutes++;
   689  0023  3001               	movlw	1
   690  0024  00FC               	movwf	??_onInterrupt
   691  0025  087C               	movf	??_onInterrupt,w
   692  0026  07A6               	addwf	_timeMinutes,f
   693                           
   694                           ;Main.c: 212: if (timeMinutes == 60) {
   695  0027  303C               	movlw	60
   696  0028  0626               	xorwf	_timeMinutes,w
   697  0029  1903               	btfsc	3,2
   698                           
   699                           ;Main.c: 213: timeMinutes = 0;
   700  002A  01A6               	clrf	_timeMinutes
   701                           
   702                           ;Main.c: 214: }
   703                           ;Main.c: 216: updateDisplay();
   704  002B  3180  2050  3180   	fcall	_updateDisplay
   705  002E                     i1l902:	
   706                           
   707                           ;Main.c: 217: }
   708                           ;Main.c: 220: if (!RB6 && RB7) {
   709  002E  0020               	movlb	0	; select bank0
   710  002F  1F0D               	btfss	13,6	;volatile
   711  0030  1F8D               	btfss	13,7	;volatile
   712  0031  283C               	goto	i1l92
   713                           
   714                           ;Main.c: 221: timeHours++;
   715  0032  3001               	movlw	1
   716  0033  00FC               	movwf	??_onInterrupt
   717  0034  087C               	movf	??_onInterrupt,w
   718  0035  07A5               	addwf	_timeHours,f
   719                           
   720                           ;Main.c: 224: if (timeHours == 24) {
   721  0036  3018               	movlw	24
   722  0037  0625               	xorwf	_timeHours,w
   723  0038  1903               	btfsc	3,2
   724                           
   725                           ;Main.c: 225: timeHours = 0;
   726  0039  01A5               	clrf	_timeHours
   727                           
   728                           ;Main.c: 226: }
   729                           ;Main.c: 228: updateDisplay();
   730  003A  3180  2050         	fcall	_updateDisplay
   731  003C                     i1l92:	
   732  003C  087D               	movf	??_onInterrupt+1,w
   733  003D  0020               	movlb	0	; select bank0
   734  003E  00FF               	movwf	127
   735  003F  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
   736  0040  0009               	retfie
   737  0041                     __end_of_onInterrupt:	
   738                           
   739                           	psect	text3
   740  0050                     __ptext3:	
   741 ;; *************** function _updateDisplay *****************
   742 ;; Defined at:
   743 ;;		line 161 in file "Main.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;		None               void
   750 ;; Registers used:
   751 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   757 ;;      Params:         0       0       0       0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0       0       0       0
   759 ;;      Temps:          0       3       0       0       0       0       0       0
   760 ;;      Totals:         0       3       0       0       0       0       0       0
   761 ;;Total ram usage:        3 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; Hardware stack levels required when called:    1
   764 ;; This function calls:
   765 ;;		___awdiv
   766 ;;		___awmod
   767 ;; This function is called by:
   768 ;;		_onInterrupt
   769 ;; This function uses a non-reentrant model
   770 ;;
   771                           
   772                           
   773                           ;psect for function _updateDisplay
   774  0050                     _updateDisplay:	
   775                           
   776                           ;Main.c: 163: if (timeSeconds % 2) {
   777                           
   778                           ;incstack = 0
   779                           ; Regs used in _updateDisplay: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   780  0050  0020               	movlb	0	; select bank0
   781  0051  1C27               	btfss	_timeSeconds,0
   782  0052  285C               	goto	i1l862
   783                           
   784                           ;Main.c: 164: displayValue[4] = DISPLAY_MAPPING[10];
   785  0053  30E9               	movlw	low ((_DISPLAY_MAPPING+10)| (0+32768))
   786  0054  0084               	movwf	4
   787  0055  3081               	movlw	high ((_DISPLAY_MAPPING+10)| (0+32768))
   788  0056  0085               	movwf	5
   789  0057  0800               	movf	0,w	;code access
   790  0058  00AD               	movwf	??_updateDisplay
   791  0059  082D               	movf	??_updateDisplay,w
   792  005A  00A4               	movwf	_displayValue+4
   793                           
   794                           ;Main.c: 165: } else {
   795  005B  285D               	goto	i1l864
   796  005C                     i1l862:	
   797                           
   798                           ;Main.c: 166: displayValue[4] = 0x00;
   799  005C  01A4               	clrf	_displayValue+4
   800  005D                     i1l864:	
   801                           
   802                           ;Main.c: 167: }
   803                           ;Main.c: 170: displayValue[3] = DISPLAY_MAPPING[timeHours % 100 / 10];
   804  005D  300A               	movlw	10
   805  005E  00F7               	movwf	___awdiv@divisor
   806  005F  3000               	movlw	0
   807  0060  00F8               	movwf	___awdiv@divisor+1
   808  0061  0825               	movf	_timeHours,w
   809  0062  00AD               	movwf	??_updateDisplay
   810  0063  01AE               	clrf	??_updateDisplay+1
   811  0064  082D               	movf	??_updateDisplay,w
   812  0065  00F2               	movwf	___awmod@dividend
   813  0066  082E               	movf	??_updateDisplay+1,w
   814  0067  00F3               	movwf	___awmod@dividend+1
   815  0068  3064               	movlw	100
   816  0069  00F0               	movwf	___awmod@divisor
   817  006A  3000               	movlw	0
   818  006B  00F1               	movwf	___awmod@divisor+1
   819  006C  3181  2131  3180   	fcall	___awmod
   820  006F  0871               	movf	?___awmod+1,w
   821  0070  00FA               	movwf	___awdiv@dividend+1
   822  0071  0870               	movf	?___awmod,w
   823  0072  00F9               	movwf	___awdiv@dividend
   824  0073  3180  20DF  3180   	fcall	___awdiv
   825  0076  0878               	movf	?___awdiv+1,w
   826  0077  0085               	movwf	5
   827  0078  0877               	movf	?___awdiv,w
   828  0079  0084               	movwf	4
   829  007A  30DF               	movlw	low (_DISPLAY_MAPPING| (0+32768))
   830  007B  0784               	addwf	4,f
   831  007C  3081               	movlw	high (_DISPLAY_MAPPING| (0+32768))
   832  007D  3D85               	addwfc	5,f
   833  007E  0800               	movf	0,w	;code access
   834  007F  0020               	movlb	0	; select bank0
   835  0080  00AF               	movwf	??_updateDisplay+2
   836  0081  082F               	movf	??_updateDisplay+2,w
   837  0082  00A3               	movwf	_displayValue+3
   838                           
   839                           ;Main.c: 171: displayValue[2] = DISPLAY_MAPPING[timeHours % 10];
   840  0083  300A               	movlw	10
   841  0084  00F0               	movwf	___awmod@divisor
   842  0085  3000               	movlw	0
   843  0086  00F1               	movwf	___awmod@divisor+1
   844  0087  0825               	movf	_timeHours,w
   845  0088  00AD               	movwf	??_updateDisplay
   846  0089  01AE               	clrf	??_updateDisplay+1
   847  008A  082D               	movf	??_updateDisplay,w
   848  008B  00F2               	movwf	___awmod@dividend
   849  008C  082E               	movf	??_updateDisplay+1,w
   850  008D  00F3               	movwf	___awmod@dividend+1
   851  008E  3181  2131  3180   	fcall	___awmod
   852  0091  0871               	movf	?___awmod+1,w
   853  0092  0085               	movwf	5
   854  0093  0870               	movf	?___awmod,w
   855  0094  0084               	movwf	4
   856  0095  30DF               	movlw	low (_DISPLAY_MAPPING| (0+32768))
   857  0096  0784               	addwf	4,f
   858  0097  3081               	movlw	high (_DISPLAY_MAPPING| (0+32768))
   859  0098  3D85               	addwfc	5,f
   860  0099  0800               	movf	0,w	;code access
   861  009A  0020               	movlb	0	; select bank0
   862  009B  00AF               	movwf	??_updateDisplay+2
   863  009C  082F               	movf	??_updateDisplay+2,w
   864  009D  00A2               	movwf	_displayValue+2
   865                           
   866                           ;Main.c: 172: displayValue[1] = DISPLAY_MAPPING[timeMinutes % 100 / 10];
   867  009E  300A               	movlw	10
   868  009F  00F7               	movwf	___awdiv@divisor
   869  00A0  3000               	movlw	0
   870  00A1  00F8               	movwf	___awdiv@divisor+1
   871  00A2  0826               	movf	_timeMinutes,w
   872  00A3  00AD               	movwf	??_updateDisplay
   873  00A4  01AE               	clrf	??_updateDisplay+1
   874  00A5  082D               	movf	??_updateDisplay,w
   875  00A6  00F2               	movwf	___awmod@dividend
   876  00A7  082E               	movf	??_updateDisplay+1,w
   877  00A8  00F3               	movwf	___awmod@dividend+1
   878  00A9  3064               	movlw	100
   879  00AA  00F0               	movwf	___awmod@divisor
   880  00AB  3000               	movlw	0
   881  00AC  00F1               	movwf	___awmod@divisor+1
   882  00AD  3181  2131  3180   	fcall	___awmod
   883  00B0  0871               	movf	?___awmod+1,w
   884  00B1  00FA               	movwf	___awdiv@dividend+1
   885  00B2  0870               	movf	?___awmod,w
   886  00B3  00F9               	movwf	___awdiv@dividend
   887  00B4  3180  20DF  3180   	fcall	___awdiv
   888  00B7  0878               	movf	?___awdiv+1,w
   889  00B8  0085               	movwf	5
   890  00B9  0877               	movf	?___awdiv,w
   891  00BA  0084               	movwf	4
   892  00BB  30DF               	movlw	low (_DISPLAY_MAPPING| (0+32768))
   893  00BC  0784               	addwf	4,f
   894  00BD  3081               	movlw	high (_DISPLAY_MAPPING| (0+32768))
   895  00BE  3D85               	addwfc	5,f
   896  00BF  0800               	movf	0,w	;code access
   897  00C0  0020               	movlb	0	; select bank0
   898  00C1  00AF               	movwf	??_updateDisplay+2
   899  00C2  082F               	movf	??_updateDisplay+2,w
   900  00C3  00A1               	movwf	_displayValue+1
   901                           
   902                           ;Main.c: 173: displayValue[0] = DISPLAY_MAPPING[timeMinutes % 10];
   903  00C4  300A               	movlw	10
   904  00C5  00F0               	movwf	___awmod@divisor
   905  00C6  3000               	movlw	0
   906  00C7  00F1               	movwf	___awmod@divisor+1
   907  00C8  0826               	movf	_timeMinutes,w
   908  00C9  00AD               	movwf	??_updateDisplay
   909  00CA  01AE               	clrf	??_updateDisplay+1
   910  00CB  082D               	movf	??_updateDisplay,w
   911  00CC  00F2               	movwf	___awmod@dividend
   912  00CD  082E               	movf	??_updateDisplay+1,w
   913  00CE  00F3               	movwf	___awmod@dividend+1
   914  00CF  3181  2131         	fcall	___awmod
   915  00D1  0871               	movf	?___awmod+1,w
   916  00D2  0085               	movwf	5
   917  00D3  0870               	movf	?___awmod,w
   918  00D4  0084               	movwf	4
   919  00D5  30DF               	movlw	low (_DISPLAY_MAPPING| (0+32768))
   920  00D6  0784               	addwf	4,f
   921  00D7  3081               	movlw	high (_DISPLAY_MAPPING| (0+32768))
   922  00D8  3D85               	addwfc	5,f
   923  00D9  0800               	movf	0,w	;code access
   924  00DA  0020               	movlb	0	; select bank0
   925  00DB  00AF               	movwf	??_updateDisplay+2
   926  00DC  082F               	movf	??_updateDisplay+2,w
   927  00DD  00A0               	movwf	_displayValue
   928  00DE  0008               	return
   929  00DF                     __end_of_updateDisplay:	
   930                           
   931                           	psect	text4
   932  0131                     __ptext4:	
   933 ;; *************** function ___awmod *****************
   934 ;; Defined at:
   935 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awmod.c"
   936 ;; Parameters:    Size  Location     Type
   937 ;;  divisor         2    0[COMMON] int 
   938 ;;  dividend        2    2[COMMON] int 
   939 ;; Auto vars:     Size  Location     Type
   940 ;;  sign            1    6[COMMON] unsigned char 
   941 ;;  counter         1    5[COMMON] unsigned char 
   942 ;; Return value:  Size  Location     Type
   943 ;;                  2    0[COMMON] int 
   944 ;; Registers used:
   945 ;;		wreg, status,2, status,0
   946 ;; Tracked objects:
   947 ;;		On entry : 0/0
   948 ;;		On exit  : 0/0
   949 ;;		Unchanged: 0/0
   950 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
   951 ;;      Params:         4       0       0       0       0       0       0       0
   952 ;;      Locals:         2       0       0       0       0       0       0       0
   953 ;;      Temps:          1       0       0       0       0       0       0       0
   954 ;;      Totals:         7       0       0       0       0       0       0       0
   955 ;;Total ram usage:        7 bytes
   956 ;; Hardware stack levels used:    1
   957 ;; This function calls:
   958 ;;		Nothing
   959 ;; This function is called by:
   960 ;;		_updateDisplay
   961 ;; This function uses a non-reentrant model
   962 ;;
   963                           
   964                           
   965                           ;psect for function ___awmod
   966  0131                     ___awmod:	
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   970  0131  01F6               	clrf	___awmod@sign
   971  0132  1FF3               	btfss	___awmod@dividend+1,7
   972  0133  293B               	goto	i1l784
   973  0134  09F2               	comf	___awmod@dividend,f
   974  0135  09F3               	comf	___awmod@dividend+1,f
   975  0136  0AF2               	incf	___awmod@dividend,f
   976  0137  1903               	skipnz
   977  0138  0AF3               	incf	___awmod@dividend+1,f
   978  0139  01F6               	clrf	___awmod@sign
   979  013A  0AF6               	incf	___awmod@sign,f
   980  013B                     i1l784:	
   981  013B  1FF1               	btfss	___awmod@divisor+1,7
   982  013C  2942               	goto	i1l788
   983  013D  09F0               	comf	___awmod@divisor,f
   984  013E  09F1               	comf	___awmod@divisor+1,f
   985  013F  0AF0               	incf	___awmod@divisor,f
   986  0140  1903               	skipnz
   987  0141  0AF1               	incf	___awmod@divisor+1,f
   988  0142                     i1l788:	
   989  0142  0870               	movf	___awmod@divisor,w
   990  0143  0471               	iorwf	___awmod@divisor+1,w
   991  0144  1903               	btfsc	3,2
   992  0145  2969               	goto	i1l806
   993  0146  01F5               	clrf	___awmod@counter
   994  0147  0AF5               	incf	___awmod@counter,f
   995  0148                     i1l796:	
   996  0148  1BF1               	btfsc	___awmod@divisor+1,7
   997  0149  2954               	goto	i1l798
   998  014A  3001               	movlw	1
   999  014B                     u48_25:	
  1000  014B  35F0               	lslf	___awmod@divisor,f
  1001  014C  0DF1               	rlf	___awmod@divisor+1,f
  1002  014D  0B89               	decfsz	9,f
  1003  014E  294B               	goto	u48_25
  1004  014F  3001               	movlw	1
  1005  0150  00F4               	movwf	??___awmod
  1006  0151  0874               	movf	??___awmod,w
  1007  0152  07F5               	addwf	___awmod@counter,f
  1008  0153  2948               	goto	i1l796
  1009  0154                     i1l798:	
  1010  0154  0871               	movf	___awmod@divisor+1,w
  1011  0155  0273               	subwf	___awmod@dividend+1,w
  1012  0156  1D03               	skipz
  1013  0157  295A               	goto	u50_25
  1014  0158  0870               	movf	___awmod@divisor,w
  1015  0159  0272               	subwf	___awmod@dividend,w
  1016  015A                     u50_25:	
  1017  015A  1C03               	skipc
  1018  015B  2960               	goto	i1l802
  1019  015C  0870               	movf	___awmod@divisor,w
  1020  015D  02F2               	subwf	___awmod@dividend,f
  1021  015E  0871               	movf	___awmod@divisor+1,w
  1022  015F  3BF3               	subwfb	___awmod@dividend+1,f
  1023  0160                     i1l802:	
  1024  0160  3001               	movlw	1
  1025  0161                     u51_25:	
  1026  0161  36F1               	lsrf	___awmod@divisor+1,f
  1027  0162  0CF0               	rrf	___awmod@divisor,f
  1028  0163  0B89               	decfsz	9,f
  1029  0164  2961               	goto	u51_25
  1030  0165  3001               	movlw	1
  1031  0166  02F5               	subwf	___awmod@counter,f
  1032  0167  1D03               	btfss	3,2
  1033  0168  2954               	goto	i1l798
  1034  0169                     i1l806:	
  1035  0169  0876               	movf	___awmod@sign,w
  1036  016A  1903               	btfsc	3,2
  1037  016B  2971               	goto	i1l810
  1038  016C  09F2               	comf	___awmod@dividend,f
  1039  016D  09F3               	comf	___awmod@dividend+1,f
  1040  016E  0AF2               	incf	___awmod@dividend,f
  1041  016F  1903               	skipnz
  1042  0170  0AF3               	incf	___awmod@dividend+1,f
  1043  0171                     i1l810:	
  1044  0171  0873               	movf	___awmod@dividend+1,w
  1045  0172  00F1               	movwf	?___awmod+1
  1046  0173  0872               	movf	___awmod@dividend,w
  1047  0174  00F0               	movwf	?___awmod
  1048  0175  0008               	return
  1049  0176                     __end_of___awmod:	
  1050                           
  1051                           	psect	text5
  1052  00DF                     __ptext5:	
  1053 ;; *************** function ___awdiv *****************
  1054 ;; Defined at:
  1055 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.35\sources\common\awdiv.c"
  1056 ;; Parameters:    Size  Location     Type
  1057 ;;  divisor         2    7[COMMON] int 
  1058 ;;  dividend        2    9[COMMON] int 
  1059 ;; Auto vars:     Size  Location     Type
  1060 ;;  quotient        2    2[BANK0 ] int 
  1061 ;;  sign            1    1[BANK0 ] unsigned char 
  1062 ;;  counter         1    0[BANK0 ] unsigned char 
  1063 ;; Return value:  Size  Location     Type
  1064 ;;                  2    7[COMMON] int 
  1065 ;; Registers used:
  1066 ;;		wreg, status,2, status,0
  1067 ;; Tracked objects:
  1068 ;;		On entry : 0/0
  1069 ;;		On exit  : 0/0
  1070 ;;		Unchanged: 0/0
  1071 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1072 ;;      Params:         4       0       0       0       0       0       0       0
  1073 ;;      Locals:         0       4       0       0       0       0       0       0
  1074 ;;      Temps:          1       0       0       0       0       0       0       0
  1075 ;;      Totals:         5       4       0       0       0       0       0       0
  1076 ;;Total ram usage:        9 bytes
  1077 ;; Hardware stack levels used:    1
  1078 ;; This function calls:
  1079 ;;		Nothing
  1080 ;; This function is called by:
  1081 ;;		_updateDisplay
  1082 ;; This function uses a non-reentrant model
  1083 ;;
  1084                           
  1085                           
  1086                           ;psect for function ___awdiv
  1087  00DF                     ___awdiv:	
  1088                           
  1089                           ;incstack = 0
  1090                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1091  00DF  0020               	movlb	0	; select bank0
  1092  00E0  01AA               	clrf	___awdiv@sign
  1093  00E1  1FF8               	btfss	___awdiv@divisor+1,7
  1094  00E2  28EA               	goto	i1l740
  1095  00E3  09F7               	comf	___awdiv@divisor,f
  1096  00E4  09F8               	comf	___awdiv@divisor+1,f
  1097  00E5  0AF7               	incf	___awdiv@divisor,f
  1098  00E6  1903               	skipnz
  1099  00E7  0AF8               	incf	___awdiv@divisor+1,f
  1100  00E8  01AA               	clrf	___awdiv@sign
  1101  00E9  0AAA               	incf	___awdiv@sign,f
  1102  00EA                     i1l740:	
  1103  00EA  1FFA               	btfss	___awdiv@dividend+1,7
  1104  00EB  28F5               	goto	i1l746
  1105  00EC  09F9               	comf	___awdiv@dividend,f
  1106  00ED  09FA               	comf	___awdiv@dividend+1,f
  1107  00EE  0AF9               	incf	___awdiv@dividend,f
  1108  00EF  1903               	skipnz
  1109  00F0  0AFA               	incf	___awdiv@dividend+1,f
  1110  00F1  3001               	movlw	1
  1111  00F2  00FB               	movwf	??___awdiv
  1112  00F3  087B               	movf	??___awdiv,w
  1113  00F4  06AA               	xorwf	___awdiv@sign,f
  1114  00F5                     i1l746:	
  1115  00F5  01AB               	clrf	___awdiv@quotient
  1116  00F6  01AC               	clrf	___awdiv@quotient+1
  1117  00F7  0877               	movf	___awdiv@divisor,w
  1118  00F8  0478               	iorwf	___awdiv@divisor+1,w
  1119  00F9  1903               	btfsc	3,2
  1120  00FA  2924               	goto	i1l768
  1121  00FB  01A9               	clrf	___awdiv@counter
  1122  00FC  0AA9               	incf	___awdiv@counter,f
  1123  00FD                     i1l756:	
  1124  00FD  1BF8               	btfsc	___awdiv@divisor+1,7
  1125  00FE  2909               	goto	i1l758
  1126  00FF  3001               	movlw	1
  1127  0100                     u38_25:	
  1128  0100  35F7               	lslf	___awdiv@divisor,f
  1129  0101  0DF8               	rlf	___awdiv@divisor+1,f
  1130  0102  0B89               	decfsz	9,f
  1131  0103  2900               	goto	u38_25
  1132  0104  3001               	movlw	1
  1133  0105  00FB               	movwf	??___awdiv
  1134  0106  087B               	movf	??___awdiv,w
  1135  0107  07A9               	addwf	___awdiv@counter,f
  1136  0108  28FD               	goto	i1l756
  1137  0109                     i1l758:	
  1138  0109  3001               	movlw	1
  1139  010A                     u40_25:	
  1140  010A  35AB               	lslf	___awdiv@quotient,f
  1141  010B  0DAC               	rlf	___awdiv@quotient+1,f
  1142  010C  0B89               	decfsz	9,f
  1143  010D  290A               	goto	u40_25
  1144  010E  0878               	movf	___awdiv@divisor+1,w
  1145  010F  027A               	subwf	___awdiv@dividend+1,w
  1146  0110  1D03               	skipz
  1147  0111  2914               	goto	u41_25
  1148  0112  0877               	movf	___awdiv@divisor,w
  1149  0113  0279               	subwf	___awdiv@dividend,w
  1150  0114                     u41_25:	
  1151  0114  1C03               	skipc
  1152  0115  291B               	goto	i1l764
  1153  0116  0877               	movf	___awdiv@divisor,w
  1154  0117  02F9               	subwf	___awdiv@dividend,f
  1155  0118  0878               	movf	___awdiv@divisor+1,w
  1156  0119  3BFA               	subwfb	___awdiv@dividend+1,f
  1157  011A  142B               	bsf	___awdiv@quotient,0
  1158  011B                     i1l764:	
  1159  011B  3001               	movlw	1
  1160  011C                     u42_25:	
  1161  011C  36F8               	lsrf	___awdiv@divisor+1,f
  1162  011D  0CF7               	rrf	___awdiv@divisor,f
  1163  011E  0B89               	decfsz	9,f
  1164  011F  291C               	goto	u42_25
  1165  0120  3001               	movlw	1
  1166  0121  02A9               	subwf	___awdiv@counter,f
  1167  0122  1D03               	btfss	3,2
  1168  0123  2909               	goto	i1l758
  1169  0124                     i1l768:	
  1170  0124  082A               	movf	___awdiv@sign,w
  1171  0125  1903               	btfsc	3,2
  1172  0126  292C               	goto	i1l772
  1173  0127  09AB               	comf	___awdiv@quotient,f
  1174  0128  09AC               	comf	___awdiv@quotient+1,f
  1175  0129  0AAB               	incf	___awdiv@quotient,f
  1176  012A  1903               	skipnz
  1177  012B  0AAC               	incf	___awdiv@quotient+1,f
  1178  012C                     i1l772:	
  1179  012C  082C               	movf	___awdiv@quotient+1,w
  1180  012D  00F8               	movwf	?___awdiv+1
  1181  012E  082B               	movf	___awdiv@quotient,w
  1182  012F  00F7               	movwf	?___awdiv
  1183  0130  0008               	return
  1184  0131                     __end_of___awdiv:	
  1185                           
  1186                           	psect	text6
  1187  01C2                     __ptext6:	
  1188 ;; *************** function _updateClock *****************
  1189 ;; Defined at:
  1190 ;;		line 122 in file "Main.c"
  1191 ;; Parameters:    Size  Location     Type
  1192 ;;		None
  1193 ;; Auto vars:     Size  Location     Type
  1194 ;;		None
  1195 ;; Return value:  Size  Location     Type
  1196 ;;		None               void
  1197 ;; Registers used:
  1198 ;;		wreg, status,2, status,0
  1199 ;; Tracked objects:
  1200 ;;		On entry : 0/0
  1201 ;;		On exit  : 0/0
  1202 ;;		Unchanged: 0/0
  1203 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1204 ;;      Params:         0       0       0       0       0       0       0       0
  1205 ;;      Locals:         0       0       0       0       0       0       0       0
  1206 ;;      Temps:          1       0       0       0       0       0       0       0
  1207 ;;      Totals:         1       0       0       0       0       0       0       0
  1208 ;;Total ram usage:        1 bytes
  1209 ;; Hardware stack levels used:    1
  1210 ;; This function calls:
  1211 ;;		Nothing
  1212 ;; This function is called by:
  1213 ;;		_onInterrupt
  1214 ;; This function uses a non-reentrant model
  1215 ;;
  1216                           
  1217                           
  1218                           ;psect for function _updateClock
  1219  01C2                     _updateClock:	
  1220                           
  1221                           ;Main.c: 123: timeSeconds++;
  1222                           
  1223                           ;incstack = 0
  1224                           ; Regs used in _updateClock: [wreg+status,2+status,0]
  1225  01C2  3001               	movlw	1
  1226  01C3  00F0               	movwf	??_updateClock
  1227  01C4  0870               	movf	??_updateClock,w
  1228  01C5  0020               	movlb	0	; select bank0
  1229  01C6  07A7               	addwf	_timeSeconds,f
  1230                           
  1231                           ;Main.c: 125: if (timeSeconds == 120) {
  1232  01C7  3078               	movlw	120
  1233  01C8  0627               	xorwf	_timeSeconds,w
  1234  01C9  1D03               	btfss	3,2
  1235  01CA  0008               	return
  1236                           
  1237                           ;Main.c: 126: timeSeconds = 0;
  1238  01CB  01A7               	clrf	_timeSeconds
  1239                           
  1240                           ;Main.c: 128: timeMinutes++;
  1241  01CC  3001               	movlw	1
  1242  01CD  00F0               	movwf	??_updateClock
  1243  01CE  0870               	movf	??_updateClock,w
  1244  01CF  07A6               	addwf	_timeMinutes,f
  1245                           
  1246                           ;Main.c: 130: if (timeMinutes == 60) {
  1247  01D0  303C               	movlw	60
  1248  01D1  0626               	xorwf	_timeMinutes,w
  1249  01D2  1D03               	btfss	3,2
  1250  01D3  0008               	return
  1251                           
  1252                           ;Main.c: 131: timeMinutes = 0;
  1253  01D4  01A6               	clrf	_timeMinutes
  1254                           
  1255                           ;Main.c: 133: timeHours++;
  1256  01D5  3001               	movlw	1
  1257  01D6  00F0               	movwf	??_updateClock
  1258  01D7  0870               	movf	??_updateClock,w
  1259  01D8  07A5               	addwf	_timeHours,f
  1260                           
  1261                           ;Main.c: 135: if (timeHours == 24) {
  1262  01D9  3018               	movlw	24
  1263  01DA  0625               	xorwf	_timeHours,w
  1264  01DB  1D03               	btfss	3,2
  1265  01DC  0008               	return
  1266                           
  1267                           ;Main.c: 136: timeHours = 0;
  1268  01DD  01A5               	clrf	_timeHours
  1269  01DE  0008               	return
  1270  01DF                     __end_of_updateClock:	
  1271                           
  1272                           	psect	text7
  1273  01A2                     __ptext7:	
  1274 ;; *************** function _multiplexDisplay *****************
  1275 ;; Defined at:
  1276 ;;		line 143 in file "Main.c"
  1277 ;; Parameters:    Size  Location     Type
  1278 ;;		None
  1279 ;; Auto vars:     Size  Location     Type
  1280 ;;		None
  1281 ;; Return value:  Size  Location     Type
  1282 ;;		None               void
  1283 ;; Registers used:
  1284 ;;		wreg, fsr1l, fsr1h, status,2, status,0
  1285 ;; Tracked objects:
  1286 ;;		On entry : 0/0
  1287 ;;		On exit  : 0/0
  1288 ;;		Unchanged: 0/0
  1289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6
  1290 ;;      Params:         0       0       0       0       0       0       0       0
  1291 ;;      Locals:         0       0       0       0       0       0       0       0
  1292 ;;      Temps:          1       0       0       0       0       0       0       0
  1293 ;;      Totals:         1       0       0       0       0       0       0       0
  1294 ;;Total ram usage:        1 bytes
  1295 ;; Hardware stack levels used:    1
  1296 ;; This function calls:
  1297 ;;		Nothing
  1298 ;; This function is called by:
  1299 ;;		_onInterrupt
  1300 ;; This function uses a non-reentrant model
  1301 ;;
  1302                           
  1303                           
  1304                           ;psect for function _multiplexDisplay
  1305  01A2                     _multiplexDisplay:	
  1306                           
  1307                           ;Main.c: 144: displayDigit++;
  1308                           
  1309                           ;incstack = 0
  1310                           ; Regs used in _multiplexDisplay: [wreg+fsr1l+fsr1h+status,2+status,0]
  1311  01A2  3001               	movlw	1
  1312  01A3  00F0               	movwf	??_multiplexDisplay
  1313  01A4  0870               	movf	??_multiplexDisplay,w
  1314  01A5  0020               	movlb	0	; select bank0
  1315  01A6  07A8               	addwf	_displayDigit,f
  1316                           
  1317                           ;Main.c: 147: if (displayDigit > 5) {
  1318  01A7  3006               	movlw	6
  1319  01A8  0228               	subwf	_displayDigit,w
  1320  01A9  1803               	btfsc	3,0
  1321                           
  1322                           ;Main.c: 148: displayDigit = 0;
  1323  01AA  01A8               	clrf	_displayDigit
  1324                           
  1325                           ;Main.c: 149: }
  1326                           ;Main.c: 152: LATA = 0x00;
  1327  01AB  0022               	movlb	2	; select bank2
  1328  01AC  018C               	clrf	12	;volatile
  1329                           
  1330                           ;Main.c: 153: LATB = 0x00;
  1331  01AD  018D               	clrf	13	;volatile
  1332                           
  1333                           ;Main.c: 156: LATA = displayValue[displayDigit];
  1334  01AE  0020               	movlb	0	; select bank0
  1335  01AF  0828               	movf	_displayDigit,w
  1336  01B0  3E20               	addlw	(low (_displayValue| 0))& (0+255)
  1337  01B1  0086               	movwf	6
  1338  01B2  0187               	clrf	7
  1339  01B3  0801               	movf	1,w
  1340  01B4  0022               	movlb	2	; select bank2
  1341  01B5  008C               	movwf	12	;volatile
  1342                           
  1343                           ;Main.c: 157: LATB = 1 << displayDigit;
  1344  01B6  3001               	movlw	1
  1345  01B7  00F0               	movwf	??_multiplexDisplay
  1346  01B8  0020               	movlb	0	; select bank0
  1347  01B9  0A28               	incf	_displayDigit,w
  1348  01BA  29BC               	goto	u58_24
  1349  01BB                     u58_25:	
  1350  01BB  35F0               	lslf	??_multiplexDisplay,f
  1351  01BC                     u58_24:	
  1352  01BC  0B89               	decfsz	9,f
  1353  01BD  29BB               	goto	u58_25
  1354  01BE  0870               	movf	??_multiplexDisplay,w
  1355  01BF  0022               	movlb	2	; select bank2
  1356  01C0  008D               	movwf	13	;volatile
  1357  01C1  0008               	return
  1358  01C2                     __end_of_multiplexDisplay:	
  1359  007E                     btemp	set	126	;btemp
  1360  007E                     int$flags	set	126
  1361  007E                     wtemp	set	126
  1362  007E                     wtemp0	set	126
  1363  0080                     wtemp1	set	128
  1364  0082                     wtemp2	set	130
  1365  0084                     wtemp3	set	132
  1366  0086                     wtemp4	set	134
  1367  0088                     wtemp5	set	136
  1368  007F                     wtemp6	set	127
  1369  007E                     ttemp	set	126
  1370  007E                     ttemp0	set	126
  1371  0081                     ttemp1	set	129
  1372  0084                     ttemp2	set	132
  1373  0087                     ttemp3	set	135
  1374  007F                     ttemp4	set	127
  1375  007E                     ltemp	set	126
  1376  007E                     ltemp0	set	126
  1377  0082                     ltemp1	set	130
  1378  0086                     ltemp2	set	134
  1379  0080                     ltemp3	set	128


Data Sizes:
    Strings     0
    Constant    11
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80      7      16
    BANK1            80      0       0
    BANK2            80      0       0
    BANK3            80      0       0
    BANK4            80      0       0
    BANK5            80      0       0
    BANK6            16      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _onInterrupt in COMMON

    _updateDisplay->___awdiv
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _onInterrupt in BANK0

    _onInterrupt->_updateDisplay
    _updateDisplay->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _onInterrupt in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _onInterrupt in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _onInterrupt in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _onInterrupt in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _onInterrupt in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _onInterrupt in BANK6

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _onInterrupt                                          2     2      0    1232
                                             12 COMMON     2     2      0
                   _multiplexDisplay
                        _updateClock
                      _updateDisplay
 ---------------------------------------------------------------------------------
 (3) _updateDisplay                                        3     3      0    1232
                                              4 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (4) ___awmod                                              7     3      4     720
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (4) ___awdiv                                              9     5      4     512
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) _updateClock                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _multiplexDisplay                                     1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup

 _onInterrupt (ROOT)
   _multiplexDisplay
   _updateClock
   _updateDisplay
     ___awdiv
       ___awmod (ARG)
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             1F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      E       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      1E       4        0.0%
BITBANK0            50      0       0       5        0.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      7      10       6       20.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITBANK3            50      0       0      11        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BANK3               50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITBANK4            50      0       0      13        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BANK4               50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITBANK5            50      0       0      15        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BANK5               50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITBANK6            10      0       0      17        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BANK6               10      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
DATA                 0      0      1E      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.35 build -356382666 
Symbol Table                                                                                   Wed Jul 13 15:39:04 2016

              __CFG_CP$OFF 0000                         l64 01ED               ___awdiv@sign 002A  
                      _RB6 006E                        _RB7 006F                        _PR2 001B  
             __CFG_CPD$OFF 0000               ___awmod@sign 0076               __CFG_BORV$HI 0000  
                      wreg 0009               __CFG_IESO$ON 0000               __CFG_LVP$OFF 0000  
                     _LATA 010C                       _LATB 010D                       _PIE1 0091  
                     _PIR1 0011                       i1l92 003C             ?_updateDisplay 0070  
                     _WPUA 020C                       _WPUB 020D               __CFG_WRT$OFF 0000  
            __CFG_FCMEN$ON 0000                       _main 01EA                       fsr0h 0005  
                     fsr1h 0007                       fsr0l 0004                       indf0 0000  
                     indf1 0001                       fsr1l 0006                       btemp 007E  
            __CFG_BOREN$ON 0000                       ltemp 007E                       start 0041  
                     ttemp 007E                       wtemp 007E              __CFG_MCLRE$ON 0000  
             ?_onInterrupt 0070                      ?_main 0070            __end_of___awdiv 0131  
            __CFG_WDTE$OFF 0000            __end_of___awmod 0176            ___awdiv@divisor 0077  
                    _T1CON 0018                      _T2CON 001C                      i1l810 0171  
                    i1l802 0160                      i1l740 00EA                      i1l806 0169  
                    i1l902 002E                      i1l746 00F5                      i1l772 012C  
                    i1l764 011B                      i1l756 00FD                      i1l758 0109  
                    i1l862 005C                      i1l768 0124                      i1l784 013B  
                    i1l864 005D                      i1l890 001C                      i1l796 0148  
                    i1l788 0142                      i1l884 0016                      i1l798 0154  
          ___awdiv@counter 0029                      u40_25 010A                      _TMR1H 0017  
                    u41_25 0114                      _TMR1L 0016                      u42_25 011C  
                    u50_25 015A                      u51_25 0161                      u38_25 0100  
                    u48_25 014B                      _TRISA 008C                      _TRISB 008D  
                    u58_24 01BC                      u58_25 01BB                      _setup 0176  
                    ltemp0 007E                      ltemp1 0082                      ltemp2 0086  
                    ltemp3 0080                      ttemp0 007E                      ttemp1 0081  
                    ttemp2 0084                      ttemp3 0087                      ttemp4 007F  
                    status 0003                      wtemp0 007E                      wtemp1 0080  
                    wtemp2 0082                      wtemp3 0084                      wtemp4 0086  
                    wtemp5 0088                      wtemp6 007F            __initialization 0043  
             __end_of_main 01EE                     ??_main 0030             __CFG_PLLEN$OFF 0000  
__size_of_multiplexDisplay 0020            ??_updateDisplay 002D           ___awdiv@dividend 0079  
                   ?_setup 0070                     _ANSELA 018C                     _ANSELB 018D  
                   _INTCON 000B                     _OSCCON 0099                     _TMR0IF 005A  
                   _TMR1IF 0088                     _TMR2IF 0089             __CFG_PWRTE$OFF 0000  
                ??___awdiv 007B             __CFG_STVREN$ON 0000                  ??___awmod 0074  
         ___awdiv@quotient 002B            ___awmod@divisor 0070            ___awmod@counter 0075  
  __end_of__initialization 004C               ?_updateClock 0070             __pcstackCOMMON 0070  
            __end_of_setup 01A2       __size_of_onInterrupt 003D                    ??_setup 0030  
               __pbssBANK0 0020            __CFG_VCAPEN$OFF 0000                 __pmaintext 01EA  
               __pintentry 0004           _multiplexDisplay 01A2                    ___awdiv 00DF  
                  ___awmod 0131                    __ptext1 0176                    __ptext3 0050  
                  __ptext4 0131                    __ptext5 00DF                    __ptext6 01C2  
                  __ptext7 01A2           ___awmod@dividend 0072       end_of_initialization 004C  
     __size_of_updateClock 001D               __pstringtext 01DF               _displayDigit 0028  
             _displayValue 0020           __CFG_FOSC$INTOSC 0000      __end_of_updateDisplay 00DF  
      start_initialization 0043   __end_of_multiplexDisplay 01C2              ??_onInterrupt 007C  
                ___latbits 0001              __pcstackBANK0 0029            _DISPLAY_MAPPING 01DF  
                 ?___awdiv 0077                   ?___awmod 0070        __end_of_onInterrupt 0041  
           __size_of_setup 002C                  _timeHours 0025    __end_of_DISPLAY_MAPPING 01EA  
            ??_updateClock 0070                _onInterrupt 0004           __size_of___awdiv 0052  
         __size_of___awmod 0045              __size_of_main 0004          ?_multiplexDisplay 0070  
                 int$flags 007E         ??_multiplexDisplay 0070        __end_of_updateClock 01DF  
   __size_of_updateDisplay 008F                   intlevel1 0000          __CFG_CLKOUTEN$OFF 0000  
              _timeMinutes 0026                _timeSeconds 0027                 _OPTION_REG 0095  
            _updateDisplay 0050                _updateClock 01C2  
